Task: Refine the code provided to ensure code quality and best practices. Use `black` for formatting and `flake8` for linting. Provide the refactored code as your response. Use the 'run_unit_tests' function to test the code., Context: {'code': 'Task: Implement an API for the user to get real-time insights based on the vision document. Use the \'scrape_web_content\' and \'analyze_data\' functions., Context: {\'vision_document\': \'Task: Maintain the vision document based on the provided text, Context: {\\\'vision_document\\\': \\\'Task: Maintain the vision document based on the provided text, Context: {\\\\\\\'vision_document\\\\\\\': \\\\\\\'Task: Maintain the vision document based on the provided text, Context: {\\\\\\\\\\\\\\\'vision_document\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\'### Comprehensive Vision for Omnivia V2\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Objective:**\\\\\\\\\\\\\\\\nTo create a highly interactive, visually compelling, and AI-powered web application that integrates real-time data insights directly into the creative and decision-making processes, transforming how businesses make informed decisions and craft their messaging.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Core Pillars of Omnivia V2\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 1. **User Experience and User Interface (UX/UI)**\\\\\\\\\\\\\\\\n- **Intuitive and Dynamic Interface**: \\\\\\\\\\\\\\\\n  - A blend of comic book aesthetics and sophisticated editorial layouts to engage users visually and emotionally.\\\\\\\\\\\\\\\\n  - Highly interactive UI with touch-friendly controls, enabling users to manipulate and customize every element with ease, akin to using an Apple Pencil on an iPad.\\\\\\\\\\\\\\\\n- **Interactive Editing**:\\\\\\\\\\\\\\\\n  - Users can click on elements such as text, numbers, and images to edit them in place.\\\\\\\\\\\\\\\\n  - Drag-and-drop functionality for rearranging elements.\\\\\\\\\\\\\\\\n  - Gesture-based interactions for a seamless and intuitive user experience.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 2. **Data Layer**\\\\\\\\\\\\\\\\n- **Real-Time Data Insights**:\\\\\\\\\\\\\\\\n  - Integration of core features like Demand Meter, Price Sensitivity, and Live Polling directly into the creative workflow.\\\\\\\\\\\\\\\\n  - Real-time visualization of data changes and their potential impact on business outcomes.\\\\\\\\\\\\\\\\n- **Customizable Data Handling**:\\\\\\\\\\\\\\\\n  - Deep customization options for data aggregation, grouping, and visualization.\\\\\\\\\\\\\\\\n  - Users can select different aggregation types (sum, percentage, etc.) and customize how data is grouped and displayed.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 3. **Visual Layer**\\\\\\\\\\\\\\\\n- **Rich Library of Templates**:\\\\\\\\\\\\\\\\n  - A diverse set of templates designed to be visually impactful and emotionally engaging, similar to high-quality comic book covers and editorial magazine layouts.\\\\\\\\\\\\\\\\n  - Placeholders for data and content, allowing users to create stunning visuals effortlessly.\\\\\\\\\\\\\\\\n- **Emphasis on Aesthetics**:\\\\\\\\\\\\\\\\n  - Every visual representation is crafted with care to evoke emotion and ensure aesthetic appeal.\\\\\\\\\\\\\\\\n  - Human-centered design principles to make data and AI services feel relatable and intuitive.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 4. **AI Processing Layer**\\\\\\\\\\\\\\\\n- **Network of AI Agents**:\\\\\\\\\\\\\\\\n  - A robust network of AI agents to handle various tasks such as data analysis, content generation, and asset replacement.\\\\\\\\\\\\\\\\n  - These agents work together seamlessly to provide high-quality, consistent outputs.\\\\\\\\\\\\\\\\n- **Smart Content Generation**:\\\\\\\\\\\\\\\\n  - AI modules that generate content such as headlines, intros, and actionable insights in a smart brevity format.\\\\\\\\\\\\\\\\n  - Context-aware AI to tailor content generation based on user inputs and preferences.\\\\\\\\\\\\\\\\n- **Inference and Standardization**:\\\\\\\\\\\\\\\\n  - AI-powered inference to understand user intentions and generate necessary code or assets.\\\\\\\\\\\\\\\\n  - Standardized processing of requests to ensure consistency in quality and performance.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 5. **Interaction Layer**\\\\\\\\\\\\\\\\n- **Modular Customization**:\\\\\\\\\\\\\\\\n  - A modular system allowing users to easily swap out or customize different components.\\\\\\\\\\\\\\\\n  - Ensuring each component is highly interactive and customizable with minimal code requirements.\\\\\\\\\\\\\\\\n- **Collaborative Environment**:\\\\\\\\\\\\\\\\n  - Tools to facilitate real-time collaboration among team members.\\\\\\\\\\\\\\\\n  - Integration of AI insights to aid in decision-making and streamline cross-functional workflows.\\\\\\\\\\\\\\\\n- **Code Minimal Approach**:\\\\\\\\\\\\\\\\n  - Providing users with intuitive interfaces and controls to make changes without needing to write code.\\\\\\\\\\\\\\\\n  - Simplifying complex data transformations and visual customizations through user-friendly controls.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Implementation Roadmap\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### **Phase 1: Conceptualization and Prototyping**\\\\\\\\\\\\\\\\n- **Wireframing**:\\\\\\\\\\\\\\\\n  - Develop detailed wireframes showcasing the layout and interactions.\\\\\\\\\\\\\\\\n  - Focus on user scenarios and workflows to ensure intuitive interactions.\\\\\\\\\\\\\\\\n- **Prototyping**:\\\\\\\\\\\\\\\\n  - Create interactive prototypes to visualize user journeys and test usability.\\\\\\\\\\\\\\\\n  - Gather feedback from initial user testing to refine interactions.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### **Phase 2: Development and Integration**\\\\\\\\\\\\\\\\n- **Frontend Development**:\\\\\\\\\\\\\\\\n  - Build modular components in Streamlit for interactive elements.\\\\\\\\\\\\\\\\n  - Implement dynamic content handling for real-time updates.\\\\\\\\\\\\\\\\n- **Backend Development**:\\\\\\\\\\\\\\\\n  - Develop robust APIs for data management, AI interactions, and user data handling.\\\\\\\\\\\\\\\\n  - Integrate AI models for real-time insights and content generation.\\\\\\\\\\\\\\\\n- **AI Integration**:\\\\\\\\\\\\\\\\n  - Ensure AI models are optimized for performance and accuracy.\\\\\\\\\\\\\\\\n  - Implement smart content generation and contextual AI insights.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### **Phase 3: Testing and Quality Assurance**\\\\\\\\\\\\\\\\n- **Unit and Integration Testing**:\\\\\\\\\\\\\\\\n  - Conduct thorough testing to ensure functionality and performance.\\\\\\\\\\\\\\\\n  - Focus on individual components and the overall system integration.\\\\\\\\\\\\\\\\n- **User Testing**:\\\\\\\\\\\\\\\\n  - Conduct user testing sessions to gather feedback and iterate on the design.\\\\\\\\\\\\\\\\n  - Ensure the application meets user expectations and is easy to use.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### **Phase 4: Deployment and Scalability**\\\\\\\\\\\\\\\\n- **Deployment**:\\\\\\\\\\\\\\\\n  - Deploy the application on scalable platforms like Replit or Streamlit Sharing.\\\\\\\\\\\\\\\\n  - Ensure the deployment process is automated and efficient.\\\\\\\\\\\\\\\\n- **Scalability**:\\\\\\\\\\\\\\\\n  - Utilize cloud services (e.g., AWS, Azure) to manage resources and scale the application as needed.\\\\\\\\\\\\\\\\n  - Implement monitoring and optimization to handle increasing user loads and data demands.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Vision Summary\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nOmnivia V2 aims to revolutionize how businesses make data-driven decisions by integrating real-time AI insights directly into the creative process. With a focus on a visually compelling and highly interactive user experience, Omnivia V2 will enable users to craft messages and make decisions with unprecedented precision and impact. By leveraging a network of AI agents, a modular and intuitive interface, and deep customization options, Omnivia V2 will set a new standard for data storytelling and business intelligence.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Comprehensive Vision for Omnivia V2\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Objective:**\\\\\\\\\\\\\\\\nTo create a highly interactive, visually compelling, and AI-powered web application that integrates real-time data insights directly into the creative and decision-making processes, transforming how businesses make informed decisions and craft their messaging.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Core Pillars of Omnivia V2\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 1. **User Experience and User Interface (UX/UI)**\\\\\\\\\\\\\\\\n- **Intuitive and Dynamic Interface**: \\\\\\\\\\\\\\\\n  - A blend of comic book aesthetics and sophisticated editorial layouts to engage users visually and emotionally.\\\\\\\\\\\\\\\\n  - Highly interactive UI with touch-friendly controls, enabling users to manipulate and customize every element with ease, akin to using an Apple Pencil on an iPad.\\\\\\\\\\\\\\\\n- **Interactive Editing**:\\\\\\\\\\\\\\\\n  - Users can click on elements such as text, numbers, and images to edit them in place.\\\\\\\\\\\\\\\\n  - Drag-and-drop functionality for rearranging elements.\\\\\\\\\\\\\\\\n  - Gesture-based interactions for a seamless and intuitive user experience.\\\\\\\\\\\\\\\\n- **Customization Options**:\\\\\\\\\\\\\\\\n  - Provide deep customization for each element, including data points, text styles, images, and layout options. Ensure that these customizations are accessible through simple and intuitive controls.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 2. **Data Layer**\\\\\\\\\\\\\\\\n- **Real-Time Data Insights**:\\\\\\\\\\\\\\\\n  - Integration of core features like Demand Meter, Price Sensitivity, and Live Polling directly into the creative workflow.\\\\\\\\\\\\\\\\n  - Real-time visualization of data changes and their potential impact on business outcomes.\\\\\\\\\\\\\\\\n- **Customizable Data Handling**:\\\\\\\\\\\\\\\\n  - Deep customization options for data aggregation, grouping, and visualization.\\\\\\\\\\\\\\\\n  - Users can select different aggregation types (sum, percentage, etc.) and customize how data is grouped and displayed.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 3. **Visual Layer**\\\\\\\\\\\\\\\\n- **Rich Library of Templates**:\\\\\\\\\\\\\\\\n  - A diverse set of templates designed to be visually impactful and emotionally engaging, similar to high-quality comic book covers and editorial magazine layouts.\\\\\\\\\\\\\\\\n  - Placeholders for data and content, allowing users to create stunning visuals effortlessly.\\\\\\\\\\\\\\\\n- **Emphasis on Aesthetics**:\\\\\\\\\\\\\\\\n  - Every visual representation is crafted with care to evoke emotion and ensure aesthetic appeal.\\\\\\\\\\\\\\\\n  - Human-centered design principles to make data and AI services feel relatable and intuitive.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 4. **AI Processing Layer**\\\\\\\\\\\\\\\\n- **Network of AI Agents**:\\\\\\\\\\\\\\\\n  - A robust network of AI agents to handle various tasks such as data analysis, content generation, and asset replacement.\\\\\\\\\\\\\\\\n  - These agents work together seamlessly to provide high-quality, consistent outputs.\\\\\\\\\\\\\\\\n- **Smart Content Generation**:\\\\\\\\\\\\\\\\n  - AI modules that generate content such as headlines, intros, and actionable insights in a smart brevity format.\\\\\\\\\\\\\\\\n  - Context-aware AI to tailor content generation based on user inputs and preferences.\\\\\\\\\\\\\\\\n- **Inference and Standardization**:\\\\\\\\\\\\\\\\n  - AI-powered inference to understand user intentions and generate necessary code or assets.\\\\\\\\\\\\\\\\n  - Standardized processing of requests to ensure consistency in quality and performance.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 5. **Interaction Layer**\\\\\\\\\\\\\\\\n- **Modular Customization**:\\\\\\\\\\\\\\\\n  - A modular system allowing users to easily swap out or customize different components.\\\\\\\\\\\\\\\\n  - Ensuring each component is highly interactive and customizable with minimal code requirements.\\\\\\\\\\\\\\\\n- **Collaborative Environment**:\\\\\\\\\\\\\\\\n  - Tools to facilitate real-time collaboration among team members.\\\\\\\\\\\\\\\\n  - Integration of AI insights to aid in decision-making and streamline cross-functional workflows.\\\\\\\\\\\\\\\\n- **Code Minimal Approach**:\\\\\\\\\\\\\\\\n  - Providing users with intuitive interfaces and controls to make changes without needing to write code.\\\\\\\\\\\\\\\\n  - Simplifying complex data transformations and visual customizations through user-friendly controls.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Implementation Roadmap\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### **Phase 1: Conceptualization and Prototyping**\\\\\\\\\\\\\\\\n- **Wireframing**:\\\\\\\\\\\\\\\\n  - Develop detailed wireframes showcasing the layout and interactions. Focus on user scenarios and workflows to ensure intuitive interactions.\\\\\\\\\\\\\\\\n- **Prototyping**:\\\\\\\\\\\\\\\\n  - Create interactive prototypes to visualize user journeys and test usability. Gather feedback from initial user testing to refine interactions.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### **Phase 2: Development and Integration**\\\\\\\\\\\\\\\\n- **Frontend Development**:\\\\\\\\\\\\\\\\n  - Build modular components in Streamlit for interactive elements. Implement dynamic content handling for real-time updates.\\\\\\\\\\\\\\\\n- **Backend Development**:\\\\\\\\\\\\\\\\n  - Develop robust APIs for data management, AI interactions, and user data handling. Integrate AI models for real-time insights and content generation.\\\\\\\\\\\\\\\\n- **AI Integration**:\\\\\\\\\\\\\\\\n  - Ensure AI models are optimized for performance and accuracy. Implement smart content generation and contextual AI insights.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### **Phase 3: Testing and Quality Assurance**\\\\\\\\\\\\\\\\n- **Unit and Integration Testing**:\\\\\\\\\\\\\\\\n  - Conduct thorough testing to ensure functionality and performance. Focus on individual components and the overall system integration.\\\\\\\\\\\\\\\\n- **User Testing**:\\\\\\\\\\\\\\\\n  - Conduct user testing sessions to gather feedback and iterate on the design. Ensure the application meets user expectations and is easy to use.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### **Phase 4: Deployment and Scaling**\\\\\\\\\\\\\\\\n- **Deployment**:\\\\\\\\\\\\\\\\n  - Deploy the application on scalable platforms like AWS or Azure. Ensure the deployment process is automated and efficient.\\\\\\\\\\\\\\\\n- **Scalability**:\\\\\\\\\\\\\\\\n  - Utilize cloud services (e.g., AWS, Azure) to manage resources and scale the application as needed. Implement monitoring and optimization to handle increasing user loads and data demands.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Supplemental Vision Document: LLM Evaluation Engine\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n**Objective:**\\\\\\\\\\\\\\\\nTo develop a cost-effective, high-quality LLM evaluation engine that maximizes efficiency by leveraging Andrew Ng’s agentic workflow philosophy, focusing on iterative refinement and agent collaboration. This engine aims to deliver superior AI-generated insights and content while minimizing operational costs.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Core Components\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 1. **Agentic Workflow Philosophy**\\\\\\\\\\\\\\\\n- **Reflection**: Implementing a feedback loop where the LLM evaluates and critiques its own output to improve quality iteratively.\\\\\\\\\\\\\\\\n- **Tool Use**: Equipping the LLM with external tools (e.g., unit tests, web searches) to validate and refine its output.\\\\\\\\\\\\\\\\n- **Planning**: Breaking down tasks into smaller, manageable steps and planning the execution path to ensure comprehensive results.\\\\\\\\\\\\\\\\n- **Multi-Agent Collaboration**: Utilizing multiple AI agents to interact and critique each other’s outputs, leading to higher-quality results.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 2. **Evaluation Engine Architecture**\\\\\\\\\\\\\\\\n- **Initial Generation Agent**: Generates the first draft of the output based on user inputs and initial prompts.\\\\\\\\\\\\\\\\n- **Critique Agent**: Reviews the initial output, providing constructive criticism on aspects such as correctness, style, and relevance.\\\\\\\\\\\\\\\\n- **Refinement Agent**: Uses the critique to refine and improve the output, iterating as necessary to achieve the desired quality.\\\\\\\\\\\\\\\\n- **Tool Integration**: Incorporates tools for additional validation, such as running code through tests or verifying facts via web searches.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Implementation Steps\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### Phase 1: Conceptual Design\\\\\\\\\\\\\\\\n- **Wireframing and Prototyping**:\\\\\\\\\\\\\\\\n  - **Wireframes**: Design wireframes showing the interaction between agents and the user interface for feedback and refinement.\\\\\\\\\\\\\\\\n  - **Prototypes**: Develop interactive prototypes to test the user experience and refine the workflow.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### Phase 2: Development\\\\\\\\\\\\\\\\n- **Frontend Development**:\\\\\\\\\\\\\\\\n  - **Streamlit Components**: Build modular components for user interaction and feedback integration.\\\\\\\\\\\\\\\\n  - **Dynamic Content Handling**: Implement real-time updates and feedback loops in the UI.\\\\\\\\\\\\\\\\n- **Backend Development**:\\\\\\\\\\\\\\\\n  - **API Development**: Create APIs for managing agent interactions, feedback loops, and tool integration.\\\\\\\\\\\\\\\\n  - **AI Model Integration**: Integrate AI models for initial generation, critique, and refinement tasks.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### Phase 3: Testing and Optimization\\\\\\\\\\\\\\\\n- **Unit and Integration Testing**: Ensure each component functions correctly and integrates seamlessly with others.\\\\\\\\\\\\\\\\n- **User Testing**: Gather feedback from real users to refine the interaction flow and improve usability.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### Phase 4: Deployment and Scaling\\\\\\\\\\\\\\\\n- **Deployment**: Deploy the application on scalable platforms like AWS or Azure.\\\\\\\\\\\\\\\\n- **Scalability**: Ensure the system can handle increasing loads by optimizing resource usage and implementing auto-scaling.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Cost Optimization Strategies\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 1. **Efficient Use of LLMs**\\\\\\\\\\\\\\\\n- **Selective Deployment**: Use high-capacity LLMs only for critical tasks, while simpler models handle routine evaluations.\\\\\\\\\\\\\\\\n- **Batch Processing**: Aggregate multiple requests into batches to optimize processing time and reduce costs.\\\\\\\\\\\\\\\\n- **Caching and Reuse**: Cache frequently used outputs and intermediate results to avoid redundant computations.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### 2. **Agentic Workflow Optimization**\\\\\\\\\\\\\\\\n- **Iterative Refinement**: Employ iterative cycles to refine outputs, reducing the need for extensive initial processing.\\\\\\\\\\\\\\\\n- **Tool Integration**: Use specialized tools for validation and refinement to offload tasks from the primary LLM.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Entity-Relationship Diagram (ERD) and Swimlane Diagram\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### ERD Components\\\\\\\\\\\\\\\\n1. **User**: Provides initial input and receives final output.\\\\\\\\\\\\\\\\n2. **Initial Generation Agent**: Generates the first draft.\\\\\\\\\\\\\\\\n3. **Critique Agent**: Reviews and critiques the output.\\\\\\\\\\\\\\\\n4. **Refinement Agent**: Refines the output based on feedback.\\\\\\\\\\\\\\\\n5. **Tool Integration**: Validates and refines the output using external tools.\\\\\\\\\\\\\\\\n6. **Data Storage**: Stores final outputs and feedback for further use.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n#### Swimlane Diagram\\\\\\\\\\\\\\\\n- **Swimlanes**: User, Initial Generation Agent, Critique Agent, Refinement Agent, Tool Integration, Data Storage.\\\\\\\\\\\\\\\\n- **Process Flow**:\\\\\\\\\\\\\\\\n  - User inputs prompt.\\\\\\\\\\\\\\\\n  - Initial Generation Agent creates initial output.\\\\\\\\\\\\\\\\n  - Critique Agent reviews and critiques output.\\\\\\\\\\\\\\\\n  - Refinement Agent refines output based on critique.\\\\\\\\\\\\\\\\n  - Tool Integration validates refined output.\\\\\\\\\\\\\\\\n  - Data Storage stores final output and feedback.\\\\\\\\\\\\\\\\n  - User receives feedback and final output.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n### Conclusion\\\\\\\\\\\\\\\\nBy integrating Andrew Ng’s agentic workflow philosophy into the core of the LLM evaluation engine, Omnivia V2 can achieve a balance between cost efficiency and output quality. This approach ensures that AI-generated insights and content are not only high-quality but also delivered in a cost-effective manner, aligning with Omnivia’s mission to provide actionable, real-time data insights in an engaging and intuitive format. This comprehensive vision for Omnivia V2 aims to revolutionize how businesses\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'repo_document\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\'Repository Summary:\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nThe GitHub repository brewedindices/omniviastreamlit provides a web application using the Streamlit framework. The project includes detailed setup instructions, development guidelines, and key features, making it a robust starting point for building modern web applications.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nKey Features:\\\\\\\\\\\\\\\\n- **Streamlit**: Framework for building interactive web applications in Python.\\\\\\\\\\\\\\\\n- **Python**: Programming language used for application logic.\\\\\\\\\\\\\\\\n- **Pandas**: Data manipulation and analysis library.\\\\\\\\\\\\\\\\n- **NumPy**: Library for numerical computations.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nInstructions:\\\\\\\\\\\\\\\\n1. **Clone the Repository**: `git clone https://github.com/brewedindices/omniviastreamlit`\\\\\\\\\\\\\\\\n2. **Setup Environment**: Follow the detailed setup instructions provided in the repository to configure the necessary dependencies and environment variables.\\\\\\\\\\\\\\\\n3. **Run the Application**: Use pip to install dependencies and start the application.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nTable of Contents:\\\\\\\\\\\\\\\\nDirectory: .\\\\\\\\\\\\\\\\n  - .gitignore\\\\\\\\\\\\\\\\n  - replit.nix\\\\\\\\\\\\\\\\n  - config.toml\\\\\\\\\\\\\\\\n  - .breakpoints\\\\\\\\\\\\\\\\n  - pyproject.toml\\\\\\\\\\\\\\\\n  - poetry.lock\\\\\\\\\\\\\\\\n  - .replit\\\\\\\\\\\\\\\\n  - app.py\\\\\\\\\\\\\\\\n  - loading_screen.css\\\\\\\\\\\\\\\\n  - example.py\\\\\\\\\\\\\\\\nDirectory: modules\\\\\\\\\\\\\\\\n  - modules/dashboard.py\\\\\\\\\\\\\\\\n  - modules/visualizations.py\\\\\\\\\\\\\\\\n  - modules/narrative.py\\\\\\\\\\\\\\\\n  - modules/live_polling.py\\\\\\\\\\\\\\\\n  - modules/price_sensitivity.py\\\\\\\\\\\\\\\\n  - modules/old.py\\\\\\\\\\\\\\\\n  - modules/analytics.py\\\\\\\\\\\\\\\\n  - modules/__init__.py\\\\\\\\\\\\\\\\n  - modules/results.py\\\\\\\\\\\\\\\\n  - modules/personas.py\\\\\\\\\\\\\\\\n  - modules/questions.py\\\\\\\\\\\\\\\\n  - modules/utils.py\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Directory: . ---\\\\\\\\\\\\\\\\n--- Start of .gitignore ---\\\\\\\\\\\\\\\\n# Byte-compiled / optimized / DLL files\\\\\\\\\\\\\\\\n__pycache__/\\\\\\\\\\\\\\\\n*.py[cod]\\\\\\\\\\\\\\\\n*$py.class\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# C extensions\\\\\\\\\\\\\\\\n*.so\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Distribution / packaging\\\\\\\\\\\\\\\\n.Python\\\\\\\\\\\\\\\\nbuild/\\\\\\\\\\\\\\\\ndevelop-eggs/\\\\\\\\\\\\\\\\ndist/\\\\\\\\\\\\\\\\ndownloads/\\\\\\\\\\\\\\\\neggs/\\\\\\\\\\\\\\\\n.eggs/\\\\\\\\\\\\\\\\nlib/\\\\\\\\\\\\\\\\nlib64/\\\\\\\\\\\\\\\\nparts/\\\\\\\\\\\\\\\\nsdist/\\\\\\\\\\\\\\\\nvar/\\\\\\\\\\\\\\\\nwheels/\\\\\\\\\\\\\\\\nshare/python-wheels/\\\\\\\\\\\\\\\\n*.egg-info/\\\\\\\\\\\\\\\\n.installed.cfg\\\\\\\\\\\\\\\\n*.egg\\\\\\\\\\\\\\\\nMANIFEST\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# PyInstaller\\\\\\\\\\\\\\\\n#  Usually these files are written by a python script from a template\\\\\\\\\\\\\\\\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\\\\\\\\\\\\\\\\n*.manifest\\\\\\\\\\\\\\\\n*.spec\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Installer logs\\\\\\\\\\\\\\\\npip-log.txt\\\\\\\\\\\\\\\\npip-delete-this-directory.txt\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Unit test / coverage reports\\\\\\\\\\\\\\\\nhtmlcov/\\\\\\\\\\\\\\\\n.tox/\\\\\\\\\\\\\\\\n.nox/\\\\\\\\\\\\\\\\n.coverage\\\\\\\\\\\\\\\\n.coverage.*\\\\\\\\\\\\\\\\n.cache\\\\\\\\\\\\\\\\nnosetests.xml\\\\\\\\\\\\\\\\ncoverage.xml\\\\\\\\\\\\\\\\n*.cover\\\\\\\\\\\\\\\\n*.py,cover\\\\\\\\\\\\\\\\n.hypothesis/\\\\\\\\\\\\\\\\n.pytest_cache/\\\\\\\\\\\\\\\\ncover/\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Translations\\\\\\\\\\\\\\\\n*.mo\\\\\\\\\\\\\\\\n*.pot\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Django stuff:\\\\\\\\\\\\\\\\n*.log\\\\\\\\\\\\\\\\nlocal_settings.py\\\\\\\\\\\\\\\\ndb.sqlite3\\\\\\\\\\\\\\\\ndb.sqlite3-journal\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Flask stuff:\\\\\\\\\\\\\\\\ninstance/\\\\\\\\\\\\\\\\n.webassets-cache\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Scrapy stuff:\\\\\\\\\\\\\\\\n.scrapy\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Sphinx documentation\\\\\\\\\\\\\\\\ndocs/_build/\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# PyBuilder\\\\\\\\\\\\\\\\n.pybuilder/\\\\\\\\\\\\\\\\ntarget/\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Jupyter Notebook\\\\\\\\\\\\\\\\n.ipynb_checkpoints\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# IPython\\\\\\\\\\\\\\\\nprofile_default/\\\\\\\\\\\\\\\\nipython_config.py\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# pyenv\\\\\\\\\\\\\\\\n#   For a library or package, you might want to ignore these files since the code is\\\\\\\\\\\\\\\\n#   intended to run in multiple environments; otherwise, check them in:\\\\\\\\\\\\\\\\n# .python-version\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# pipenv\\\\\\\\\\\\\\\\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\\\\\\\\\\\\\\\\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\\\\\\\\\\\\\\\\n#   having no cross-platform support, pipenv may install dependencies that don\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'t work, or not\\\\\\\\\\\\\\\\n#   install all needed dependencies.\\\\\\\\\\\\\\\\n#Pipfile.lock\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# poetry\\\\\\\\\\\\\\\\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\\\\\\\\\\\\\\\\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\\\\\\\\\\\\\\\\n#   commonly ignored for libraries.\\\\\\\\\\\\\\\\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\\\\\\\\\\\\\\\\n#poetry.lock\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# pdm\\\\\\\\\\\\\\\\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\\\\\\\\\\\\\\\\n#pdm.lock\\\\\\\\\\\\\\\\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\\\\\\\\\\\\\\\\n#   in version control.\\\\\\\\\\\\\\\\n#   https://pdm.fming.dev/#use-with-ide\\\\\\\\\\\\\\\\n.pdm.toml\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\\\\\\\\\\\\\\\\n__pypackages__/\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Celery stuff\\\\\\\\\\\\\\\\ncelerybeat-schedule\\\\\\\\\\\\\\\\ncelerybeat.pid\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# SageMath parsed files\\\\\\\\\\\\\\\\n*.sage.py\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Environments\\\\\\\\\\\\\\\\n.env\\\\\\\\\\\\\\\\n.venv\\\\\\\\\\\\\\\\nenv/\\\\\\\\\\\\\\\\nvenv/\\\\\\\\\\\\\\\\nENV/\\\\\\\\\\\\\\\\nenv.bak/\\\\\\\\\\\\\\\\nvenv.bak/\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Spyder project settings\\\\\\\\\\\\\\\\n.spyderproject\\\\\\\\\\\\\\\\n.spyproject\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Rope project settings\\\\\\\\\\\\\\\\n.ropeproject\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# mkdocs documentation\\\\\\\\\\\\\\\\n/site\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# mypy\\\\\\\\\\\\\\\\n.mypy_cache/\\\\\\\\\\\\\\\\n.dmypy.json\\\\\\\\\\\\\\\\ndmypy.json\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Pyre type checker\\\\\\\\\\\\\\\\n.pyre/\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# pytype static type analyzer\\\\\\\\\\\\\\\\n.pytype/\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Cython debug symbols\\\\\\\\\\\\\\\\ncython_debug/\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# PyCharm\\\\\\\\\\\\\\\\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\\\\\\\\\\\\\\\\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\\\\\\\\\\\\\\\\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\\\\\\\\\\\\\\\\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\\\\\\\\\\\\\\\\n#.idea/\\\\\\\\\\\\\\\\n--- End of .gitignore ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of replit.nix ---\\\\\\\\\\\\\\\\n{pkgs}: {\\\\\\\\\\\\\\\\n  deps = [\\\\\\\\\\\\\\\\n    pkgs.glibcLocales\\\\\\\\\\\\\\\\n  ];\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of replit.nix ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of config.toml ---\\\\\\\\\\\\\\\\n[theme]\\\\\\\\\\\\\\\\nbase="dark"\\\\\\\\\\\\\\\\nprimaryColor="#FFC300"\\\\\\\\\\\\\\\\nbackgroundColor="#1E1E1E"\\\\\\\\\\\\\\\\nsecondaryBackgroundColor="#333333"\\\\\\\\\\\\\\\\ntextColor="#D4D4D4"\\\\\\\\\\\\\\\\nfont="sans serif"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of config.toml ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of .breakpoints ---\\\\\\\\\\\\\\\\n{\\\\\\\\\\\\\\\\n  "files": {}\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n--- End of .breakpoints ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of pyproject.toml ---\\\\\\\\\\\\\\\\n[tool.poetry]\\\\\\\\\\\\\\\\nname = "python-template"\\\\\\\\\\\\\\\\nversion = "0.1.0"\\\\\\\\\\\\\\\\ndescription = ""\\\\\\\\\\\\\\\\nauthors = ["Your Name <you@example.com>"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[tool.poetry.dependencies]\\\\\\\\\\\\\\\\npython = ">=3.10.0,<3.11"\\\\\\\\\\\\\\\\nstreamlit = "^1.27.2"\\\\\\\\\\\\\\\\nmodules = "^1.0.0"\\\\\\\\\\\\\\\\nrequests = "^2.32.3"\\\\\\\\\\\\\\\\nstreamlit-option-menu = "^0.3.13"\\\\\\\\\\\\\\\\npymongo = "^4.7.3"\\\\\\\\\\\\\\\\nnumpy = "^2.0.0"\\\\\\\\\\\\\\\\npandas = "^2.2.2"\\\\\\\\\\\\\\\\nplotly = "^5.22.0"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[tool.pyright]\\\\\\\\\\\\\\\\n# https://github.com/microsoft/pyright/blob/main/docs/configuration.md\\\\\\\\\\\\\\\\nuseLibraryCodeForTypes = true\\\\\\\\\\\\\\\\nexclude = [".cache"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[tool.ruff]\\\\\\\\\\\\\\\\n# https://beta.ruff.rs/docs/configuration/\\\\\\\\\\\\\\\\nselectnignore = [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'W291\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'W292\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'W293\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[build-system]\\\\\\\\\\\\\\\\nrequires = ["poetry-core>=1.0.0"]\\\\\\\\\\\\\\\\nbuild-backend = "poetry.core.masonry.api"\\\\\\\\\\\\\\\\n--- End of pyproject.toml ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of poetry.lock ---\\\\\\\\\\\\\\\\n# This file is automatically @generated by Poetry 1.5.4 and should not be changed by hand.\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "altair"\\\\\\\\\\\\\\\\nversion = "5.1.2"\\\\\\\\\\\\\\\\ndescription = "Vega-Altair: A declarative statistical visualization library for Python."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "altair-5.1.2-py3-none-any.whl", hash = "sha256:7219708ec33c152e53145485040f428954ed15fd09b2a2d89e543e6d111dae7f"},\\\\\\\\\\\\\\\\n    {file = "altair-5.1.2.tar.gz", hash = "sha256:e5f52a71853a607c61ce93ad4a414b3d486cd0d46ac597a24ae8bd1ac99dd460"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\njinja2 = "*"\\\\\\\\\\\\\\\\njsonschema = ">=3.0"\\\\\\\\\\\\\\\\nnumpy = "*"\\\\\\\\\\\\\\\\npackaging = "*"\\\\\\\\\\\\\\\\npandas = ">=0.25"\\\\\\\\\\\\\\\\ntoolz = "*"\\\\\\\\\\\\\\\\ntyping-extensions = {version = ">=4.0.1", markers = "python_version < \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.11\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\ndev = ["anywidget", "black (<24)", "hatch", "ipython", "m2r", "mypy", "pandas-stubs", "pyarrow (>=11)", "pytest", "pytest-cov", "ruff", "types-jsonschema", "types-setuptools", "vega-datasets", "vegafusion[embed] (>=1.4.0)", "vl-convert-python (>=0.14.0)"]\\\\\\\\\\\\\\\\ndoc = ["docutils", "geopandas", "jinja2", "myst-parser", "numpydoc", "pillow (>=9,<10)", "pydata-sphinx-theme", "scipy", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinxext-altair"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "attrs"\\\\\\\\\\\\\\\\nversion = "23.1.0"\\\\\\\\\\\\\\\\ndescription = "Classes Without Boilerplate"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "attrs-23.1.0-py3-none-any.whl", hash = "sha256:1f28b4522cdc2fb4256ac1a020c78acf9cba2c6b461ccd2c126f3aa8e8335d04"},\\\\\\\\\\\\\\\\n    {file = "attrs-23.1.0.tar.gz", hash = "sha256:6279836d581513a26f1bf235f9acd333bc9115683f14f7e8fae46c98fc50e015"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\ncov = ["attrs[tests]", "coverage[toml] (>=5.3)"]\\\\\\\\\\\\\\\\ndev = ["attrs[docs,tests]", "pre-commit"]\\\\\\\\\\\\\\\\ndocs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]\\\\\\\\\\\\\\\\ntests = ["attrs[tests-no-zope]", "zope-interface"]\\\\\\\\\\\\\\\\ntests-no-zope = ["cloudpickle", "hypothesis", "mypy (>=1.1.1)", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins", "pytest-xdist[psutil]"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "blinker"\\\\\\\\\\\\\\\\nversion = "1.6.3"\\\\\\\\\\\\\\\\ndescription = "Fast, simple object-to-object and broadcast signaling"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "blinker-1.6.3-py3-none-any.whl", hash = "sha256:296320d6c28b006eb5e32d4712202dbcdcbf5dc482da298c2f44881c43884aaa"},\\\\\\\\\\\\\\\\n    {file = "blinker-1.6.3.tar.gz", hash = "sha256:152090d27c1c5c722ee7e48504b02d76502811ce02e1523553b4cf8c8b3d3a8d"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "cachetools"\\\\\\\\\\\\\\\\nversion = "5.3.1"\\\\\\\\\\\\\\\\ndescription = "Extensible memoizing collections and decorators"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "cachetools-5.3.1-py3-none-any.whl", hash = "sha256:95ef631eeaea14ba2e36f06437f36463aac3a096799e876ee55e5cdccb102590"},\\\\\\\\\\\\\\\\n    {file = "cachetools-5.3.1.tar.gz", hash = "sha256:dce83f2d9b4e1f732a8cd44af8e8fab2dbe46201467fc98b3ef8f269092bf62b"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "certifi"\\\\\\\\\\\\\\\\nversion = "2023.7.22"\\\\\\\\\\\\\\\\ndescription = "Python package for providing Mozilla\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'s CA Bundle."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.6"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "certifi-2023.7.22-py3-none-any.whl", hash = "sha256:92d6037539857d8206b8f6ae472e8b77db8058fec5937a1ef3f54304089edbb9"},\\\\\\\\\\\\\\\\n    {file = "certifi-2023.7.22.tar.gz", hash = "sha256:539cc1d13202e33ca466e88b2807e29f4c13049d6d87031a3c110744495cb082"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "charset-normalizer"\\\\\\\\\\\\\\\\nversion = "3.3.0"\\\\\\\\\\\\\\\\ndescription = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7.0"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "charset-normalizer-3.3.0.tar.gz", hash = "sha256:63563193aec44bce707e0c5ca64ff69fa72ed7cf34ce6e11d5127555756fd2f6"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:effe5406c9bd748a871dbcaf3ac69167c38d72db8c9baf3ff954c344f31c4cbe"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:4162918ef3098851fcd8a628bf9b6a98d10c380725df9e04caf5ca6dd48c847a"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0570d21da019941634a531444364f2482e8db0b3425fcd5ac0c36565a64142c8"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5707a746c6083a3a74b46b3a631d78d129edab06195a92a8ece755aac25a3f3d"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:278c296c6f96fa686d74eb449ea1697f3c03dc28b75f873b65b5201806346a69"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:a4b71f4d1765639372a3b32d2638197f5cd5221b19531f9245fcc9ee62d38f56"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f5969baeaea61c97efa706b9b107dcba02784b1601c74ac84f2a532ea079403e"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a3f93dab657839dfa61025056606600a11d0b696d79386f974e459a3fbc568ec"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:db756e48f9c5c607b5e33dd36b1d5872d0422e960145b08ab0ec7fd420e9d649"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:232ac332403e37e4a03d209a3f92ed9071f7d3dbda70e2a5e9cff1c4ba9f0678"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_ppc64le.whl", hash = "sha256:e5c1502d4ace69a179305abb3f0bb6141cbe4714bc9b31d427329a95acfc8bdd"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_s390x.whl", hash = "sha256:2502dd2a736c879c0f0d3e2161e74d9907231e25d35794584b1ca5284e43f596"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23e8565ab7ff33218530bc817922fae827420f143479b753104ab801145b1d5b"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win32.whl", hash = "sha256:1872d01ac8c618a8da634e232f24793883d6e456a66593135aeafe3784b0848d"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win_amd64.whl", hash = "sha256:557b21a44ceac6c6b9773bc65aa1b4cc3e248a5ad2f5b914b91579a32e22204d"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:d7eff0f27edc5afa9e405f7165f85a6d782d308f3b6b9d96016c010597958e63"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:6a685067d05e46641d5d1623d7c7fdf15a357546cbb2f71b0ebde91b175ffc3e"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:0d3d5b7db9ed8a2b11a774db2bbea7ba1884430a205dbd54a32d61d7c2a190fa"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2935ffc78db9645cb2086c2f8f4cfd23d9b73cc0dc80334bc30aac6f03f68f8c"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:9fe359b2e3a7729010060fbca442ca225280c16e923b37db0e955ac2a2b72a05"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:380c4bde80bce25c6e4f77b19386f5ec9db230df9f2f2ac1e5ad7af2caa70459"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0d1e3732768fecb052d90d62b220af62ead5748ac51ef61e7b32c266cac9293"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1b2919306936ac6efb3aed1fbf81039f7087ddadb3160882a57ee2ff74fd2382"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:f8888e31e3a85943743f8fc15e71536bda1c81d5aa36d014a3c0c44481d7db6e"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:82eb849f085624f6a607538ee7b83a6d8126df6d2f7d3b319cb837b289123078"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_ppc64le.whl", hash = "sha256:7b8b8bf1189b3ba9b8de5c8db4d541b406611a71a955bbbd7385bbc45fcb786c"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_s390x.whl", hash = "sha256:5adf257bd58c1b8632046bbe43ee38c04e1038e9d37de9c57a94d6bd6ce5da34"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:c350354efb159b8767a6244c166f66e67506e06c8924ed74669b2c70bc8735b1"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win32.whl", hash = "sha256:02af06682e3590ab952599fbadac535ede5d60d78848e555aa58d0c0abbde786"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win_amd64.whl", hash = "sha256:86d1f65ac145e2c9ed71d8ffb1905e9bba3a91ae29ba55b4c46ae6fc31d7c0d4"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:3b447982ad46348c02cb90d230b75ac34e9886273df3a93eec0539308a6296d7"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:abf0d9f45ea5fb95051c8bfe43cb40cda383772f7e5023a83cc481ca2604d74e"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:b09719a17a2301178fac4470d54b1680b18a5048b481cb8890e1ef820cb80455"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b3d9b48ee6e3967b7901c052b670c7dda6deb812c309439adaffdec55c6d7b78"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:edfe077ab09442d4ef3c52cb1f9dab89bff02f4524afc0acf2d46be17dc479f5"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3debd1150027933210c2fc321527c2299118aa929c2f5a0a80ab6953e3bd1908"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:86f63face3a527284f7bb8a9d4f78988e3c06823f7bea2bd6f0e0e9298ca0403"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:24817cb02cbef7cd499f7c9a2735286b4782bd47a5b3516a0e84c50eab44b98e"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:c71f16da1ed8949774ef79f4a0260d28b83b3a50c6576f8f4f0288d109777989"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:9cf3126b85822c4e53aa28c7ec9869b924d6fcfb76e77a45c44b83d91afd74f9"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_ppc64le.whl", hash = "sha256:b3b2316b25644b23b54a6f6401074cebcecd1244c0b8e80111c9a3f1c8e83d65"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_s390x.whl", hash = "sha256:03680bb39035fbcffe828eae9c3f8afc0428c91d38e7d61aa992ef7a59fb120e"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:4cc152c5dd831641e995764f9f0b6589519f6f5123258ccaca8c6d34572fefa8"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win32.whl", hash = "sha256:b8f3307af845803fb0b060ab76cf6dd3a13adc15b6b451f54281d25911eb92df"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win_amd64.whl", hash = "sha256:8eaf82f0eccd1505cf39a45a6bd0a8cf1c70dcfc30dba338207a969d91b965c0"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:dc45229747b67ffc441b3de2f3ae5e62877a282ea828a5bdb67883c4ee4a8810"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2f4a0033ce9a76e391542c182f0d48d084855b5fcba5010f707c8e8c34663d77"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ada214c6fa40f8d800e575de6b91a40d0548139e5dc457d2ebb61470abf50186"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b1121de0e9d6e6ca08289583d7491e7fcb18a439305b34a30b20d8215922d43c"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1063da2c85b95f2d1a430f1c33b55c9c17ffaf5e612e10aeaad641c55a9e2b9d"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:70f1d09c0d7748b73290b29219e854b3207aea922f839437870d8cc2168e31cc"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:250c9eb0f4600361dd80d46112213dff2286231d92d3e52af1e5a6083d10cad9"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:750b446b2ffce1739e8578576092179160f6d26bd5e23eb1789c4d64d5af7dc7"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_ppc64le.whl", hash = "sha256:fc52b79d83a3fe3a360902d3f5d79073a993597d48114c29485e9431092905d8"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_s390x.whl", hash = "sha256:588245972aca710b5b68802c8cad9edaa98589b1b42ad2b53accd6910dad3545"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:e39c7eb31e3f5b1f88caff88bcff1b7f8334975b46f6ac6e9fc725d829bc35d4"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win32.whl", hash = "sha256:abecce40dfebbfa6abf8e324e1860092eeca6f7375c8c4e655a8afb61af58f2c"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win_amd64.whl", hash = "sha256:24a91a981f185721542a0b7c92e9054b7ab4fea0508a795846bc5b0abf8118d4"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:67b8cc9574bb518ec76dc8e705d4c39ae78bb96237cb533edac149352c1f39fe"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:ac71b2977fb90c35d41c9453116e283fac47bb9096ad917b8819ca8b943abecd"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:3ae38d325b512f63f8da31f826e6cb6c367336f95e418137286ba362925c877e"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:542da1178c1c6af8873e143910e2269add130a299c9106eef2594e15dae5e482"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:30a85aed0b864ac88309b7d94be09f6046c834ef60762a8833b660139cfbad13"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aae32c93e0f64469f74ccc730a7cb21c7610af3a775157e50bbd38f816536b38"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:15b26ddf78d57f1d143bdf32e820fd8935d36abe8a25eb9ec0b5a71c82eb3895"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7f5d10bae5d78e4551b7be7a9b29643a95aded9d0f602aa2ba584f0388e7a557"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:249c6470a2b60935bafd1d1d13cd613f8cd8388d53461c67397ee6a0f5dce741"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:c5a74c359b2d47d26cdbbc7845e9662d6b08a1e915eb015d044729e92e7050b7"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_ppc64le.whl", hash = "sha256:b5bcf60a228acae568e9911f410f9d9e0d43197d030ae5799e20dca8df588287"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_s390x.whl", hash = "sha256:187d18082694a29005ba2944c882344b6748d5be69e3a89bf3cc9d878e548d5a"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:81bf654678e575403736b85ba3a7867e31c2c30a69bc57fe88e3ace52fb17b89"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win32.whl", hash = "sha256:85a32721ddde63c9df9ebb0d2045b9691d9750cb139c161c80e500d210f5e26e"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win_amd64.whl", hash = "sha256:468d2a840567b13a590e67dd276c570f8de00ed767ecc611994c301d0f8c014f"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:e0fc42822278451bc13a2e8626cf2218ba570f27856b536e00cfa53099724828"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:09c77f964f351a7369cc343911e0df63e762e42bac24cd7d18525961c81754f4"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:12ebea541c44fdc88ccb794a13fe861cc5e35d64ed689513a5c03d05b53b7c82"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:805dfea4ca10411a5296bcc75638017215a93ffb584c9e344731eef0dcfb026a"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:96c2b49eb6a72c0e4991d62406e365d87067ca14c1a729a870d22354e6f68115"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aaf7b34c5bc56b38c931a54f7952f1ff0ae77a2e82496583b247f7c969eb1479"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:619d1c96099be5823db34fe89e2582b336b5b074a7f47f819d6b3a57ff7bdb86"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a0ac5e7015a5920cfce654c06618ec40c33e12801711da6b4258af59a8eff00a"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:93aa7eef6ee71c629b51ef873991d6911b906d7312c6e8e99790c0f33c576f89"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7966951325782121e67c81299a031f4c115615e68046f79b85856b86ebffc4cd"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_ppc64le.whl", hash = "sha256:02673e456dc5ab13659f85196c534dc596d4ef260e4d86e856c3b2773ce09843"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_s390x.whl", hash = "sha256:c2af80fb58f0f24b3f3adcb9148e6203fa67dd3f61c4af146ecad033024dde43"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:153e7b6e724761741e0974fc4dcd406d35ba70b92bfe3fedcb497226c93b9da7"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win32.whl", hash = "sha256:d47ecf253780c90ee181d4d871cd655a789da937454045b17b5798da9393901a"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win_amd64.whl", hash = "sha256:d97d85fa63f315a8bdaba2af9a6a686e0eceab77b3089af45133252618e70884"},\\\\\\\\\\\\\\\\n    {file = "charset_normalizer-3.3.0-py3-none-any.whl", hash = "sha256:e46cd37076971c1040fc8c41273a8b3e2c624ce4f2be3f5dfcb7a430c1d3acc2"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "click"\\\\\\\\\\\\\\\\nversion = "8.1.7"\\\\\\\\\\\\\\\\ndescription = "Composable command line interface toolkit"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "click-8.1.7-py3-none-any.whl", hash = "sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28"},\\\\\\\\\\\\\\\\n    {file = "click-8.1.7.tar.gz", hash = "sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\ncolorama = {version = "*", markers = "platform_system == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Windows\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "colorama"\\\\\\\\\\\\\\\\nversion = "0.4.6"\\\\\\\\\\\\\\\\ndescription = "Cross-platform colored terminal text."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},\\\\\\\\\\\\\\\\n    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "dnspython"\\\\\\\\\\\\\\\\nversion = "2.6.1"\\\\\\\\\\\\\\\\ndescription = "DNS toolkit"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "dnspython-2.6.1-py3-none-any.whl", hash = "sha256:5ef3b9680161f6fa89daf8ad451b5f1a33b18ae8a1c6778cdf4b43f08c0a6e50"},\\\\\\\\\\\\\\\\n    {file = "dnspython-2.6.1.tar.gz", hash = "sha256:e8f0f9c23a7b7cb99ded64e6c3a6f3e701d78f50c55e002b839dea7225cff7cc"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\ndev = ["black (>=23.1.0)", "coverage (>=7.0)", "flake8 (>=7)", "mypy (>=1.8)", "pylint (>=3)", "pytest (>=7.4)", "pytest-cov (>=4.1.0)", "sphinx (>=7.2.0)", "twine (>=4.0.0)", "wheel (>=0.42.0)"]\\\\\\\\\\\\\\\\ndnssec = ["cryptography (>=41)"]\\\\\\\\\\\\\\\\ndoh = ["h2 (>=4.1.0)", "httpcore (>=1.0.0)", "httpx (>=0.26.0)"]\\\\\\\\\\\\\\\\ndoq = ["aioquic (>=0.9.25)"]\\\\\\\\\\\\\\\\nidna = ["idna (>=3.6)"]\\\\\\\\\\\\\\\\ntrio = ["trio (>=0.23)"]\\\\\\\\\\\\\\\\nwmi = ["wmi (>=1.5.1)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "gitdb"\\\\\\\\\\\\\\\\nversion = "4.0.10"\\\\\\\\\\\\\\\\ndescription = "Git Object Database"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "gitdb-4.0.10-py3-none-any.whl", hash = "sha256:c286cf298426064079ed96a9e4a9d39e7f3e9bf15ba60701e95f5492f28415c7"},\\\\\\\\\\\\\\\\n    {file = "gitdb-4.0.10.tar.gz", hash = "sha256:6eb990b69df4e15bad899ea868dc46572c3f75339735663b81de79b06f17eb9a"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nsmmap = ">=3.0.1,<6"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "gitpython"\\\\\\\\\\\\\\\\nversion = "3.1.37"\\\\\\\\\\\\\\\\ndescription = "GitPython is a Python library used to interact with Git repositories"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "GitPython-3.1.37-py3-none-any.whl", hash = "sha256:5f4c4187de49616d710a77e98ddf17b4782060a1788df441846bddefbb89ab33"},\\\\\\\\\\\\\\\\n    {file = "GitPython-3.1.37.tar.gz", hash = "sha256:f9b9ddc0761c125d5780eab2d64be4873fc6817c2899cbcb34b02344bdc7bc54"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\ngitdb = ">=4.0.1,<5"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\ntest = ["black", "coverage[toml]", "ddt (>=1.1.1,!=1.4.3)", "mypy", "pre-commit", "pytest", "pytest-cov", "pytest-sugar"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "idna"\\\\\\\\\\\\\\\\nversion = "3.4"\\\\\\\\\\\\\\\\ndescription = "Internationalized Domain Names in Applications (IDNA)"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.5"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "idna-3.4-py3-none-any.whl", hash = "sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2"},\\\\\\\\\\\\\\\\n    {file = "idna-3.4.tar.gz", hash = "sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "jinja2"\\\\\\\\\\\\\\\\nversion = "3.1.2"\\\\\\\\\\\\\\\\ndescription = "A very fast and expressive template engine."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "Jinja2-3.1.2-py3-none-any.whl", hash = "sha256:6088930bfe239f0e6710546ab9c19c9ef35e29792895fed6e6e31a023a182a61"},\\\\\\\\\\\\\\\\n    {file = "Jinja2-3.1.2.tar.gz", hash = "sha256:31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nMarkupSafe = ">=2.0"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\ni18n = ["Babel (>=2.7)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "jsonschema"\\\\\\\\\\\\\\\\nversion = "4.19.1"\\\\\\\\\\\\\\\\ndescription = "An implementation of JSON Schema validation for Python"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "jsonschema-4.19.1-py3-none-any.whl", hash = "sha256:cd5f1f9ed9444e554b38ba003af06c0a8c2868131e56bfbef0550fb450c0330e"},\\\\\\\\\\\\\\\\n    {file = "jsonschema-4.19.1.tar.gz", hash = "sha256:ec84cc37cfa703ef7cd4928db24f9cb31428a5d0fa77747b8b51a847458e0bbf"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nattrs = ">=22.2.0"\\\\\\\\\\\\\\\\njsonschema-specifications = ">=2023.03.6"\\\\\\\\\\\\\\\\nreferencing = ">=0.28.4"\\\\\\\\\\\\\\\\nrpds-py = ">=0.7.1"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\nformat = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]\\\\\\\\\\\\\\\\nformat-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "jsonschema-specifications"\\\\\\\\\\\\\\\\nversion = "2023.7.1"\\\\\\\\\\\\\\\\ndescription = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "jsonschema_specifications-2023.7.1-py3-none-any.whl", hash = "sha256:05adf340b659828a004220a9613be00fa3f223f2b82002e273dee62fd50524b1"},\\\\\\\\\\\\\\\\n    {file = "jsonschema_specifications-2023.7.1.tar.gz", hash = "sha256:c91a50404e88a1f6ba40636778e2ee08f6e24c5613fe4c53ac24578a5a7f72bb"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nreferencing = ">=0.28.0"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "markdown-it-py"\\\\\\\\\\\\\\\\nversion = "3.0.0"\\\\\\\\\\\\\\\\ndescription = "Python port of markdown-it. Markdown parsing, done right!"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "markdown-it-py-3.0.0.tar.gz", hash = "sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb"},\\\\\\\\\\\\\\\\n    {file = "markdown_it_py-3.0.0-py3-none-any.whl", hash = "sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nmdurl = ">=0.1,<1.0"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\nbenchmarking = ["psutil", "pytest", "pytest-benchmark"]\\\\\\\\\\\\\\\\ncode-style = ["pre-commit (>=3.0,<4.0)"]\\\\\\\\\\\\\\\\ncompare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]\\\\\\\\\\\\\\\\nlinkify = ["linkify-it-py (>=1,<3)"]\\\\\\\\\\\\\\\\nplugins = ["mdit-py-plugins"]\\\\\\\\\\\\\\\\nprofiling = ["gprof2dot"]\\\\\\\\\\\\\\\\nrtd = ["jupyter_sphinx", "mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx_book_theme"]\\\\\\\\\\\\\\\\ntesting = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "markupsafe"\\\\\\\\\\\\\\\\nversion = "2.1.3"\\\\\\\\\\\\\\\\ndescription = "Safely add untrusted strings to HTML/XML markup."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:cd0f502fe016460680cd20aaa5a76d241d6f35a1c3350c474bac1273803893fa"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e09031c87a1e51556fdcb46e5bd4f59dfb743061cf93c4d6831bf894f125eb57"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68e78619a61ecf91e76aa3e6e8e33fc4894a2bebe93410754bd28fce0a8a4f9f"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:65c1a9bcdadc6c28eecee2c119465aebff8f7a584dd719facdd9e825ec61ab52"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:525808b8019e36eb524b8c68acdd63a37e75714eac50e988180b169d64480a00"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:962f82a3086483f5e5f64dbad880d31038b698494799b097bc59c2edf392fce6"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:aa7bd130efab1c280bed0f45501b7c8795f9fdbeb02e965371bbef3523627779"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:c9c804664ebe8f83a211cace637506669e7890fec1b4195b505c214e50dd4eb7"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win32.whl", hash = "sha256:10bbfe99883db80bdbaff2dcf681dfc6533a614f700da1287707e8a5d78a8431"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win_amd64.whl", hash = "sha256:1577735524cdad32f9f694208aa75e422adba74f1baee7551620e43a3141f559"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:ad9e82fb8f09ade1c3e1b996a6337afac2b8b9e365f926f5a61aacc71adc5b3c"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:3c0fae6c3be832a0a0473ac912810b2877c8cb9d76ca48de1ed31e1c68386575"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b076b6226fb84157e3f7c971a47ff3a679d837cf338547532ab866c57930dbee"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:bfce63a9e7834b12b87c64d6b155fdd9b3b96191b6bd334bf37db7ff1fe457f2"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:338ae27d6b8745585f87218a3f23f1512dbf52c26c28e322dbe54bcede54ccb9"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:e4dd52d80b8c83fdce44e12478ad2e85c64ea965e75d66dbeafb0a3e77308fcc"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:df0be2b576a7abbf737b1575f048c23fb1d769f267ec4358296f31c2479db8f9"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:5bbe06f8eeafd38e5d0a4894ffec89378b6c6a625ff57e3028921f8ff59318ac"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win32.whl", hash = "sha256:dd15ff04ffd7e05ffcb7fe79f1b98041b8ea30ae9234aed2a9168b5797c3effb"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win_amd64.whl", hash = "sha256:134da1eca9ec0ae528110ccc9e48041e0828d79f24121a1a146161103c76e686"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:f698de3fd0c4e6972b92290a45bd9b1536bffe8c6759c62471efaa8acb4c37bc"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:aa57bd9cf8ae831a362185ee444e15a93ecb2e344c8e52e4d721ea3ab6ef1823"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:ffcc3f7c66b5f5b7931a5aa68fc9cecc51e685ef90282f4a82f0f5e9b704ad11"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47d4f1c5f80fc62fdd7777d0d40a2e9dda0a05883ab11374334f6c4de38adffd"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1f67c7038d560d92149c060157d623c542173016c4babc0c1913cca0564b9939"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:9aad3c1755095ce347e26488214ef77e0485a3c34a50c5a5e2471dff60b9dd9c"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:14ff806850827afd6b07a5f32bd917fb7f45b046ba40c57abdb636674a8b559c"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8f9293864fe09b8149f0cc42ce56e3f0e54de883a9de90cd427f191c346eb2e1"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win32.whl", hash = "sha256:715d3562f79d540f251b99ebd6d8baa547118974341db04f5ad06d5ea3eb8007"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win_amd64.whl", hash = "sha256:1b8dd8c3fd14349433c79fa8abeb573a55fc0fdd769133baac1f5e07abf54aeb"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:8e254ae696c88d98da6555f5ace2279cf7cd5b3f52be2b5cf97feafe883b58d2"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cb0932dc158471523c9637e807d9bfb93e06a95cbf010f1a38b98623b929ef2b"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9402b03f1a1b4dc4c19845e5c749e3ab82d5078d16a2a4c2cd2df62d57bb0707"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:ca379055a47383d02a5400cb0d110cef0a776fc644cda797db0c5696cfd7e18e"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:b7ff0f54cb4ff66dd38bebd335a38e2c22c41a8ee45aa608efc890ac3e3931bc"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:c011a4149cfbcf9f03994ec2edffcb8b1dc2d2aede7ca243746df97a5d41ce48"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:56d9f2ecac662ca1611d183feb03a3fa4406469dafe241673d521dd5ae92a155"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win32.whl", hash = "sha256:8758846a7e80910096950b67071243da3e5a20ed2546e6392603c096778d48e0"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win_amd64.whl", hash = "sha256:787003c0ddb00500e49a10f2844fac87aa6ce977b90b0feaaf9de23c22508b24"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:2ef12179d3a291be237280175b542c07a36e7f60718296278d8593d21ca937d4"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:2c1b19b3aaacc6e57b7e25710ff571c24d6c3613a45e905b1fde04d691b98ee0"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8afafd99945ead6e075b973fefa56379c5b5c53fd8937dad92c662da5d8fd5ee"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8c41976a29d078bb235fea9b2ecd3da465df42a562910f9022f1a03107bd02be"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d080e0a5eb2529460b30190fcfcc4199bd7f827663f858a226a81bc27beaa97e"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:69c0f17e9f5a7afdf2cc9fb2d1ce6aabdb3bafb7f38017c0b77862bcec2bbad8"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:504b320cd4b7eff6f968eddf81127112db685e81f7e36e75f9f84f0df46041c3"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:42de32b22b6b804f42c5d98be4f7e5e977ecdd9ee9b660fda1a3edf03b11792d"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win32.whl", hash = "sha256:ceb01949af7121f9fc39f7d27f91be8546f3fb112c608bc4029aef0bab86a2a5"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win_amd64.whl", hash = "sha256:1b40069d487e7edb2676d3fbdb2b0829ffa2cd63a2ec26c4938b2d34391b4ecc"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:8023faf4e01efadfa183e863fefde0046de576c6f14659e8782065bcece22198"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6b2b56950d93e41f33b4223ead100ea0fe11f8e6ee5f641eb753ce4b77a7042b"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9dcdfd0eaf283af041973bff14a2e143b8bd64e069f4c383416ecd79a81aab58"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:05fb21170423db021895e1ea1e1f3ab3adb85d1c2333cbc2310f2a26bc77272e"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:282c2cb35b5b673bbcadb33a585408104df04f14b2d9b01d4c345a3b92861c2c"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:ab4a0df41e7c16a1392727727e7998a467472d0ad65f3ad5e6e765015df08636"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7ef3cb2ebbf91e330e3bb937efada0edd9003683db6b57bb108c4001f37a02ea"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:0a4e4a1aff6c7ac4cd55792abf96c915634c2b97e3cc1c7129578aa68ebd754e"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win32.whl", hash = "sha256:fec21693218efe39aa7f8599346e90c705afa52c5b31ae019b2e57e8f6542bb2"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win_amd64.whl", hash = "sha256:3fd4abcb888d15a94f32b75d8fd18ee162ca0c064f35b11134be77050296d6ba"},\\\\\\\\\\\\\\\\n    {file = "MarkupSafe-2.1.3.tar.gz", hash = "sha256:af598ed32d6ae86f1b747b82783958b1a4ab8f617b06fe68795c7f026abbdcad"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "mdurl"\\\\\\\\\\\\\\\\nversion = "0.1.2"\\\\\\\\\\\\\\\\ndescription = "Markdown URL utilities"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},\\\\\\\\\\\\\\\\n    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "modules"\\\\\\\\\\\\\\\\nversion = "1.0.0"\\\\\\\\\\\\\\\\ndescription = "Simple test on modules"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = "*"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "modules-1.0.0.tar.gz", hash = "sha256:5146b31b76e9899f95c19e3654c6aee2799694b912ca00faec6798725486934b"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "numpy"\\\\\\\\\\\\\\\\nversion = "2.0.0"\\\\\\\\\\\\\\\\ndescription = "Fundamental package for array computing in Python"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.9"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:04494f6ec467ccb5369d1808570ae55f6ed9b5809d7f035059000a37b8d7e86f"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:2635dbd200c2d6faf2ef9a0d04f0ecc6b13b3cad54f7c67c61155138835515d2"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_arm64.whl", hash = "sha256:0a43f0974d501842866cc83471bdb0116ba0dffdbaac33ec05e6afed5b615238"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_x86_64.whl", hash = "sha256:8d83bb187fb647643bd56e1ae43f273c7f4dbcdf94550d7938cfc32566756514"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:79e843d186c8fb1b102bef3e2bc35ef81160ffef3194646a7fdd6a73c6b97196"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d7696c615765091cc5093f76fd1fa069870304beaccfd58b5dcc69e55ef49c1"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:b4c76e3d4c56f145d41b7b6751255feefae92edbc9a61e1758a98204200f30fc"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:acd3a644e4807e73b4e1867b769fbf1ce8c5d80e7caaef0d90dcdc640dfc9787"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-win32.whl", hash = "sha256:cee6cc0584f71adefe2c908856ccc98702baf95ff80092e4ca46061538a2ba98"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:ed08d2703b5972ec736451b818c2eb9da80d66c3e84aed1deeb0c345fefe461b"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:ad0c86f3455fbd0de6c31a3056eb822fc939f81b1618f10ff3406971893b62a5"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:e7f387600d424f91576af20518334df3d97bc76a300a755f9a8d6e4f5cadd289"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_arm64.whl", hash = "sha256:34f003cb88b1ba38cb9a9a4a3161c1604973d7f9d5552c38bc2f04f829536609"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_x86_64.whl", hash = "sha256:b6f6a8f45d0313db07d6d1d37bd0b112f887e1369758a5419c0370ba915b3871"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5f64641b42b2429f56ee08b4f427a4d2daf916ec59686061de751a55aafa22e4"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:a7039a136017eaa92c1848152827e1424701532ca8e8967fe480fe1569dae581"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:46e161722e0f619749d1cd892167039015b2c2817296104487cd03ed4a955995"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:0e50842b2295ba8414c8c1d9d957083d5dfe9e16828b37de883f51fc53c4016f"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-win32.whl", hash = "sha256:2ce46fd0b8a0c947ae047d222f7136fc4d55538741373107574271bc00e20e8f"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:fbd6acc766814ea6443628f4e6751d0da6593dae29c08c0b2606164db026970c"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:354f373279768fa5a584bac997de6a6c9bc535c482592d7a813bb0c09be6c76f"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:4d2f62e55a4cd9c58c1d9a1c9edaedcd857a73cb6fda875bf79093f9d9086f85"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_arm64.whl", hash = "sha256:1e72728e7501a450288fc8e1f9ebc73d90cfd4671ebbd631f3e7857c39bd16f2"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_x86_64.whl", hash = "sha256:84554fc53daa8f6abf8e8a66e076aff6ece62de68523d9f665f32d2fc50fd66e"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c73aafd1afca80afecb22718f8700b40ac7cab927b8abab3c3e337d70e10e5a2"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:49d9f7d256fbc804391a7f72d4a617302b1afac1112fac19b6c6cec63fe7fe8a"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:0ec84b9ba0654f3b962802edc91424331f423dcf5d5f926676e0150789cb3d95"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:feff59f27338135776f6d4e2ec7aeeac5d5f7a08a83e80869121ef8164b74af9"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-win32.whl", hash = "sha256:c5a59996dc61835133b56a32ebe4ef3740ea5bc19b3983ac60cc32be5a665d54"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-win_amd64.whl", hash = "sha256:a356364941fb0593bb899a1076b92dfa2029f6f5b8ba88a14fd0984aaf76d0df"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:e61155fae27570692ad1d327e81c6cf27d535a5d7ef97648a17d922224b216de"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:4554eb96f0fd263041baf16cf0881b3f5dafae7a59b1049acb9540c4d57bc8cb"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_arm64.whl", hash = "sha256:903703372d46bce88b6920a0cd86c3ad82dae2dbef157b5fc01b70ea1cfc430f"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_x86_64.whl", hash = "sha256:3e8e01233d57639b2e30966c63d36fcea099d17c53bf424d77f088b0f4babd86"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cde1753efe513705a0c6d28f5884e22bdc30438bf0085c5c486cdaff40cd67a"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:821eedb7165ead9eebdb569986968b541f9908979c2da8a4967ecac4439bae3d"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:9a1712c015831da583b21c5bfe15e8684137097969c6d22e8316ba66b5baabe4"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:9c27f0946a3536403efb0e1c28def1ae6730a72cd0d5878db38824855e3afc44"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-win32.whl", hash = "sha256:63b92c512d9dbcc37f9d81b123dec99fdb318ba38c8059afc78086fe73820275"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:3f6bed7f840d44c08ebdb73b1825282b801799e325bcbdfa6bc5c370e5aecc65"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:9416a5c2e92ace094e9f0082c5fd473502c91651fb896bc17690d6fc475128d6"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_14_0_x86_64.whl", hash = "sha256:17067d097ed036636fa79f6a869ac26df7db1ba22039d962422506640314933a"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:38ecb5b0582cd125f67a629072fed6f83562d9dd04d7e03256c9829bdec027ad"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:cef04d068f5fb0518a77857953193b6bb94809a806bd0a14983a8f12ada060c9"},\\\\\\\\\\\\\\\\n    {file = "numpy-2.0.0.tar.gz", hash = "sha256:cf5d1c9e6837f8af9f92b6bd3e86d513cdc11f60fd62185cc49ec7d1aba34864"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "packaging"\\\\\\\\\\\\\\\\nversion = "23.2"\\\\\\\\\\\\\\\\ndescription = "Core utilities for Python packages"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "packaging-23.2-py3-none-any.whl", hash = "sha256:8c491190033a9af7e1d931d0b5dacc2ef47509b34dd0de67ed209b5203fc88c7"},\\\\\\\\\\\\\\\\n    {file = "packaging-23.2.tar.gz", hash = "sha256:048fb0e9405036518eaaf48a55953c750c11e1a1b68e0dd1a9d62ed0c092cfc5"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "pandas"\\\\\\\\\\\\\\\\nversion = "2.2.2"\\\\\\\\\\\\\\\\ndescription = "Powerful data structures for data analysis, time series, and statistics"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.9"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:90c6fca2acf139569e74e8781709dccb6fe25940488755716d1d354d6bc58bce"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:c7adfc142dac335d8c1e0dcbd37eb8617eac386596eb9e1a1b77791cf2498238"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4abfe0be0d7221be4f12552995e58723c7422c80a659da13ca382697de830c08"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8635c16bf3d99040fdf3ca3db669a7250ddf49c55dc4aa8fe0ae0fa8d6dcc1f0"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:40ae1dffb3967a52203105a077415a86044a2bea011b5f321c6aa64b379a3f51"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:8e5a0b00e1e56a842f922e7fae8ae4077aee4af0acb5ae3622bd4b4c30aedf99"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-win_amd64.whl", hash = "sha256:ddf818e4e6c7c6f4f7c8a12709696d193976b591cc7dc50588d3d1a6b5dc8772"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:696039430f7a562b74fa45f540aca068ea85fa34c244d0deee539cb6d70aa288"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:8e90497254aacacbc4ea6ae5e7a8cd75629d6ad2b30025a4a8b09aa4faf55151"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:58b84b91b0b9f4bafac2a0ac55002280c094dfc6402402332c0913a59654ab2b"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d2123dc9ad6a814bcdea0f099885276b31b24f7edf40f6cdbc0912672e22eee"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:2925720037f06e89af896c70bca73459d7e6a4be96f9de79e2d440bd499fe0db"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:0cace394b6ea70c01ca1595f839cf193df35d1575986e484ad35c4aeae7266c1"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-win_amd64.whl", hash = "sha256:873d13d177501a28b2756375d59816c365e42ed8417b41665f346289adc68d24"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:9dfde2a0ddef507a631dc9dc4af6a9489d5e2e740e226ad426a05cabfbd7c8ef"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:e9b79011ff7a0f4b1d6da6a61aa1aa604fb312d6647de5bad20013682d1429ce"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cb51fe389360f3b5a4d57dbd2848a5f033350336ca3b340d1c53a1fad33bcad"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:eee3a87076c0756de40b05c5e9a6069c035ba43e8dd71c379e68cab2c20f16ad"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:3e374f59e440d4ab45ca2fffde54b81ac3834cf5ae2cdfa69c90bc03bde04d76"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:43498c0bdb43d55cb162cdc8c06fac328ccb5d2eabe3cadeb3529ae6f0517c32"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-win_amd64.whl", hash = "sha256:d187d355ecec3629624fccb01d104da7d7f391db0311145817525281e2804d23"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:0ca6377b8fca51815f382bd0b697a0814c8bda55115678cbc94c30aacbb6eff2"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9057e6aa78a584bc93a13f0a9bf7e753a5e9770a30b4d758b8d5f2a62a9433cd"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:001910ad31abc7bf06f49dcc903755d2f7f3a9186c0c040b827e522e9cef0863"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:66b479b0bd07204e37583c191535505410daa8df638fd8e75ae1b383851fe921"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:a77e9d1c386196879aa5eb712e77461aaee433e54c68cf253053a73b7e49c33a"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:92fd6b027924a7e178ac202cfbe25e53368db90d56872d20ffae94b96c7acc57"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-win_amd64.whl", hash = "sha256:640cef9aa381b60e296db324337a554aeeb883ead99dc8f6c18e81a93942f5f4"},\\\\\\\\\\\\\\\\n    {file = "pandas-2.2.2.tar.gz", hash = "sha256:9e79019aba43cb4fda9e4d983f8e88ca0373adbb697ae9c6c43093218de28b54"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nnumpy = {version = ">=1.22.4", markers = "python_version < \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"3.11\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\\npython-dateutil = ">=2.8.2"\\\\\\\\\\\\\\\\npytz = ">=2020.1"\\\\\\\\\\\\\\\\ntzdata = ">=2022.7"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\nall = ["PyQt5 (>=5.15.9)", "SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)", "beautifulsoup4 (>=4.11.2)", "bottleneck (>=1.3.6)", "dataframe-api-compat (>=0.1.7)", "fastparquet (>=2022.12.0)", "fsspec (>=2022.11.0)", "gcsfs (>=2022.11.0)", "html5lib (>=1.1)", "hypothesis (>=6.46.1)", "jinja2 (>=3.1.2)", "lxml (>=4.9.2)", "matplotlib (>=3.6.3)", "numba (>=0.56.4)", "numexpr (>=2.8.4)", "odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "pandas-gbq (>=0.19.0)", "psycopg2 (>=2.9.6)", "pyarrow (>=10.0.1)", "pymysql (>=1.0.2)", "pyreadstat (>=1.2.0)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "qtpy (>=2.3.0)", "s3fs (>=2022.11.0)", "scipy (>=1.10.0)", "tables (>=3.8.0)", "tabulate (>=0.9.0)", "xarray (>=2022.12.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)", "zstandard (>=0.19.0)"]\\\\\\\\\\\\\\\\naws = ["s3fs (>=2022.11.0)"]\\\\\\\\\\\\\\\\nclipboard = ["PyQt5 (>=5.15.9)", "qtpy (>=2.3.0)"]\\\\\\\\\\\\\\\\ncompression = ["zstandard (>=0.19.0)"]\\\\\\\\\\\\\\\\ncomputation = ["scipy (>=1.10.0)", "xarray (>=2022.12.0)"]\\\\\\\\\\\\\\\\nconsortium-standard = ["dataframe-api-compat (>=0.1.7)"]\\\\\\\\\\\\\\\\nexcel = ["odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)"]\\\\\\\\\\\\\\\\nfeather = ["pyarrow (>=10.0.1)"]\\\\\\\\\\\\\\\\nfss = ["fsspec (>=2022.11.0)"]\\\\\\\\\\\\\\\\ngcp = ["gcsfs (>=2022.11.0)", "pandas-gbq (>=0.19.0)"]\\\\\\\\\\\\\\\\nhdf5 = ["tables (>=3.8.0)"]\\\\\\\\\\\\\\\\nhtml = ["beautifulsoup4 (>=4.11.2)", "html5lib (>=1.1)", "lxml (>=4.9.2)"]\\\\\\\\\\\\\\\\nmysql = ["SQLAlchemy (>=2.0.0)", "pymysql (>=1.0.2)"]\\\\\\\\\\\\\\\\noutput-formatting = ["jinja2 (>=3.1.2)", "tabulate (>=0.9.0)"]\\\\\\\\\\\\\\\\nparquet = ["pyarrow (>=10.0.1)"]\\\\\\\\\\\\\\\\nperformance = ["bottleneck (>=1.3.6)", "numba (>=0.56.4)", "numexpr (>=2.8.4)"]\\\\\\\\\\\\\\\\nplot = ["matplotlib (>=3.6.3)"]\\\\\\\\\\\\\\\\npostgresql = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "psycopg2 (>=2.9.6)"]\\\\\\\\\\\\\\\\npyarrow = ["pyarrow (>=10.0.1)"]\\\\\\\\\\\\\\\\nspss = ["pyreadstat (>=1.2.0)"]\\\\\\\\\\\\\\\\nsql-other = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)"]\\\\\\\\\\\\\\\\ntest = ["hypothesis (>=6.46.1)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)"]\\\\\\\\\\\\\\\\nxml = ["lxml (>=4.9.2)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "pillow"\\\\\\\\\\\\\\\\nversion = "10.0.1"\\\\\\\\\\\\\\\\ndescription = "Python Imaging Library (Fork)"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_10_10_x86_64.whl", hash = "sha256:8f06be50669087250f319b706decf69ca71fdecd829091a37cc89398ca4dc17a"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:50bd5f1ebafe9362ad622072a1d2f5850ecfa44303531ff14353a4059113b12d"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e6a90167bcca1216606223a05e2cf991bb25b14695c518bc65639463d7db722d"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f11c9102c56ffb9ca87134bd025a43d2aba3f1155f508eff88f694b33a9c6d19"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:186f7e04248103482ea6354af6d5bcedb62941ee08f7f788a1c7707bc720c66f"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:0462b1496505a3462d0f35dc1c4d7b54069747d65d00ef48e736acda2c8cbdff"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:d889b53ae2f030f756e61a7bff13684dcd77e9af8b10c6048fb2c559d6ed6eaf"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:552912dbca585b74d75279a7570dd29fa43b6d93594abb494ebb31ac19ace6bd"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-win_amd64.whl", hash = "sha256:787bb0169d2385a798888e1122c980c6eff26bf941a8ea79747d35d8f9210ca0"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_10_10_x86_64.whl", hash = "sha256:fd2a5403a75b54661182b75ec6132437a181209b901446ee5724b589af8edef1"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:2d7e91b4379f7a76b31c2dda84ab9e20c6220488e50f7822e59dac36b0cd92b1"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:19e9adb3f22d4c416e7cd79b01375b17159d6990003633ff1d8377e21b7f1b21"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:93139acd8109edcdeffd85e3af8ae7d88b258b3a1e13a038f542b79b6d255c54"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:92a23b0431941a33242b1f0ce6c88a952e09feeea9af4e8be48236a68ffe2205"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:cbe68deb8580462ca0d9eb56a81912f59eb4542e1ef8f987405e35a0179f4ea2"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:522ff4ac3aaf839242c6f4e5b406634bfea002469656ae8358644fc6c4856a3b"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:84efb46e8d881bb06b35d1d541aa87f574b58e87f781cbba8d200daa835b42e1"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-win_amd64.whl", hash = "sha256:898f1d306298ff40dc1b9ca24824f0488f6f039bc0e25cfb549d3195ffa17088"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_10_10_x86_64.whl", hash = "sha256:bcf1207e2f2385a576832af02702de104be71301c2696d0012b1b93fe34aaa5b"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:5d6c9049c6274c1bb565021367431ad04481ebb54872edecfcd6088d27edd6ed"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:28444cb6ad49726127d6b340217f0627abc8732f1194fd5352dec5e6a0105635"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:de596695a75496deb3b499c8c4f8e60376e0516e1a774e7bc046f0f48cd620ad"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_aarch64.whl", hash = "sha256:2872f2d7846cf39b3dbff64bc1104cc48c76145854256451d33c5faa55c04d1a"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_x86_64.whl", hash = "sha256:4ce90f8a24e1c15465048959f1e94309dfef93af272633e8f37361b824532e91"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:ee7810cf7c83fa227ba9125de6084e5e8b08c59038a7b2c9045ef4dde61663b4"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:b1be1c872b9b5fcc229adeadbeb51422a9633abd847c0ff87dc4ef9bb184ae08"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-win_amd64.whl", hash = "sha256:98533fd7fa764e5f85eebe56c8e4094db912ccbe6fbf3a58778d543cadd0db08"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_10_10_x86_64.whl", hash = "sha256:764d2c0daf9c4d40ad12fbc0abd5da3af7f8aa11daf87e4fa1b834000f4b6b0a"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:fcb59711009b0168d6ee0bd8fb5eb259c4ab1717b2f538bbf36bacf207ef7a68"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:697a06bdcedd473b35e50a7e7506b1d8ceb832dc238a336bd6f4f5aa91a4b500"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9f665d1e6474af9f9da5e86c2a3a2d2d6204e04d5af9c06b9d42afa6ebde3f21"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:2fa6dd2661838c66f1a5473f3b49ab610c98a128fc08afbe81b91a1f0bf8c51d"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:3a04359f308ebee571a3127fdb1bd01f88ba6f6fb6d087f8dd2e0d9bff43f2a7"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:723bd25051454cea9990203405fa6b74e043ea76d4968166dfd2569b0210886a"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:71671503e3015da1b50bd18951e2f9daf5b6ffe36d16f1eb2c45711a301521a7"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-win_amd64.whl", hash = "sha256:44e7e4587392953e5e251190a964675f61e4dae88d1e6edbe9f36d6243547ff3"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_10_10_x86_64.whl", hash = "sha256:3855447d98cced8670aaa63683808df905e956f00348732448b5a6df67ee5849"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:ed2d9c0704f2dc4fa980b99d565c0c9a543fe5101c25b3d60488b8ba80f0cce1"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:f5bb289bb835f9fe1a1e9300d011eef4d69661bb9b34d5e196e5e82c4cb09b37"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3a0d3e54ab1df9df51b914b2233cf779a5a10dfd1ce339d0421748232cea9876"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:2cc6b86ece42a11f16f55fe8903595eff2b25e0358dec635d0a701ac9586588f"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:ca26ba5767888c84bf5a0c1a32f069e8204ce8c21d00a49c90dabeba00ce0145"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:f0b4b06da13275bc02adfeb82643c4a6385bd08d26f03068c2796f60d125f6f2"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:bc2e3069569ea9dbe88d6b8ea38f439a6aad8f6e7a6283a38edf61ddefb3a9bf"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-win_amd64.whl", hash = "sha256:8b451d6ead6e3500b6ce5c7916a43d8d8d25ad74b9102a629baccc0808c54971"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-macosx_10_10_x86_64.whl", hash = "sha256:32bec7423cdf25c9038fef614a853c9d25c07590e1a870ed471f47fb80b244db"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b7cf63d2c6928b51d35dfdbda6f2c1fddbe51a6bc4a9d4ee6ea0e11670dd981e"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:f6d3d4c905e26354e8f9d82548475c46d8e0889538cb0657aa9c6f0872a37aa4"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:847e8d1017c741c735d3cd1883fa7b03ded4f825a6e5fcb9378fd813edee995f"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-macosx_10_10_x86_64.whl", hash = "sha256:7f771e7219ff04b79e231d099c0a28ed83aa82af91fd5fa9fdb28f5b8d5addaf"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:459307cacdd4138edee3875bbe22a2492519e060660eaf378ba3b405d1c66317"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:b059ac2c4c7a97daafa7dc850b43b2d3667def858a4f112d1aa082e5c3d6cf7d"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:d6caf3cd38449ec3cd8a68b375e0c6fe4b6fd04edb6c9766b55ef84a6e8ddf2d"},\\\\\\\\\\\\\\\\n    {file = "Pillow-10.0.1.tar.gz", hash = "sha256:d72967b06be9300fed5cfbc8b5bafceec48bf7cdc7dab66b1d2549035287191d"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\ndocs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-removed-in", "sphinxext-opengraph"]\\\\\\\\\\\\\\\\ntests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "plotly"\\\\\\\\\\\\\\\\nversion = "5.22.0"\\\\\\\\\\\\\\\\ndescription = "An open-source, interactive data visualization library for Python"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "plotly-5.22.0-py3-none-any.whl", hash = "sha256:68fc1901f098daeb233cc3dd44ec9dc31fb3ca4f4e53189344199c43496ed006"},\\\\\\\\\\\\\\\\n    {file = "plotly-5.22.0.tar.gz", hash = "sha256:859fdadbd86b5770ae2466e542b761b247d1c6b49daed765b95bb8c7063e7469"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\npackaging = "*"\\\\\\\\\\\\\\\\ntenacity = ">=6.2.0"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "protobuf"\\\\\\\\\\\\\\\\nversion = "4.24.4"\\\\\\\\\\\\\\\\ndescription = ""\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp310-abi3-win32.whl", hash = "sha256:ec9912d5cb6714a5710e28e592ee1093d68c5ebfeda61983b3f40331da0b1ebb"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp310-abi3-win_amd64.whl", hash = "sha256:1badab72aa8a3a2b812eacfede5020472e16c6b2212d737cefd685884c191085"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp37-abi3-macosx_10_9_universal2.whl", hash = "sha256:8e61a27f362369c2f33248a0ff6896c20dcd47b5d48239cb9720134bef6082e4"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_aarch64.whl", hash = "sha256:bffa46ad9612e6779d0e51ae586fde768339b791a50610d85eb162daeb23661e"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_x86_64.whl", hash = "sha256:b493cb590960ff863743b9ff1452c413c2ee12b782f48beca77c8da3e2ffe9d9"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp37-cp37m-win32.whl", hash = "sha256:dbbed8a56e56cee8d9d522ce844a1379a72a70f453bde6243e3c86c30c2a3d46"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp37-cp37m-win_amd64.whl", hash = "sha256:6b7d2e1c753715dcfe9d284a25a52d67818dd43c4932574307daf836f0071e37"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp38-cp38-win32.whl", hash = "sha256:02212557a76cd99574775a81fefeba8738d0f668d6abd0c6b1d3adcc75503dbe"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp38-cp38-win_amd64.whl", hash = "sha256:2fa3886dfaae6b4c5ed2730d3bf47c7a38a72b3a1f0acb4d4caf68e6874b947b"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp39-cp39-win32.whl", hash = "sha256:b77272f3e28bb416e2071186cb39efd4abbf696d682cbb5dc731308ad37fa6dd"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-cp39-cp39-win_amd64.whl", hash = "sha256:9fee5e8aa20ef1b84123bb9232b3f4a5114d9897ed89b4b8142d81924e05d79b"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4-py3-none-any.whl", hash = "sha256:80797ce7424f8c8d2f2547e2d42bfbb6c08230ce5832d6c099a37335c9c90a92"},\\\\\\\\\\\\\\\\n    {file = "protobuf-4.24.4.tar.gz", hash = "sha256:5a70731910cd9104762161719c3d883c960151eea077134458503723b60e3667"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "pyarrow"\\\\\\\\\\\\\\\\nversion = "13.0.0"\\\\\\\\\\\\\\\\ndescription = "Python library for Apache Arrow"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_10_14_x86_64.whl", hash = "sha256:1afcc2c33f31f6fb25c92d50a86b7a9f076d38acbcb6f9e74349636109550148"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:70fa38cdc66b2fc1349a082987f2b499d51d072faaa6b600f71931150de2e0e3"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cd57b13a6466822498238877892a9b287b0a58c2e81e4bdb0b596dbb151cbb73"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f8ce69f7bf01de2e2764e14df45b8404fc6f1a5ed9871e8e08a12169f87b7a26"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:588f0d2da6cf1b1680974d63be09a6530fd1bd825dc87f76e162404779a157dc"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:6241afd72b628787b4abea39e238e3ff9f34165273fad306c7acf780dd850956"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:fda7857e35993673fcda603c07d43889fca60a5b254052a462653f8656c64f44"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_10_14_x86_64.whl", hash = "sha256:aac0ae0146a9bfa5e12d87dda89d9ef7c57a96210b899459fc2f785303dcbb67"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:d7759994217c86c161c6a8060509cfdf782b952163569606bb373828afdd82e8"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:868a073fd0ff6468ae7d869b5fc1f54de5c4255b37f44fb890385eb68b68f95d"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:51be67e29f3cfcde263a113c28e96aa04362ed8229cb7c6e5f5c719003659d33"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:d1b4e7176443d12610874bb84d0060bf080f000ea9ed7c84b2801df851320295"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:69b6f9a089d116a82c3ed819eea8fe67dae6105f0d81eaf0fdd5e60d0c6e0944"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:ab1268db81aeb241200e321e220e7cd769762f386f92f61b898352dd27e402ce"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_10_14_x86_64.whl", hash = "sha256:ee7490f0f3f16a6c38f8c680949551053c8194e68de5046e6c288e396dccee80"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:e3ad79455c197a36eefbd90ad4aa832bece7f830a64396c15c61a0985e337287"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68fcd2dc1b7d9310b29a15949cdd0cb9bc34b6de767aff979ebf546020bf0ba0"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dc6fd330fd574c51d10638e63c0d00ab456498fc804c9d01f2a61b9264f2c5b2"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:e66442e084979a97bb66939e18f7b8709e4ac5f887e636aba29486ffbf373763"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:0f6eff839a9e40e9c5610d3ff8c5bdd2f10303408312caf4c8003285d0b49565"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-win_amd64.whl", hash = "sha256:8b30a27f1cddf5c6efcb67e598d7823a1e253d743d92ac32ec1eb4b6a1417867"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_10_14_x86_64.whl", hash = "sha256:09552dad5cf3de2dc0aba1c7c4b470754c69bd821f5faafc3d774bedc3b04bb7"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:3896ae6c205d73ad192d2fc1489cd0edfab9f12867c85b4c277af4d37383c18c"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6647444b21cb5e68b593b970b2a9a07748dd74ea457c7dadaa15fd469c48ada1"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47663efc9c395e31d09c6aacfa860f4473815ad6804311c5433f7085415d62a7"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:b9ba6b6d34bd2563345488cf444510588ea42ad5613df3b3509f48eb80250afd"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:d00d374a5625beeb448a7fa23060df79adb596074beb3ddc1838adb647b6ef09"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:c51afd87c35c8331b56f796eff954b9c7f8d4b7fef5903daf4e05fcf017d23a8"},\\\\\\\\\\\\\\\\n    {file = "pyarrow-13.0.0.tar.gz", hash = "sha256:83333726e83ed44b0ac94d8d7a21bbdee4a05029c3b1e8db58a863eec8fd8a33"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nnumpy = ">=1.16.6"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "pydeck"\\\\\\\\\\\\\\\\nversion = "0.8.0"\\\\\\\\\\\\\\\\ndescription = "Widget for deck.gl maps"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "pydeck-0.8.0-py2.py3-none-any.whl", hash = "sha256:a8fa7757c6f24bba033af39db3147cb020eef44012ba7e60d954de187f9ed4d5"},\\\\\\\\\\\\\\\\n    {file = "pydeck-0.8.0.tar.gz", hash = "sha256:07edde833f7cfcef6749124351195aa7dcd24663d4909fd7898dbd0b6fbc01ec"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\njinja2 = ">=2.10.1"\\\\\\\\\\\\\\\\nnumpy = ">=1.16.4"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\ncarto = ["pydeck-carto"]\\\\\\\\\\\\\\\\njupyter = ["ipykernel (>=5.1.2)", "ipython (>=5.8.0)", "ipywidgets (>=7,<8)", "traitlets (>=4.3.2)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "pygments"\\\\\\\\\\\\\\\\nversion = "2.16.1"\\\\\\\\\\\\\\\\ndescription = "Pygments is a syntax highlighting package written in Python."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "Pygments-2.16.1-py3-none-any.whl", hash = "sha256:13fc09fa63bc8d8671a6d247e1eb303c4b343eaee81d861f3404db2935653692"},\\\\\\\\\\\\\\\\n    {file = "Pygments-2.16.1.tar.gz", hash = "sha256:1daff0494820c69bc8941e407aa20f577374ee88364ee10a98fdbe0aece96e29"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\nplugins = ["importlib-metadata"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "pymongo"\\\\\\\\\\\\\\\\nversion = "4.7.3"\\\\\\\\\\\\\\\\ndescription = "Python driver for MongoDB <http://www.mongodb.org>"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e9580b4537b3cc5d412070caabd1dabdf73fdce249793598792bac5782ecf2eb"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:517243b2b189c98004570dd8fc0e89b1a48363d5578b3b99212fa2098b2ea4b8"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:23b1e9dabd61da1c7deb54d888f952f030e9e35046cebe89309b28223345b3d9"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:03e0f9901ad66c6fb7da0d303461377524d61dab93a4e4e5af44164c5bb4db76"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9a870824aa54453aee030bac08c77ebcf2fe8999400f0c2a065bebcbcd46b7f8"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dfd7b3d3f4261bddbb74a332d87581bc523353e62bb9da4027cc7340f6fcbebc"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4d719a643ea6da46d215a3ba51dac805a773b611c641319558d8576cbe31cef8"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-win32.whl", hash = "sha256:d8b1e06f361f3c66ee694cb44326e1a2e4f93bc9c3a4849ae8547889fca71154"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-win_amd64.whl", hash = "sha256:c450ab2f9397e2d5caa7fddeb4feb30bf719c47c13ae02c0bbb3b71bf4099c1c"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:79cc6459209e885ba097779eaa0fe7f2fa049db39ab43b1731cf8d065a4650e8"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:6e2287f1e2cc35e73cd74a4867e398a97962c5578a3991c730ef78d276ca8e46"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:413506bd48d8c31ee100645192171e4773550d7cb940b594d5175ac29e329ea1"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1cc1febf17646d52b7561caa762f60bdfe2cbdf3f3e70772f62eb624269f9c05"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:8dfcf18a49955d50a16c92b39230bd0668ffc9c164ccdfe9d28805182b48fa72"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:89872041196c008caddf905eb59d3dc2d292ae6b0282f1138418e76f3abd3ad6"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d3ed97b89de62ea927b672ad524de0d23f3a6b4a01c8d10e3d224abec973fbc3"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-win32.whl", hash = "sha256:d2f52b38151e946011d888a8441d3d75715c663fc5b41a7ade595e924e12a90a"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-win_amd64.whl", hash = "sha256:4a4cc91c28e81c0ce03d3c278e399311b0af44665668a91828aec16527082676"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:cb30c8a78f5ebaca98640943447b6a0afcb146f40b415757c9047bf4a40d07b4"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:9cf2069f5d37c398186453589486ea98bb0312214c439f7d320593b61880dc05"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3564f423958fced8a8c90940fd2f543c27adbcd6c7c6ed6715d847053f6200a0"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:7a8af8a38fa6951fff73e6ff955a6188f829b29fed7c5a1b739a306b4aa56fe8"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3a0e81c8dba6d825272867d487f18764cfed3c736d71d7d4ff5b79642acbed42"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:88fc1d146feabac4385ea8ddb1323e584922922641303c8bf392fe1c36803463"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4225100b2c5d1f7393d7c5d256ceb8b20766830eecf869f8ae232776347625a6"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-win32.whl", hash = "sha256:5f3569ed119bf99c0f39ac9962fb5591eff02ca210fe80bb5178d7a1171c1b1e"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-win_amd64.whl", hash = "sha256:eb383c54c0c8ba27e7712b954fcf2a0905fee82a929d277e2e94ad3a5ba3c7db"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:a46cffe91912570151617d866a25d07b9539433a32231ca7e7cf809b6ba1745f"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4c3cba427dac50944c050c96d958c5e643c33a457acee03bae27c8990c5b9c16"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:a7a5fd893edbeb7fa982f8d44b6dd0186b6cd86c89e23f6ef95049ff72bffe46"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c168a2fadc8b19071d0a9a4f85fe38f3029fe22163db04b4d5c046041c0b14bd"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2c59c2c9e70f63a7f18a31e367898248c39c068c639b0579623776f637e8f482"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d08165fd82c89d372e82904c3268bd8fe5de44f92a00e97bb1db1785154397d9"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:397fed21afec4fdaecf72f9c4344b692e489756030a9c6d864393e00c7e80491"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:f903075f8625e2d228f1b9b9a0cf1385f1c41e93c03fd7536c91780a0fb2e98f"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-win32.whl", hash = "sha256:8ed1132f58c38add6b6138b771d0477a3833023c015c455d9a6e26f367f9eb5c"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-win_amd64.whl", hash = "sha256:8d00a5d8fc1043a4f641cbb321da766699393f1b6f87c70fae8089d61c9c9c54"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:9377b868c38700c7557aac1bc4baae29f47f1d279cc76b60436e547fd643318c"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:da4a6a7b4f45329bb135aa5096823637bd5f760b44d6224f98190ee367b6b5dd"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:487e2f9277f8a63ac89335ec4f1699ae0d96ebd06d239480d69ed25473a71b2c"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6db3d608d541a444c84f0bfc7bad80b0b897e0f4afa580a53f9a944065d9b633"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e90af2ad3a8a7c295f4d09a2fbcb9a350c76d6865f787c07fe843b79c6e821d1"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8e28feb18dc559d50ededba27f9054c79f80c4edd70a826cecfe68f3266807b3"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:f21ecddcba2d9132d5aebd8e959de8d318c29892d0718420447baf2b9bccbb19"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:26140fbb3f6a9a74bd73ed46d0b1f43d5702e87a6e453a31b24fad9c19df9358"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:94baa5fc7f7d22c3ce2ac7bd92f7e03ba7a6875f2480e3b97a400163d6eaafc9"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-win32.whl", hash = "sha256:92dd247727dd83d1903e495acc743ebd757f030177df289e3ba4ef8a8c561fad"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-win_amd64.whl", hash = "sha256:1c90c848a5e45475731c35097f43026b88ef14a771dfd08f20b67adc160a3f79"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:f598be401b416319a535c386ac84f51df38663f7a9d1071922bda4d491564422"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:35ba90477fae61c65def6e7d09e8040edfdd3b7fd47c3c258b4edded60c4d625"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9aa8735955c70892634d7e61b0ede9b1eefffd3cd09ccabee0ffcf1bdfe62254"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:82a97d8f7f138586d9d0a0cff804a045cdbbfcfc1cd6bba542b151e284fbbec5"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:de3b9db558930efab5eaef4db46dcad8bf61ac3ddfd5751b3e5ac6084a25e366"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0e149217ef62812d3c2401cf0e2852b0c57fd155297ecc4dcd67172c4eca402"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:b3a8a1ef4a824f5feb793b3231526d0045eadb5eb01080e38435dfc40a26c3e5"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d14e5e89a4be1f10efc3d9dcb13eb7a3b2334599cb6bb5d06c6a9281b79c8e22"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:c6bfa29f032fd4fd7b129520f8cdb51ab71d88c2ba0567cccd05d325f963acb5"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-win32.whl", hash = "sha256:1421d0bd2ce629405f5157bd1aaa9b83f12d53a207cf68a43334f4e4ee312b66"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-win_amd64.whl", hash = "sha256:f7ee974f8b9370a998919c55b1050889f43815ab588890212023fecbc0402a6d"},\\\\\\\\\\\\\\\\n    {file = "pymongo-4.7.3.tar.gz", hash = "sha256:6354a66b228f2cd399be7429685fb68e07f19110a3679782ecb4fdb68da03831"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\ndnspython = ">=1.16.0,<3.0.0"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\naws = ["pymongo-auth-aws (>=1.1.0,<2.0.0)"]\\\\\\\\\\\\\\\\nencryption = ["certifi", "pymongo-auth-aws (>=1.1.0,<2.0.0)", "pymongocrypt (>=1.6.0,<2.0.0)"]\\\\\\\\\\\\\\\\ngssapi = ["pykerberos", "winkerberos (>=0.5.0)"]\\\\\\\\\\\\\\\\nocsp = ["certifi", "cryptography (>=2.5)", "pyopenssl (>=17.2.0)", "requests (<3.0.0)", "service-identity (>=18.1.0)"]\\\\\\\\\\\\\\\\nsnappy = ["python-snappy"]\\\\\\\\\\\\\\\\ntest = ["pytest (>=7)"]\\\\\\\\\\\\\\\\nzstd = ["zstandard"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "python-dateutil"\\\\\\\\\\\\\\\\nversion = "2.8.2"\\\\\\\\\\\\\\\\ndescription = "Extensions to the standard Python datetime module"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},\\\\\\\\\\\\\\\\n    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nsix = ">=1.5"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "pytz"\\\\\\\\\\\\\\\\nversion = "2023.3.post1"\\\\\\\\\\\\\\\\ndescription = "World timezone definitions, modern and historical"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = "*"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "pytz-2023.3.post1-py2.py3-none-any.whl", hash = "sha256:ce42d816b81b68506614c11e8937d3aa9e41007ceb50bfdcb0749b921bf646c7"},\\\\\\\\\\\\\\\\n    {file = "pytz-2023.3.post1.tar.gz", hash = "sha256:7b4fddbeb94a1eba4b557da24f19fdf9db575192544270a9101d8509f9f43d7b"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "referencing"\\\\\\\\\\\\\\\\nversion = "0.30.2"\\\\\\\\\\\\\\\\ndescription = "JSON Referencing + Python"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "referencing-0.30.2-py3-none-any.whl", hash = "sha256:449b6669b6121a9e96a7f9e410b245d471e8d48964c67113ce9afe50c8dd7bdf"},\\\\\\\\\\\\\\\\n    {file = "referencing-0.30.2.tar.gz", hash = "sha256:794ad8003c65938edcdbc027f1933215e0d0ccc0291e3ce20a4d87432b59efc0"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nattrs = ">=22.2.0"\\\\\\\\\\\\\\\\nrpds-py = ">=0.7.0"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "requests"\\\\\\\\\\\\\\\\nversion = "2.32.3"\\\\\\\\\\\\\\\\ndescription = "Python HTTP for Humans."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "requests-2.32.3-py3-none-any.whl", hash = "sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6"},\\\\\\\\\\\\\\\\n    {file = "requests-2.32.3.tar.gz", hash = "sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\ncertifi = ">=2017.4.17"\\\\\\\\\\\\\\\\ncharset-normalizer = ">=2,<4"\\\\\\\\\\\\\\\\nidna = ">=2.5,<4"\\\\\\\\\\\\\\\\nurllib3 = ">=1.21.1,<3"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\nsocks = ["PySocks (>=1.5.6,!=1.5.7)"]\\\\\\\\\\\\\\\\nuse-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "rich"\\\\\\\\\\\\\\\\nversion = "13.6.0"\\\\\\\\\\\\\\\\ndescription = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7.0"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "rich-13.6.0-py3-none-any.whl", hash = "sha256:2b38e2fe9ca72c9a00170a1a2d20c63c790d0e10ef1fe35eba76e1e7b1d7d245"},\\\\\\\\\\\\\\\\n    {file = "rich-13.6.0.tar.gz", hash = "sha256:5c14d22737e6d5084ef4771b62d5d4363165b403455a30a1c8ca39dc7b644bef"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nmarkdown-it-py = ">=2.2.0"\\\\\\\\\\\\\\\\npygments = ">=2.13.0,<3.0.0"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\njupyter = ["ipywidgets (>=7.5.1,<9)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "rpds-py"\\\\\\\\\\\\\\\\nversion = "0.10.6"\\\\\\\\\\\\\\\\ndescription = "Python bindings to Rust\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'s persistent data structures (rpds)"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_10_7_x86_64.whl", hash = "sha256:6bdc11f9623870d75692cc33c59804b5a18d7b8a4b79ef0b00b773a27397d1f6"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:26857f0f44f0e791f4a266595a7a09d21f6b589580ee0585f330aaccccb836e3"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7f5e15c953ace2e8dde9824bdab4bec50adb91a5663df08d7d994240ae6fa31"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:61fa268da6e2e1cd350739bb61011121fa550aa2545762e3dc02ea177ee4de35"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c48f3fbc3e92c7dd6681a258d22f23adc2eb183c8cb1557d2fcc5a024e80b094"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c0503c5b681566e8b722fe8c4c47cce5c7a51f6935d5c7012c4aefe952a35eed"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:734c41f9f57cc28658d98270d3436dba65bed0cfc730d115b290e970150c540d"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:a5d7ed104d158c0042a6a73799cf0eb576dfd5fc1ace9c47996e52320c37cb7c"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:e3df0bc35e746cce42579826b89579d13fd27c3d5319a6afca9893a9b784ff1b"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:73e0a78a9b843b8c2128028864901f55190401ba38aae685350cf69b98d9f7c9"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:5ed505ec6305abd2c2c9586a7b04fbd4baf42d4d684a9c12ec6110deefe2a063"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-none-win32.whl", hash = "sha256:d97dd44683802000277bbf142fd9f6b271746b4846d0acaf0cefa6b2eaf2a7ad"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-none-win_amd64.whl", hash = "sha256:b455492cab07107bfe8711e20cd920cc96003e0da3c1f91297235b1603d2aca7"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_10_7_x86_64.whl", hash = "sha256:e8cdd52744f680346ff8c1ecdad5f4d11117e1724d4f4e1874f3a67598821069"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:66414dafe4326bca200e165c2e789976cab2587ec71beb80f59f4796b786a238"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cc435d059f926fdc5b05822b1be4ff2a3a040f3ae0a7bbbe672babb468944722"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:8e7f2219cb72474571974d29a191714d822e58be1eb171f229732bc6fdedf0ac"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:3953c6926a63f8ea5514644b7afb42659b505ece4183fdaaa8f61d978754349e"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:2bb2e4826be25e72013916eecd3d30f66fd076110de09f0e750163b416500721"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:7bf347b495b197992efc81a7408e9a83b931b2f056728529956a4d0858608b80"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:102eac53bb0bf0f9a275b438e6cf6904904908562a1463a6fc3323cf47d7a532"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:40f93086eef235623aa14dbddef1b9fb4b22b99454cb39a8d2e04c994fb9868c"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:e22260a4741a0e7a206e175232867b48a16e0401ef5bce3c67ca5b9705879066"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:f4e56860a5af16a0fcfa070a0a20c42fbb2012eed1eb5ceeddcc7f8079214281"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-none-win32.whl", hash = "sha256:0774a46b38e70fdde0c6ded8d6d73115a7c39d7839a164cc833f170bbf539116"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-none-win_amd64.whl", hash = "sha256:4a5ee600477b918ab345209eddafde9f91c0acd931f3776369585a1c55b04c57"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_10_7_x86_64.whl", hash = "sha256:5ee97c683eaface61d38ec9a489e353d36444cdebb128a27fe486a291647aff6"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:0713631d6e2d6c316c2f7b9320a34f44abb644fc487b77161d1724d883662e31"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b5a53f5998b4bbff1cb2e967e66ab2addc67326a274567697379dd1e326bded7"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6a555ae3d2e61118a9d3e549737bb4a56ff0cec88a22bd1dfcad5b4e04759175"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:945eb4b6bb8144909b203a88a35e0a03d22b57aefb06c9b26c6e16d72e5eb0f0"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:52c215eb46307c25f9fd2771cac8135d14b11a92ae48d17968eda5aa9aaf5071"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c1b3cd23d905589cb205710b3988fc8f46d4a198cf12862887b09d7aaa6bf9b9"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:64ccc28683666672d7c166ed465c09cee36e306c156e787acef3c0c62f90da5a"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:516a611a2de12fbea70c78271e558f725c660ce38e0006f75139ba337d56b1f6"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:9ff93d3aedef11f9c4540cf347f8bb135dd9323a2fc705633d83210d464c579d"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:d858532212f0650be12b6042ff4378dc2efbb7792a286bee4489eaa7ba010586"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-none-win32.whl", hash = "sha256:3c4eff26eddac49d52697a98ea01b0246e44ca82ab09354e94aae8823e8bda02"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-none-win_amd64.whl", hash = "sha256:150eec465dbc9cbca943c8e557a21afdcf9bab8aaabf386c44b794c2f94143d2"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_10_7_x86_64.whl", hash = "sha256:cf693eb4a08eccc1a1b636e4392322582db2a47470d52e824b25eca7a3977b53"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4134aa2342f9b2ab6c33d5c172e40f9ef802c61bb9ca30d21782f6e035ed0043"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e782379c2028a3611285a795b89b99a52722946d19fc06f002f8b53e3ea26ea9"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2f6da6d842195fddc1cd34c3da8a40f6e99e4a113918faa5e60bf132f917c247"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:b4a9fe992887ac68256c930a2011255bae0bf5ec837475bc6f7edd7c8dfa254e"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b788276a3c114e9f51e257f2a6f544c32c02dab4aa7a5816b96444e3f9ffc336"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:caa1afc70a02645809c744eefb7d6ee8fef7e2fad170ffdeacca267fd2674f13"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bddd4f91eede9ca5275e70479ed3656e76c8cdaaa1b354e544cbcf94c6fc8ac4"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:775049dfa63fb58293990fc59473e659fcafd953bba1d00fc5f0631a8fd61977"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_i686.whl", hash = "sha256:c6c45a2d2b68c51fe3d9352733fe048291e483376c94f7723458cfd7b473136b"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:0699ab6b8c98df998c3eacf51a3b25864ca93dab157abe358af46dc95ecd9801"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-none-win32.whl", hash = "sha256:ebdab79f42c5961682654b851f3f0fc68e6cc7cd8727c2ac4ffff955154123c1"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-none-win_amd64.whl", hash = "sha256:24656dc36f866c33856baa3ab309da0b6a60f37d25d14be916bd3e79d9f3afcf"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_10_7_x86_64.whl", hash = "sha256:0898173249141ee99ffcd45e3829abe7bcee47d941af7434ccbf97717df020e5"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9e9184fa6c52a74a5521e3e87badbf9692549c0fcced47443585876fcc47e469"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5752b761902cd15073a527b51de76bbae63d938dc7c5c4ad1e7d8df10e765138"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:99a57006b4ec39dbfb3ed67e5b27192792ffb0553206a107e4aadb39c5004cd5"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:09586f51a215d17efdb3a5f090d7cbf1633b7f3708f60a044757a5d48a83b393"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e225a6a14ecf44499aadea165299092ab0cba918bb9ccd9304eab1138844490b"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b2039f8d545f20c4e52713eea51a275e62153ee96c8035a32b2abb772b6fc9e5"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:34ad87a831940521d462ac11f1774edf867c34172010f5390b2f06b85dcc6014"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:dcdc88b6b01015da066da3fb76545e8bb9a6880a5ebf89e0f0b2e3ca557b3ab7"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:25860ed5c4e7f5e10c496ea78af46ae8d8468e0be745bd233bab9ca99bfd2647"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:7854a207ef77319ec457c1eb79c361b48807d252d94348305db4f4b62f40f7f3"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-none-win32.whl", hash = "sha256:e6fcc026a3f27c1282c7ed24b7fcac82cdd70a0e84cc848c0841a3ab1e3dea2d"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-none-win_amd64.whl", hash = "sha256:e98c4c07ee4c4b3acf787e91b27688409d918212dfd34c872201273fdd5a0e18"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_10_7_x86_64.whl", hash = "sha256:68fe9199184c18d997d2e4293b34327c0009a78599ce703e15cd9a0f47349bba"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:3339eca941568ed52d9ad0f1b8eb9fe0958fa245381747cecf2e9a78a5539c42"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a360cfd0881d36c6dc271992ce1eda65dba5e9368575663de993eeb4523d895f"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:031f76fc87644a234883b51145e43985aa2d0c19b063e91d44379cd2786144f8"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1f36a9d751f86455dc5278517e8b65580eeee37d61606183897f122c9e51cef3"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:052a832078943d2b2627aea0d19381f607fe331cc0eb5df01991268253af8417"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:023574366002bf1bd751ebaf3e580aef4a468b3d3c216d2f3f7e16fdabd885ed"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:defa2c0c68734f4a82028c26bcc85e6b92cced99866af118cd6a89b734ad8e0d"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:879fb24304ead6b62dbe5034e7b644b71def53c70e19363f3c3be2705c17a3b4"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_i686.whl", hash = "sha256:53c43e10d398e365da2d4cc0bcaf0854b79b4c50ee9689652cdc72948e86f487"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:3777cc9dea0e6c464e4b24760664bd8831738cc582c1d8aacf1c3f546bef3f65"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_10_7_x86_64.whl", hash = "sha256:40578a6469e5d1df71b006936ce95804edb5df47b520c69cf5af264d462f2cbb"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_11_0_arm64.whl", hash = "sha256:cf71343646756a072b85f228d35b1d7407da1669a3de3cf47f8bbafe0c8183a4"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:10f32b53f424fc75ff7b713b2edb286fdbfc94bf16317890260a81c2c00385dc"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:81de24a1c51cfb32e1fbf018ab0bdbc79c04c035986526f76c33e3f9e0f3356c"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ac17044876e64a8ea20ab132080ddc73b895b4abe9976e263b0e30ee5be7b9c2"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5e8a78bd4879bff82daef48c14d5d4057f6856149094848c3ed0ecaf49f5aec2"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:78ca33811e1d95cac8c2e49cb86c0fb71f4d8409d8cbea0cb495b6dbddb30a55"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:c63c3ef43f0b3fb00571cff6c3967cc261c0ebd14a0a134a12e83bdb8f49f21f"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:7fde6d0e00b2fd0dbbb40c0eeec463ef147819f23725eda58105ba9ca48744f4"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_i686.whl", hash = "sha256:79edd779cfc46b2e15b0830eecd8b4b93f1a96649bcb502453df471a54ce7977"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:9164ec8010327ab9af931d7ccd12ab8d8b5dc2f4c6a16cbdd9d087861eaaefa1"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_10_7_x86_64.whl", hash = "sha256:d29ddefeab1791e3c751e0189d5f4b3dbc0bbe033b06e9c333dca1f99e1d523e"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:30adb75ecd7c2a52f5e76af50644b3e0b5ba036321c390b8e7ec1bb2a16dd43c"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:dd609fafdcdde6e67a139898196698af37438b035b25ad63704fd9097d9a3482"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6eef672de005736a6efd565577101277db6057f65640a813de6c2707dc69f396"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6cf4393c7b41abbf07c88eb83e8af5013606b1cdb7f6bc96b1b3536b53a574b8"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:ad857f42831e5b8d41a32437f88d86ead6c191455a3499c4b6d15e007936d4cf"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1d7360573f1e046cb3b0dceeb8864025aa78d98be4bb69f067ec1c40a9e2d9df"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d08f63561c8a695afec4975fae445245386d645e3e446e6f260e81663bfd2e38"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:f0f17f2ce0f3529177a5fff5525204fad7b43dd437d017dd0317f2746773443d"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_i686.whl", hash = "sha256:442626328600bde1d09dc3bb00434f5374948838ce75c41a52152615689f9403"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:e9616f5bd2595f7f4a04b67039d890348ab826e943a9bfdbe4938d0eba606971"},\\\\\\\\\\\\\\\\n    {file = "rpds_py-0.10.6.tar.gz", hash = "sha256:4ce5a708d65a8dbf3748d2474b580d606b1b9f91b5c6ab2a316e0b0cf7a4ba50"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "six"\\\\\\\\\\\\\\\\nversion = "1.16.0"\\\\\\\\\\\\\\\\ndescription = "Python 2 and 3 compatibility utilities"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},\\\\\\\\\\\\\\\\n    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "smmap"\\\\\\\\\\\\\\\\nversion = "5.0.1"\\\\\\\\\\\\\\\\ndescription = "A pure Python implementation of a sliding window memory map manager"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "smmap-5.0.1-py3-none-any.whl", hash = "sha256:e6d8668fa5f93e706934a62d7b4db19c8d9eb8cf2adbb75ef1b675aa332b69da"},\\\\\\\\\\\\\\\\n    {file = "smmap-5.0.1.tar.gz", hash = "sha256:dceeb6c0028fdb6734471eb07c0cd2aae706ccaecab45965ee83f11c8d3b1f62"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "streamlit"\\\\\\\\\\\\\\\\nversion = "1.36.0"\\\\\\\\\\\\\\\\ndescription = "A faster way to build and share data apps"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = "!=3.9.7,>=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "streamlit-1.36.0-py2.py3-none-any.whl", hash = "sha256:3399a33ea5faa26c05dd433d142eefe68ade67e9189a9e1d47a1731ae30a1c42"},\\\\\\\\\\\\\\\\n    {file = "streamlit-1.36.0.tar.gz", hash = "sha256:a12af9f0eb61ab5832f438336257b1ec20eb29d8e0e0c6b40a79116ba939bc9c"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\naltair = ">=4.0,<6"\\\\\\\\\\\\\\\\nblinker = ">=1.0.0,<2"\\\\\\\\\\\\\\\\ncachetools = ">=4.0,<6"\\\\\\\\\\\\\\\\nclick = ">=7.0,<9"\\\\\\\\\\\\\\\\ngitpython = ">=3.0.7,<3.1.19 || >3.1.19,<4"\\\\\\\\\\\\\\\\nnumpy = ">=1.20,<3"\\\\\\\\\\\\\\\\npackaging = ">=20,<25"\\\\\\\\\\\\\\\\npandas = ">=1.3.0,<3"\\\\\\\\\\\\\\\\npillow = ">=7.1.0,<11"\\\\\\\\\\\\\\\\nprotobuf = ">=3.20,<6"\\\\\\\\\\\\\\\\npyarrow = ">=7.0"\\\\\\\\\\\\\\\\npydeck = ">=0.8.0b4,<1"\\\\\\\\\\\\\\\\nrequests = ">=2.27,<3"\\\\\\\\\\\\\\\\nrich = ">=10.14.0,<14"\\\\\\\\\\\\\\\\ntenacity = ">=8.1.0,<9"\\\\\\\\\\\\\\\\ntoml = ">=0.10.1,<2"\\\\\\\\\\\\\\\\ntornado = ">=6.0.3,<7"\\\\\\\\\\\\\\\\ntyping-extensions = ">=4.3.0,<5"\\\\\\\\\\\\\\\\nwatchdog = {version = ">=2.1.5,<5", markers = "platform_system != \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Darwin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\nsnowflake = ["snowflake-connector-python (>=2.8.0)", "snowflake-snowpark-python (>=0.9.0)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "streamlit-option-menu"\\\\\\\\\\\\\\\\nversion = "0.3.13"\\\\\\\\\\\\\\\\ndescription = "streamlit-option-menu is a simple Streamlit component that allows users to select a single item from a list of options in a menu."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.6"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "streamlit-option-menu-0.3.13.tar.gz", hash = "sha256:a0fb4eb52bdc5060b0cbf08ef75fc27c78126e13cdcdde1ec7beea36c0cc3880"},\\\\\\\\\\\\\\\\n    {file = "streamlit_option_menu-0.3.13-py3-none-any.whl", hash = "sha256:7e7e4f8770bc444ea4e51b27d3f6dfbda87e369b686421137f323d5b9ad13c25"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.dependencies]\\\\\\\\\\\\\\\\nstreamlit = ">=0.63"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "tenacity"\\\\\\\\\\\\\\\\nversion = "8.2.3"\\\\\\\\\\\\\\\\ndescription = "Retry code until it succeeds"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "tenacity-8.2.3-py3-none-any.whl", hash = "sha256:ce510e327a630c9e1beaf17d42e6ffacc88185044ad85cf74c0a8887c6a0f88c"},\\\\\\\\\\\\\\\\n    {file = "tenacity-8.2.3.tar.gz", hash = "sha256:5398ef0d78e63f40007c1fb4c0bff96e1911394d2fa8d194f77619c05ff6cc8a"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\ndoc = ["reno", "sphinx", "tornado (>=4.5)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "toml"\\\\\\\\\\\\\\\\nversion = "0.10.2"\\\\\\\\\\\\\\\\ndescription = "Python Library for Tom\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'s Obvious, Minimal Language"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},\\\\\\\\\\\\\\\\n    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "toolz"\\\\\\\\\\\\\\\\nversion = "0.12.0"\\\\\\\\\\\\\\\\ndescription = "List processing tools and functional utilities"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.5"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "toolz-0.12.0-py3-none-any.whl", hash = "sha256:2059bd4148deb1884bb0eb770a3cde70e7f954cfbbdc2285f1f2de01fd21eb6f"},\\\\\\\\\\\\\\\\n    {file = "toolz-0.12.0.tar.gz", hash = "sha256:88c570861c440ee3f2f6037c4654613228ff40c93a6c25e0eba70d17282c6194"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "tornado"\\\\\\\\\\\\\\\\nversion = "6.3.3"\\\\\\\\\\\\\\\\ndescription = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">= 3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_universal2.whl", hash = "sha256:502fba735c84450974fec147340016ad928d29f1e91f49be168c0a4c18181e1d"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_x86_64.whl", hash = "sha256:805d507b1f588320c26f7f097108eb4023bbaa984d63176d1652e184ba24270a"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1bd19ca6c16882e4d37368e0152f99c099bad93e0950ce55e71daed74045908f"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7ac51f42808cca9b3613f51ffe2a965c8525cb1b00b7b2d56828b8045354f76a"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:71a8db65160a3c55d61839b7302a9a400074c9c753040455494e2af74e2501f2"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_aarch64.whl", hash = "sha256:ceb917a50cd35882b57600709dd5421a418c29ddc852da8bcdab1f0db33406b0"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_i686.whl", hash = "sha256:7d01abc57ea0dbb51ddfed477dfe22719d376119844e33c661d873bf9c0e4a16"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_x86_64.whl", hash = "sha256:9dc4444c0defcd3929d5c1eb5706cbe1b116e762ff3e0deca8b715d14bf6ec17"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-win32.whl", hash = "sha256:65ceca9500383fbdf33a98c0087cb975b2ef3bfb874cb35b8de8740cf7f41bd3"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-win_amd64.whl", hash = "sha256:22d3c2fa10b5793da13c807e6fc38ff49a4f6e1e3868b0a6f4164768bb8e20f5"},\\\\\\\\\\\\\\\\n    {file = "tornado-6.3.3.tar.gz", hash = "sha256:e7d8db41c0181c80d76c982aacc442c0783a2c54d6400fe028954201a2e032fe"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "typing-extensions"\\\\\\\\\\\\\\\\nversion = "4.8.0"\\\\\\\\\\\\\\\\ndescription = "Backported and Experimental Type Hints for Python 3.8+"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.8"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "typing_extensions-4.8.0-py3-none-any.whl", hash = "sha256:8f92fc8806f9a6b641eaa5318da32b44d401efaac0f6678c9bc448ba3605faa0"},\\\\\\\\\\\\\\\\n    {file = "typing_extensions-4.8.0.tar.gz", hash = "sha256:df8e4339e9cb77357558cbdbceca33c303714cf861d1eef15e1070055ae8b7ef"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "tzdata"\\\\\\\\\\\\\\\\nversion = "2023.3"\\\\\\\\\\\\\\\\ndescription = "Provider of IANA time zone data"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=2"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "tzdata-2023.3-py2.py3-none-any.whl", hash = "sha256:7e65763eef3120314099b6939b5546db7adce1e7d6f2e179e3df563c70511eda"},\\\\\\\\\\\\\\\\n    {file = "tzdata-2023.3.tar.gz", hash = "sha256:11ef1e08e54acb0d4f95bdb1be05da659673de4acbd21bf9c69e94cc5e907a3a"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "urllib3"\\\\\\\\\\\\\\\\nversion = "2.0.6"\\\\\\\\\\\\\\\\ndescription = "HTTP library with thread-safe connection pooling, file post, and more."\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "urllib3-2.0.6-py3-none-any.whl", hash = "sha256:7a7c7003b000adf9e7ca2a377c9688bbc54ed41b985789ed576570342a375cd2"},\\\\\\\\\\\\\\\\n    {file = "urllib3-2.0.6.tar.gz", hash = "sha256:b19e1a85d206b56d7df1d5e683df4a7725252a964e3993648dd0fb5a1c157564"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\nbrotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]\\\\\\\\\\\\\\\\nsecure = ["certifi", "cryptography (>=1.9)", "idna (>=2.0.0)", "pyopenssl (>=17.1.0)", "urllib3-secure-extra"]\\\\\\\\\\\\\\\\nsocks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]\\\\\\\\\\\\\\\\nzstd = ["zstandard (>=0.18.0)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[package]]\\\\\\\\\\\\\\\\nname = "watchdog"\\\\\\\\\\\\\\\\nversion = "3.0.0"\\\\\\\\\\\\\\\\ndescription = "Filesystem events monitoring"\\\\\\\\\\\\\\\\noptional = false\\\\\\\\\\\\\\\\npython-versions = ">=3.7"\\\\\\\\\\\\\\\\nfiles = [\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:336adfc6f5cc4e037d52db31194f7581ff744b67382eb6021c868322e32eef41"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:a70a8dcde91be523c35b2bf96196edc5730edb347e374c7de7cd20c43ed95397"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:adfdeab2da79ea2f76f87eb42a3ab1966a5313e5a69a0213a3cc06ef692b0e96"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:2b57a1e730af3156d13b7fdddfc23dea6487fceca29fc75c5a868beed29177ae"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:7ade88d0d778b1b222adebcc0927428f883db07017618a5e684fd03b83342bd9"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:7e447d172af52ad204d19982739aa2346245cc5ba6f579d16dac4bfec226d2e7"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:9fac43a7466eb73e64a9940ac9ed6369baa39b3bf221ae23493a9ec4d0022674"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:8ae9cda41fa114e28faf86cb137d751a17ffd0316d1c34ccf2235e8a84365c7f"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:25f70b4aa53bd743729c7475d7ec41093a580528b100e9a8c5b5efe8899592fc"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4f94069eb16657d2c6faada4624c39464f65c05606af50bb7902e036e3219be3"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:7c5f84b5194c24dd573fa6472685b2a27cc5a17fe5f7b6fd40345378ca6812e3"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:3aa7f6a12e831ddfe78cdd4f8996af9cf334fd6346531b16cec61c3b3c0d8da0"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:233b5817932685d39a7896b1090353fc8efc1ef99c9c054e46c8002561252fb8"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-pp37-pypy37_pp73-macosx_10_9_x86_64.whl", hash = "sha256:13bbbb462ee42ec3c5723e1205be8ced776f05b100e4737518c67c8325cf6100"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl", hash = "sha256:8f3ceecd20d71067c7fd4c9e832d4e22584318983cabc013dbf3f70ea95de346"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:c9d8c8ec7efb887333cf71e328e39cffbf771d8f8f95d308ea4125bf5f90ba64"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_aarch64.whl", hash = "sha256:0e06ab8858a76e1219e68c7573dfeba9dd1c0219476c5a44d5333b01d7e1743a"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_armv7l.whl", hash = "sha256:d00e6be486affb5781468457b21a6cbe848c33ef43f9ea4a73b4882e5f188a44"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_i686.whl", hash = "sha256:c07253088265c363d1ddf4b3cdb808d59a0468ecd017770ed716991620b8f77a"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64.whl", hash = "sha256:5113334cf8cf0ac8cd45e1f8309a603291b614191c9add34d33075727a967709"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64le.whl", hash = "sha256:51f90f73b4697bac9c9a78394c3acbbd331ccd3655c11be1a15ae6fe289a8c83"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_s390x.whl", hash = "sha256:ba07e92756c97e3aca0912b5cbc4e5ad802f4557212788e72a72a47ff376950d"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_x86_64.whl", hash = "sha256:d429c2430c93b7903914e4db9a966c7f2b068dd2ebdd2fa9b9ce094c7d459f33"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-win32.whl", hash = "sha256:3ed7c71a9dccfe838c2f0b6314ed0d9b22e77d268c67e015450a29036a81f60f"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-win_amd64.whl", hash = "sha256:4c9956d27be0bb08fc5f30d9d0179a855436e655f046d288e2bcc11adfae893c"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-win_ia64.whl", hash = "sha256:5d9f3a10e02d7371cd929b5d8f11e87d4bad890212ed3901f9b4d68767bee759"},\\\\\\\\\\\\\\\\n    {file = "watchdog-3.0.0.tar.gz", hash = "sha256:4d98a320595da7a7c5a18fc48cb633c2e73cda78f93cac2ef42d42bf609a33f9"},\\\\\\\\\\\\\\\\n]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[package.extras]\\\\\\\\\\\\\\\\nwatchmedo = ["PyYAML (>=3.10)"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[metadata]\\\\\\\\\\\\\\\\nlock-version = "2.0"\\\\\\\\\\\\\\\\npython-versions = ">=3.10.0,<3.11"\\\\\\\\\\\\\\\\ncontent-hash = "19326ad4cba6cf84c5b09afbd1b8f3eb811da4d2c1161a64d6d0e0f8e45f9c04"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of poetry.lock ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of .replit ---\\\\\\\\\\\\\\\\nentrypoint = "main.py"\\\\\\\\\\\\\\\\nrun = ["streamlit", "run", "app.py", "--server.headless", "true"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nmodules = ["python-3.10:v18-20230807-322e88b"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nhidden = [".pythonlibs"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[nix]\\\\\\\\\\\\\\\\nchannel = "stable-23_05"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[deployment]\\\\\\\\\\\\\\\\nrun = ["streamlit", "run", "--server.address", "0.0.0.0", "--server.headless", "true", "--server.enableCORS=false", "--server.enableWebsocketCompression=false", "--server.runOnSave=false", "app.py"]\\\\\\\\\\\\\\\\nignorePorts = false\\\\\\\\\\\\\\\\ndeploymentTarget = "gce"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[ports]]\\\\\\\\\\\\\\\\nlocalPort = 8501\\\\\\\\\\\\\\\\nexternalPort = 80\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n[[ports]]\\\\\\\\\\\\\\\\nlocalPort = 8502\\\\\\\\\\\\\\\\nexternalPort = 3000\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of .replit ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of app.py ---\\\\\\\\\\\\\\\\n# app.py\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# --- Streamlit Page Configuration ---\\\\\\\\\\\\\\\\nst.set_page_config(\\\\\\\\\\\\\\\\n    page_title="Omnivia Survey Platform",\\\\\\\\\\\\\\\\n    layout="wide",\\\\\\\\\\\\\\\\n    initial_sidebar_state="expanded",\\\\\\\\\\\\\\\\n    page_icon=":bar_chart:"\\\\\\\\\\\\\\\\n)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nfrom modules import personas, questions, results, analytics, utils, dashboard, price_sensitivity, live_polling\\\\\\\\\\\\\\\\nfrom PIL import Image\\\\\\\\\\\\\\\\nfrom streamlit_option_menu import option_menu\\\\\\\\\\\\\\\\nimport json\\\\\\\\\\\\\\\\nimport requests\\\\\\\\\\\\\\\\nfrom pymongo import MongoClient\\\\\\\\\\\\\\\\nimport logging\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Configure logging\\\\\\\\\\\\\\\\nlogging.basicConfig(level=logging.DEBUG)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# --- Load Brand Assets ---\\\\\\\\\\\\\\\\ndef load_brand_assets():\\\\\\\\\\\\\\\\n    logo_path = "logo.png"  # Replace with your logo path\\\\\\\\\\\\\\\\n    primary_color = "#FF6F61"\\\\\\\\\\\\\\\\n    try:\\\\\\\\\\\\\\\\n        logo = Image.open(logo_path)\\\\\\\\\\\\\\\\n        return logo, primary_color\\\\\\\\\\\\\\\\n    except FileNotFoundError:\\\\\\\\\\\\\\\\n        logging.error("Logo file not found.")\\\\\\\\\\\\\\\\n        return None, primary_color\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nlogo_image, primary_color = load_brand_assets()\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# --- Main App Logic ---\\\\\\\\\\\\\\\\ndef main():\\\\\\\\\\\\\\\\n    with st.container():\\\\\\\\\\\\\\\\n        if logo_image:\\\\\\\\\\\\\\\\n            st.image(logo_image, use_column_width=True)\\\\\\\\\\\\\\\\n        st.title("Omnivia Survey Platform")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        # --- Navigation ---\\\\\\\\\\\\\\\\n        selected = option_menu(\\\\\\\\\\\\\\\\n            menu_title=None,\\\\\\\\\\\\\\\\n            options=["Demand Meter", "Price Sensitivity", "Live Polling"],\\\\\\\\\\\\\\\\n            icons=["bar-chart", "graph-up-arrow", "chat-dots"],\\\\\\\\\\\\\\\\n            menu_icon="cast",\\\\\\\\\\\\\\\\n            default_index=0,\\\\\\\\\\\\\\\\n            styles={\\\\\\\\\\\\\\\\n                "container": {"padding": "5!important", "background-color": "#2A2A2A"},\\\\\\\\\\\\\\\\n                "icon": {"color": "white"},\\\\\\\\\\\\\\\\n                "nav-link": {"font-size": "16px", "text-align": "left", "margin": "0px", "--hover-color": "#D65A50"},\\\\\\\\\\\\\\\\n                "nav-link-selected": {"background-color": "#D65A50"},\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        )\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        # --- App Sections ---\\\\\\\\\\\\\\\\n        try:\\\\\\\\\\\\\\\\n            if selected == "Demand Meter":\\\\\\\\\\\\\\\\n                dashboard.run_dashboard()  # Call the module to run Demand Meter\\\\\\\\\\\\\\\\n            elif selected == "Price Sensitivity":\\\\\\\\\\\\\\\\n                price_sensitivity.run_price_sensitivity()  # Call the module to run Price Sensitivity\\\\\\\\\\\\\\\\n            elif selected == "Live Polling":\\\\\\\\\\\\\\\\n                live_polling.run_live_polling()  # Call the module to run Live Polling\\\\\\\\\\\\\\\\n        except Exception as e:\\\\\\\\\\\\\\\\n            st.error(f"Error running {selected}: {str(e)}")\\\\\\\\\\\\\\\\n            logging.error(f"Error running {selected}: {str(e)}")\\\\\\\\\\\\\\\\n            utils.log_error(selected, str(e))\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nif __name__ == "__main__":\\\\\\\\\\\\\\\\n    main()\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of app.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of loading_screen.css ---\\\\\\\\\\\\\\\\n/* loading_screen.css */\\\\\\\\\\\\\\\\nbody {\\\\\\\\\\\\\\\\n  background-color: #000;\\\\\\\\\\\\\\\\n  color: #0f0;\\\\\\\\\\\\\\\\n  font-family: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Courier New\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', Courier, monospace;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n.loading-text {\\\\\\\\\\\\\\\\n  font-size: 24px;\\\\\\\\\\\\\\\\n  text-align: center;\\\\\\\\\\\\\\\\n  padding-top: 20%;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n.loading-text::after {\\\\\\\\\\\\\\\\n  content: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\';\\\\\\\\\\\\\\\\n  display: inline-block;\\\\\\\\\\\\\\\\n  width: 1em;\\\\\\\\\\\\\\\\n  height: 1em;\\\\\\\\\\\\\\\\n  border-radius: 50%;\\\\\\\\\\\\\\\\n  background: #0f0;\\\\\\\\\\\\\\\\n  margin-left: 10px;\\\\\\\\\\\\\\\\n  animation: blink 1s infinite;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n@keyframes blink {\\\\\\\\\\\\\\\\n  0%, 50%, 100% {\\\\\\\\\\\\\\\\n    opacity: 1;\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\n  25%, 75% {\\\\\\\\\\\\\\\\n    opacity: 0;\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of loading_screen.css ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of example.py ---\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\nimport pandas as pd\\\\\\\\\\\\\\\\nimport numpy as np\\\\\\\\\\\\\\\\nimport plotly.express as px\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Set page configuration\\\\\\\\\\\\\\\\nst.set_page_config(\\\\\\\\\\\\\\\\n    page_title="Executive Report",\\\\\\\\\\\\\\\\n    layout="wide",\\\\\\\\\\\\\\\\n    initial_sidebar_state="expanded",\\\\\\\\\\\\\\\\n)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Navigation Tabs\\\\\\\\\\\\\\\\ntabs = [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Overview\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Price & Performance\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Portfolio & Management\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Fees & Minimums\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Distributions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'News & Reviews\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']\\\\\\\\\\\\\\\\ntab = st.sidebar.radio("Navigation", tabs)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Dummy data\\\\\\\\\\\\\\\\ndef generate_dummy_data():\\\\\\\\\\\\\\\\n    dates = pd.date_range(start="2023-01-01", periods=100, freq="D")\\\\\\\\\\\\\\\\n    values = np.random.randn(100).cumsum()\\\\\\\\\\\\\\\\n    return pd.DataFrame({"Date": dates, "Value": values})\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Header\\\\\\\\\\\\\\\\nst.title("Executive Report")\\\\\\\\\\\\\\\\nst.markdown("""\\\\\\\\\\\\\\\\nA comprehensive report highlighting key financial metrics, market trends, and potential risks for \\\\\\\\\\\\\\\\n**PSS World Medical, Inc. (PSSI)**.\\\\\\\\\\\\\\\\n""")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Main content based on selected tab\\\\\\\\\\\\\\\\nif tab == "Overview":\\\\\\\\\\\\\\\\n    st.header("Company Overview")\\\\\\\\\\\\\\\\n    st.markdown("""\\\\\\\\\\\\\\\\n    **PSS World Medical, Inc. (PSSI)**\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    - **Sector**: Healthcare\\\\\\\\\\\\\\\\n    - **Industry**: Medical Distribution\\\\\\\\\\\\\\\\n    - **Market Cap**: $2.3B\\\\\\\\\\\\\\\\n    """)\\\\\\\\\\\\\\\\n    st.image("https://via.placeholder.com/600x400", caption="Company Headquarters", use_column_width=True)\\\\\\\\\\\\\\\\n    st.subheader("Key Highlights")\\\\\\\\\\\\\\\\n    st.markdown("""\\\\\\\\\\\\\\\\n    - Strong market position\\\\\\\\\\\\\\\\n    - Consistent revenue growth\\\\\\\\\\\\\\\\n    - Expanding product lines\\\\\\\\\\\\\\\\n    """)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nelif tab == "Price & Performance":\\\\\\\\\\\\\\\\n    st.header("Price & Performance")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    st.subheader("Current Prices")\\\\\\\\\\\\\\\\n    current_prices = {\\\\\\\\\\\\\\\\n        "Price as of 02/27/2018": "$254.07",\\\\\\\\\\\\\\\\n        "Change": "-$3.23 (-1.26%)",\\\\\\\\\\\\\\\\n        "SEC Yield": "1.67%",\\\\\\\\\\\\\\\\n        "52-week high 01/26/2018": "$265.42",\\\\\\\\\\\\\\\\n        "52-week low 04/13/2017": "$215.11",\\\\\\\\\\\\\\\\n        "Range": "$50.31 (23.39%)"\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    st.table(pd.DataFrame.from_dict(current_prices, orient=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'index\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', columns=[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']).reset_index().rename(columns={"index": "Metric"}))\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    st.subheader("Historical Prices")\\\\\\\\\\\\\\\\n    historical_prices = pd.DataFrame({\\\\\\\\\\\\\\\\n        "Date": ["02/22/2018", "02/23/2018", "02/26/2018", "02/27/2018", "02/28/2018"],\\\\\\\\\\\\\\\\n        "Price": ["$250.26", "$254.29", "$257.30", "$254.07", "$251.27"]\\\\\\\\\\\\\\\\n    })\\\\\\\\\\\\\\\\n    st.table(historical_prices)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    st.subheader("Performance")\\\\\\\\\\\\\\\\n    data = generate_dummy_data()\\\\\\\\\\\\\\\\n    fig = px.line(data, x="Date", y="Value", title="Performance Over Time", labels={"Date": "Date", "Value": "Value"})\\\\\\\\\\\\\\\\n    fig.update_layout(height=400)\\\\\\\\\\\\\\\\n    st.plotly_chart(fig)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    st.subheader("Average Annual Returns")\\\\\\\\\\\\\\\\n    annual_returns = pd.DataFrame({\\\\\\\\\\\\\\\\n        "Metric": ["500 Index Fund Inv", "S&P 500 Index"],\\\\\\\\\\\\\\\\n        "1 Year": ["16.94%", "17.01%"],\\\\\\\\\\\\\\\\n        "3 Year": ["11.00%", "11.14%"],\\\\\\\\\\\\\\\\n        "5 Year": ["14.57%", "14.73%"],\\\\\\\\\\\\\\\\n        "10 Year": ["9.60%", "9.73%"],\\\\\\\\\\\\\\\\n        "Since Inception": ["11.12%", "-"]\\\\\\\\\\\\\\\\n    })\\\\\\\\\\\\\\\\n    st.table(annual_returns)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    st.subheader("After-tax Returns")\\\\\\\\\\\\\\\\n    after_tax_returns = pd.DataFrame({\\\\\\\\\\\\\\\\n        "Metric": ["500 Index Fund Inv", "Returns after taxes on distributions", "Returns after taxes on distributions and sale of fund shares"],\\\\\\\\\\\\\\\\n        "1 Year": ["21.67%", "12.64%", "20.44%"],\\\\\\\\\\\\\\\\n        "3 Year": ["11.26%", "8.71%", "9.70%"],\\\\\\\\\\\\\\\\n        "5 Year": ["15.62%", "12.51%", "14.24%"],\\\\\\\\\\\\\\\\n        "10 Year": ["8.37%", "6.75%", "7.61%"],\\\\\\\\\\\\\\\\n        "Since Inception": ["11.11%", "-", "-"]\\\\\\\\\\\\\\\\n    })\\\\\\\\\\\\\\\\n    st.table(after_tax_returns)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nelif tab == "Portfolio & Management":\\\\\\\\\\\\\\\\n    st.header("Portfolio & Management")\\\\\\\\\\\\\\\\n    st.markdown("Details about the portfolio and management team go here.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nelif tab == "Fees & Minimums":\\\\\\\\\\\\\\\\n    st.header("Fees & Minimums")\\\\\\\\\\\\\\\\n    st.markdown("Details about the fees and minimums go here.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nelif tab == "Distributions":\\\\\\\\\\\\\\\\n    st.header("Distributions")\\\\\\\\\\\\\\\\n    st.markdown("Details about the distributions go here.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nelif tab == "News & Reviews":\\\\\\\\\\\\\\\\n    st.header("News & Reviews")\\\\\\\\\\\\\\\\n    st.markdown("Details about the latest news and reviews go here.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Custom CSS for styling\\\\\\\\\\\\\\\\nst.markdown("""\\\\\\\\\\\\\\\\n    <style>\\\\\\\\\\\\\\\\n    .report-container { max-width: 1200px; margin: 0 auto; }\\\\\\\\\\\\\\\\n    .header { background-color: #f0f2f6; padding: 20px; border-radius: 5px; margin-bottom: 20px; text-align: center; }\\\\\\\\\\\\\\\\n    .header h1 { font-size: 2.5em; margin-bottom: 0; }\\\\\\\\\\\\\\\\n    .header p { font-size: 1.2em; color: #666; }\\\\\\\\\\\\\\\\n    .main { background-color: #fff; padding: 20px; border-radius: 5px; margin-bottom: 20px; }\\\\\\\\\\\\\\\\n    .section-title { font-size: 1.8em; margin-bottom: 20px; border-bottom: 2px solid #e0e0e0; padding-bottom: 10px; }\\\\\\\\\\\\\\\\n    .metric-box { text-align: center; background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\\\\\\\\\\\\\\\\n    .metric-box h2 { font-size: 1.5em; margin: 0; }\\\\\\\\\\\\\\\\n    .metric-box p { font-size: 1.2em; color: #666; margin: 0; }\\\\\\\\\\\\\\\\n    .visual-card { background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\\\\\\\\\\\\\\\\n    </style>\\\\\\\\\\\\\\\\n""", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of example.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Directory: modules ---\\\\\\\\\\\\\\\\n--- Start of modules/dashboard.py ---\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\nimport pandas as pd\\\\\\\\\\\\\\\\nimport plotly.express as px\\\\\\\\\\\\\\\\nimport plotly.graph_objs as go\\\\\\\\\\\\\\\\nfrom itertools import product\\\\\\\\\\\\\\\\nfrom modules import utils, narrative  # Ensure you have the utils and narrative modules defined\\\\\\\\\\\\\\\\nimport logging\\\\\\\\\\\\\\\\nfrom openai import OpenAI\\\\\\\\\\\\\\\\nimport os\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Configure logging\\\\\\\\\\\\\\\\nlogging.basicConfig(level=logging.INFO)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Custom CSS for better visuals and modern look\\\\\\\\\\\\\\\\nst.markdown("""\\\\\\\\\\\\\\\\n    <style>\\\\\\\\\\\\\\\\n        body {\\\\\\\\\\\\\\\\n            font-family: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Segoe UI\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', Tahoma, Geneva, Verdana, sans-serif;\\\\\\\\\\\\\\\\n            background-color: #1E1E1E;\\\\\\\\\\\\\\\\n            color: #D4D4D4;\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n        .report-title {\\\\\\\\\\\\\\\\n            font-size: 2.5rem;\\\\\\\\\\\\\\\\n            color: #FFC300;\\\\\\\\\\\\\\\\n            margin-top: 20px;\\\\\\\\\\\\\\\\n            margin-bottom: 20px;\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n        .section-header {\\\\\\\\\\\\\\\\n            font-size: 1.8rem;\\\\\\\\\\\\\\\\n            color: #FFD700;\\\\\\\\\\\\\\\\n            margin-top: 20px;\\\\\\\\\\\\\\\\n            margin-bottom: 10px;\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n        .key-insights {\\\\\\\\\\\\\\\\n            font-size: 1.2rem;\\\\\\\\\\\\\\\\n            color: #E0E0E0;\\\\\\\\\\\\\\\\n            background-color: #333333;\\\\\\\\\\\\\\\\n            padding: 20px;\\\\\\\\\\\\\\\\n            border-radius: 10px;\\\\\\\\\\\\\\\\n            margin-top: 20px;\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n        .metric {\\\\\\\\\\\\\\\\n            font-size: 1.5rem;\\\\\\\\\\\\\\\\n            font-weight: bold;\\\\\\\\\\\\\\\\n            color: #FFD700;\\\\\\\\\\\\\\\\n            margin: 10px 0;\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n        .sidebar .sidebar-content {\\\\\\\\\\\\\\\\n            background-color: #333333;\\\\\\\\\\\\\\\\n            padding: 20px;\\\\\\\\\\\\\\\\n            border-radius: 10px;\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n        .sidebar .sidebar-content input, .sidebar .sidebar-content select {\\\\\\\\\\\\\\\\n            background-color: #444444;\\\\\\\\\\\\\\\\n            color: #D4D4D4;\\\\\\\\\\\\\\\\n            border: none;\\\\\\\\\\\\\\\\n            border-radius: 5px;\\\\\\\\\\\\\\\\n            padding: 10px;\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n        .sidebar .sidebar-content button {\\\\\\\\\\\\\\\\n            background-color: #FFC300;\\\\\\\\\\\\\\\\n            color: #1E1E1E;\\\\\\\\\\\\\\\\n            border: none;\\\\\\\\\\\\\\\\n            border-radius: 5px;\\\\\\\\\\\\\\\\n            padding: 10px 20px;\\\\\\\\\\\\\\\\n            margin-top: 10px;\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n    </style>\\\\\\\\\\\\\\\\n""", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Initialize OpenAI client\\\\\\\\\\\\\\\\nopenai_client = OpenAI()\\\\\\\\\\\\\\\\nopenai_client.api_key = os.getenv(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'OPENAI_API_KEY\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\nif not openai_client.api_key:\\\\\\\\\\\\\\\\n    st.error("OpenAI API key is missing. Please set the OPENAI_API_KEY environment variable.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Function to generate narrative summary using OpenAI GPT\\\\\\\\\\\\\\\\ndef generate_narrative_summary(df):\\\\\\\\\\\\\\\\n    prompt = f"Generate an executive summary for the following data:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n{df.to_string(index=False)}"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    try:\\\\\\\\\\\\\\\\n        response = openai_client.chat.completions.create(\\\\\\\\\\\\\\\\n            model="gpt-3.5-turbo",\\\\\\\\\\\\\\\\n            messages=[\\\\\\\\\\\\\\\\n                {"role": "system", "content": "You are a helpful assistant."},\\\\\\\\\\\\\\\\n                {"role": "user", "content": prompt}\\\\\\\\\\\\\\\\n            ],\\\\\\\\\\\\\\\\n            max_tokens=200\\\\\\\\\\\\\\\\n        )\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        # Check if the response has a \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'choices\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' field and if it\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'s not empty\\\\\\\\\\\\\\\\n        if response.choices:\\\\\\\\\\\\\\\\n            summary = response.choices[0].message.content.strip()\\\\\\\\\\\\\\\\n            return summary\\\\\\\\\\\\\\\\n        else:\\\\\\\\\\\\\\\\n            st.warning("OpenAI response did not contain a summary. Please try again later.")\\\\\\\\\\\\\\\\n            return ""  # Return an empty string if there\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'s no summary\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    except Exception as e:\\\\\\\\\\\\\\\\n        logging.error(f"Error generating narrative summary: {str(e)}")\\\\\\\\\\\\\\\\n        st.error(f"Error generating narrative summary. Please try again later.")\\\\\\\\\\\\\\\\n        return "" \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Function to generate predictive analytics \\\\\\\\\\\\\\\\ndef generate_predictive_analytics(df):\\\\\\\\\\\\\\\\n    df[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Predicted_Demand_Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'] = df[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'] * 1.05  # Mock prediction logic\\\\\\\\\\\\\\\\n    return df[[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Predicted_Demand_Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Function to personalize dashboard based on user preferences\\\\\\\\\\\\\\\\ndef personalized_insights(user_preferences):\\\\\\\\\\\\\\\\n    insights = f"Personalized insights based on preferences: {user_preferences}"\\\\\\\\\\\\\\\\n    return insights\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Function to set up alerts and notifications\\\\\\\\\\\\\\\\ndef setup_alerts():\\\\\\\\\\\\\\\\n    st.sidebar.header("Alerts and Notifications")\\\\\\\\\\\\\\\\n    st.sidebar.text_input("Enter Alert Criteria", key="alert_criteria")\\\\\\\\\\\\\\\\n    if st.sidebar.button("Set Alert"):\\\\\\\\\\\\\\\\n        st.sidebar.success("Alert set successfully!")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Run the main dashboard application\\\\\\\\\\\\\\\\ndef run_dashboard():\\\\\\\\\\\\\\\\n    try:\\\\\\\\\\\\\\\\n        st.markdown("<h1 class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'report-title\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>Executive Dashboard - AI-Powered Demand Insights</h1>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        st.sidebar.markdown("<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'sidebar-content\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n        product_name = st.sidebar.text_input("Product Name:", placeholder="Enter the product name")\\\\\\\\\\\\\\\\n        product_features = st.sidebar.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\\\\\\\\\\\\\\\\n        tagline_options = st.sidebar.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\\\\\\\\\\\\\\\\n        price_options_str = st.sidebar.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        try:\\\\\\\\\\\\\\\\n            price_options = [float(x.strip()) for x in price_options_str.split(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')] if price_options_str else []\\\\\\\\\\\\\\\\n            price_error = False\\\\\\\\\\\\\\\\n        except ValueError:\\\\\\\\\\\\\\\\n            price_error = True\\\\\\\\\\\\\\\\n            price_options = []\\\\\\\\\\\\\\\\n            st.sidebar.warning("Invalid price options. Please enter comma-separated numbers.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        st.sidebar.markdown("<h3 class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>Simulation Configuration</h3>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n        num_bots = st.sidebar.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\\\\\\\\\\\\\\\\n        male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\\\\\\\\\\\\\\\\n        income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\\\\\\\\\\\\\\\\n        interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\\\\\\\\\\\\\\\n        interests_list = [i.strip() for i in interests.split(",")] if interests else []\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        if interests_list:\\\\\\\\\\\\\\\\n            st.sidebar.markdown("<h3 class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>Interests:</h3>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n            st.sidebar.markdown(" ".join([f\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'<span style="background-color: #FFD700; color: #1E1E1E; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' for interest in interests_list]), unsafe_allow_html=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        # Initialize df outside the conditional block\\\\\\\\\\\\\\\\n        df = pd.DataFrame() \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        if st.sidebar.button("Calculate Demand") and not price_error:\\\\\\\\\\\\\\\\n            if not all([product_name, product_features, tagline_options, price_options]):\\\\\\\\\\\\\\\\n                st.warning("Please fill in all product details.")\\\\\\\\\\\\\\\\n            else:\\\\\\\\\\\\\\\\n                features = [x.strip() for x in product_features.split(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')]\\\\\\\\\\\\\\\\n                taglines = [x.strip() for x in tagline_options.split(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')]\\\\\\\\\\\\\\\\n                st.write(f"**Product Name:** {product_name}")\\\\\\\\\\\\\\\\n                st.write(f"**Features:** {features}")\\\\\\\\\\\\\\\\n                st.write(f"**Taglines:** {taglines}")\\\\\\\\\\\\\\\\n                st.write(f"**Prices:** {price_options}")\\\\\\\\\\\\\\\\n                st.write(f"**Number of Bots:** {num_bots}")\\\\\\\\\\\\\\\\n                combinations = list(product(features, taglines, price_options))\\\\\\\\\\\\\\\\n                st.write(f"**Combinations:** {combinations}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n                progress_placeholder = st.empty()\\\\\\\\\\\\\\\\n                try:\\\\\\\\\\\\\\\\n                    df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\\\\\\\\\\\\\\\\n                except Exception as e:\\\\\\\\\\\\\\\\n                    st.error(f"Error during simulation: {str(e)}")\\\\\\\\\\\\\\\\n                    logging.error(f"Error during simulation: {str(e)}")\\\\\\\\\\\\\\\\n                    utils.log_error("Demand Meter", str(e))\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n                if not df.empty:\\\\\\\\\\\\\\\\n                    required_columns = [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']\\\\\\\\\\\\\\\\n                    if not all(col in df.columns for col in required_columns):\\\\\\\\\\\\\\\\n                        st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\\\\\\\\\\\\\\\\n                        return\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n                    st.markdown("<h2 class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>Executive Summary</h2>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n                    summary = generate_narrative_summary(df)\\\\\\\\\\\\\\\\n                    st.markdown(f"<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'key-insights\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>{summary}</div>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n                    st.markdown("<h2 class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>Detailed Analysis</h2>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n                    fig = px.scatter(df, x=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', y=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', color=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', hover_data=[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'])\\\\\\\\\\\\\\\\n                    st.plotly_chart(fig, use_container_width=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n                    heatmap_data = df.pivot_table(index="Feature", columns="Tagline", values="Demand Score")\\\\\\\\\\\\\\\\n                    fig = go.Figure(data=go.Heatmap(z=heatmap_data.values, x=heatmap_data.columns, y=heatmap_data.index))\\\\\\\\\\\\\\\\n                    st.plotly_chart(fig, use_container_width=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n                    # User Feedback\\\\\\\\\\\\\\\\n                    st.markdown("<h2 class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>User Feedback</h2>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n                    feedback = st.text_area("Enter your feedback here:")\\\\\\\\\\\\\\\\n                    if st.button("Submit Feedback"):\\\\\\\\\\\\\\\\n                        utils.log_feedback(product_name, feedback)\\\\\\\\\\\\\\\\n                        st.success("Thank you for your feedback!")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        # Predictive Analytics (Now uses df even if not calculated)\\\\\\\\\\\\\\\\n        st.markdown("<h2 class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>Predictive Analytics</h2>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n        if not df.empty:  # Check if df is populated\\\\\\\\\\\\\\\\n            predictions = generate_predictive_analytics(df)\\\\\\\\\\\\\\\\n            st.write(predictions)\\\\\\\\\\\\\\\\n        else:\\\\\\\\\\\\\\\\n            st.info("Please run a simulation to view predictive analytics.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        # Personalized Insights (Now uses df even if not calculated)\\\\\\\\\\\\\\\\n        st.markdown("<h2 class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>Personalized Insights</h2>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n        user_preferences = st.text_input("Enter your preferences (comma-separated):", placeholder="Preference1, Preference2")\\\\\\\\\\\\\\\\n        if user_preferences and not df.empty:  # Check for both preferences and data\\\\\\\\\\\\\\\\n            insights = personalized_insights(user_preferences)\\\\\\\\\\\\\\\\n            st.write(insights)\\\\\\\\\\\\\\\\n        else:\\\\\\\\\\\\\\\\n            st.info("Please run a simulation to view personalized insights.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        # Set up Alerts\\\\\\\\\\\\\\\\n        setup_alerts()\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    except Exception as e:\\\\\\\\\\\\\\\\n        logging.error(f"Error in run_dashboard: {str(e)}")\\\\\\\\\\\\\\\\n        st.error(f"Error in run_dashboard: {str(e)}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nif __name__ == "__main__":\\\\\\\\\\\\\\\\n    run_dashboard()\\\\\\\\\\\\\\\\n--- End of modules/dashboard.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/visualizations.py ---\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\nimport seaborn as sns\\\\\\\\\\\\\\\\nimport matplotlib.pyplot as plt\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef plot_demand_distribution(df):\\\\\\\\\\\\\\\\n    st.write("### Demand Score Distribution")\\\\\\\\\\\\\\\\n    fig, ax = plt.subplots(figsize=(10, 6))\\\\\\\\\\\\\\\\n    sns.histplot(df[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'], bins=20, kde=True, ax=ax)\\\\\\\\\\\\\\\\n    st.pyplot(fig)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef plot_demand_heatmap(df):\\\\\\\\\\\\\\\\n    st.write("### Demand Score Heatmap")\\\\\\\\\\\\\\\\n    try:\\\\\\\\\\\\\\\\n        heatmap_data = df.pivot_table(values=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', index=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', columns=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', aggfunc=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'mean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n        fig, ax = plt.subplots(figsize=(12, 8))\\\\\\\\\\\\\\\\n        sns.heatmap(heatmap_data, annot=True, cmap="YlGnBu", ax=ax)\\\\\\\\\\\\\\\\n        st.pyplot(fig)\\\\\\\\\\\\\\\\n    except Exception as e:\\\\\\\\\\\\\\\\n        st.error(f"Error creating heatmap: {str(e)}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of modules/visualizations.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/narrative.py ---\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef generate_summary(df):\\\\\\\\\\\\\\\\n    st.markdown("<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'key-insights\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n    best_combination = df.loc[df[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'].idxmax()]\\\\\\\\\\\\\\\\n    st.markdown(f"<p class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'metric\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>Best Combination: Feature - {best_combination[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']}, Tagline - {best_combination[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']}, Price - ${best_combination[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']}</p>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n    st.markdown(f"<p class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'metric\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>Highest Demand Score: {best_combination[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']:.1f}</p>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    if df[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'].min() < 70:\\\\\\\\\\\\\\\\n        st.markdown("<p>Suggestions for Improvement:</p>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n        st.markdown("<ul><li>Consider revising features, taglines, or prices to boost demand.</li></ul>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n    st.markdown("</div>", unsafe_allow_html=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of modules/narrative.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/live_polling.py ---\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\nimport pandas as pd\\\\\\\\\\\\\\\\nimport random\\\\\\\\\\\\\\\\nimport concurrent.futures\\\\\\\\\\\\\\\\nimport math\\\\\\\\\\\\\\\\nfrom modules import utils, results, analytics\\\\\\\\\\\\\\\\nimport time  # Ensure the time module is imported\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef run_live_polling():\\\\\\\\\\\\\\\\n    """Runs the Live Polling section of the app."""\\\\\\\\\\\\\\\\n    st.subheader("Live Polling")\\\\\\\\\\\\\\\\n    st.write("**Real-time Results and Interactive Visualizations**")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # --- Live Polling Input ---\\\\\\\\\\\\\\\\n    st.sidebar.subheader("Create Survey")\\\\\\\\\\\\\\\\n    survey_question = st.sidebar.text_input("Enter your survey question:", "")\\\\\\\\\\\\\\\\n    options = {f"option_{chr(65+i)}": st.sidebar.text_input(f"Enter option {chr(65+i)}:", "") for i in range(4)}\\\\\\\\\\\\\\\\n    followups = [st.sidebar.text_input(f"Enter follow-up question {i+1}:", "") for i in range(2)]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # --- Live Polling Logic and Display ---\\\\\\\\\\\\\\\\n    votes = {key: 0 for key in options.keys()}\\\\\\\\\\\\\\\\n    if st.button("Start Poll"):\\\\\\\\\\\\\\\\n        if not survey_question or not any(options.values()):\\\\\\\\\\\\\\\\n            st.warning("Please enter a question and options.")\\\\\\\\\\\\\\\\n        else:\\\\\\\\\\\\\\\\n            selected_option = st.selectbox("Choose your option:", options.values())\\\\\\\\\\\\\\\\n            if st.button("Vote"):\\\\\\\\\\\\\\\\n                votes[selected_option] += 1\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            st.write(f"**Poll Results:**")\\\\\\\\\\\\\\\\n            for option, count in votes.items():\\\\\\\\\\\\\\\\n                st.write(f"- {option}: {count} votes")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            # Simple timer (You\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'ll likely replace this with real-time updates)\\\\\\\\\\\\\\\\n            start_time = time.time()\\\\\\\\\\\\\\\\n            while time.time() - start_time < 10: # 10 seconds for example\\\\\\\\\\\\\\\\n                st.write(f"Time remaining: {10 - int(time.time() - start_time)} seconds")\\\\\\\\\\\\\\\\n                st.experimental_rerun()\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # --- Live Polling Input (Demographics) ---\\\\\\\\\\\\\\\\n    st.sidebar.subheader("Specify Demographics")\\\\\\\\\\\\\\\\n    male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\\\\\\\\\\\\\\\\n    female_percentage = 100 - male_percentage\\\\\\\\\\\\\\\\n    income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Interest badges\\\\\\\\\\\\\\\\n    interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\\\\\\\\\\\\\\\n    interests_list = interests.split(",") if interests else []\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    if interests_list:\\\\\\\\\\\\\\\\n        st.sidebar.markdown("### Interests:")\\\\\\\\\\\\\\\\n        for interest in interests_list:\\\\\\\\\\\\\\\\n            st.sidebar.markdown(\\\\\\\\\\\\\\\\n                f"""<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest.strip()}</span>""",\\\\\\\\\\\\\\\\n                unsafe_allow_html=True\\\\\\\\\\\\\\\\n            )\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    num_bots = st.sidebar.number_input("Enter number of bots:", min_value=1, max_value=1000, value=100)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Start button\\\\\\\\\\\\\\\\n    start_button = st.sidebar.button("Start Survey Simulation")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Simulation settings\\\\\\\\\\\\\\\\n    MAX_CONCURRENT_THREADS = 25\\\\\\\\\\\\\\\\n    batch_size = 25\\\\\\\\\\\\\\\\n    num_batches = math.ceil(num_bots / batch_size)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Survey simulation logic\\\\\\\\\\\\\\\\n    if start_button:\\\\\\\\\\\\\\\\n        bot_data = utils.generate_survey_data(int(num_bots), male_percentage, income_range, interests_list)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        # Sentiment Analysis\\\\\\\\\\\\\\\\n        sentiment_results = analytics.analyze_sentiment([data[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'persona\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'] for data in bot_data.values()])\\\\\\\\\\\\\\\\n        st.write("### Sentiment Analysis")\\\\\\\\\\\\\\\\n        sentiment_df = pd.DataFrame(sentiment_results)\\\\\\\\\\\\\\\\n        st.dataframe(sentiment_df)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n        # Display Results\\\\\\\\\\\\\\\\n        results.display_survey_results(bot_data)\\\\\\\\\\\\\\\\n--- End of modules/live_polling.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/price_sensitivity.py ---\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\nimport pandas as pd\\\\\\\\\\\\\\\\nimport json\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef run_price_sensitivity():\\\\\\\\\\\\\\\\n    """Runs the Price Sensitivity section of the app."""\\\\\\\\\\\\\\\\n    st.subheader("Price Sensitivity")\\\\\\\\\\\\\\\\n    st.write("**Analyze the impact of different prices on demand**")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # --- Price Sensitivity Analysis ---\\\\\\\\\\\\\\\\n    price_points_str = st.text_input("Enter Price Points (comma-separated):")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Validate and parse price points\\\\\\\\\\\\\\\\n    try:\\\\\\\\\\\\\\\\n        price_points = [float(x.strip()) for x in price_points_str.split(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')] if price_points_str else []\\\\\\\\\\\\\\\\n        price_error = False\\\\\\\\\\\\\\\\n    except ValueError:\\\\\\\\\\\\\\\\n        price_error = True\\\\\\\\\\\\\\\\n        price_points = []\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    if price_error:\\\\\\\\\\\\\\\\n        st.warning("Invalid price points. Please enter comma-separated numbers.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    if st.button("Run Price Sensitivity Analysis") and not price_error:\\\\\\\\\\\\\\\\n        if not price_points:\\\\\\\\\\\\\\\\n            st.warning("Please enter price points.")\\\\\\\\\\\\\\\\n        else:\\\\\\\\\\\\\\\\n            st.write(f"**Price Points:** {price_points}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            # Simulate retrieving responses from a database\\\\\\\\\\\\\\\\n            responses = []  # Replace with actual database call\\\\\\\\\\\\\\\\n            if responses:\\\\\\\\\\\\\\\\n                # Placeholder for actual price sensitivity analysis\\\\\\\\\\\\\\\\n                st.write("**Analysis Results:**")\\\\\\\\\\\\\\\\n                for point in price_points:\\\\\\\\\\\\\\\\n                    st.write(f"At ${point}, the demand is...")  # Placeholder for actual logic\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n                # Example of Van Westendorp Price Sensitivity Analysis\\\\\\\\\\\\\\\\n                st.write("**Van Westendorp Price Sensitivity Analysis:**")\\\\\\\\\\\\\\\\n                optimal_price_range = (min(price_points), max(price_points))  # Placeholder for actual analysis\\\\\\\\\\\\\\\\n                st.write(f"Optimal Price Range: {optimal_price_range}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n                # Example of Gabor-Granger Price Sensitivity Analysis\\\\\\\\\\\\\\\\n                st.write("**Gabor-Granger Price Sensitivity Analysis:**")\\\\\\\\\\\\\\\\n                demand_at_price = {point: random.randint(50, 100) for point in price_points}  # Placeholder\\\\\\\\\\\\\\\\n                st.write(f"Demand at Different Price Points: {demand_at_price}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n                # Chart for Gabor-Granger Results\\\\\\\\\\\\\\\\n                option = {\\\\\\\\\\\\\\\\n                    "title": {"text": "Gabor-Granger Price Sensitivity", "left": "center"},\\\\\\\\\\\\\\\\n                    "xAxis": {"type": "category", "data": price_points},\\\\\\\\\\\\\\\\n                    "yAxis": {"type": "value"},\\\\\\\\\\\\\\\\n                    "series": [\\\\\\\\\\\\\\\\n                        {"data": list(demand_at_price.values()), "type": "bar", "showBackground": True, "backgroundStyle": {"color": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'rgba(180, 180, 180, 0.2)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}}\\\\\\\\\\\\\\\\n                    ]\\\\\\\\\\\\\\\\n                }\\\\\\\\\\\\\\\\n                st.echarts(options=json.dumps(option), height="400px")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of modules/price_sensitivity.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/old.py ---\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\nimport pandas as pd\\\\\\\\\\\\\\\\nfrom itertools import product\\\\\\\\\\\\\\\\nfrom modules import utils, visualizations, narrative\\\\\\\\\\\\\\\\nfrom autogen import AssistantAgent, UserProxyAgent\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef run_dashboard():\\\\\\\\\\\\\\\\n    st.title("Executive Dashboard - AI-Powered Demand Insights")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    product_name = st.text_input("Product Name:", placeholder="Enter the product name")\\\\\\\\\\\\\\\\n    product_features = st.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\\\\\\\\\\\\\\\\n    tagline_options = st.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\\\\\\\\\\\\\\\\n    price_options_str = st.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    try:\\\\\\\\\\\\\\\\n        price_options = [float(x.strip()) for x in price_options_str.split(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')] if price_options_str else []\\\\\\\\\\\\\\\\n        price_error = False\\\\\\\\\\\\\\\\n    except ValueError:\\\\\\\\\\\\\\\\n        price_error = True\\\\\\\\\\\\\\\\n        price_options = []\\\\\\\\\\\\\\\\n        st.warning("Invalid price options. Please enter comma-separated numbers.")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    st.header("Simulation Configuration")\\\\\\\\\\\\\\\\n    num_bots = st.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\\\\\\\\\\\\\\\\n    male_percentage = st.slider("Male Percentage", 0, 100, 50)\\\\\\\\\\\\\\\\n    income_range = st.slider("Income Range (in thousands)", 0, 500, (50, 150))\\\\\\\\\\\\\\\\n    interests = st.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\\\\\\\\\\\\\\\n    interests_list = [i.strip() for i in interests.split(",")] if interests else []\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    if interests_list:\\\\\\\\\\\\\\\\n        st.markdown("### Interests:")\\\\\\\\\\\\\\\\n        st.markdown(" ".join([f\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' for interest in interests_list]), unsafe_allow_html=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    if st.button("Calculate Demand") and not price_error:\\\\\\\\\\\\\\\\n        if not all([product_name, product_features, tagline_options, price_options]):\\\\\\\\\\\\\\\\n            st.warning("Please fill in all product details.")\\\\\\\\\\\\\\\\n        else:\\\\\\\\\\\\\\\\n            features = [x.strip() for x in product_features.split(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')]\\\\\\\\\\\\\\\\n            taglines = [x.strip() for x in tagline_options.split(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')]\\\\\\\\\\\\\\\\n            st.write(f"**Product Name:** {product_name}")\\\\\\\\\\\\\\\\n            st.write(f"**Features:** {features}")\\\\\\\\\\\\\\\\n            st.write(f"**Taglines:** {taglines}")\\\\\\\\\\\\\\\\n            st.write(f"**Prices:** {price_options}")\\\\\\\\\\\\\\\\n            st.write(f"**Number of Bots:** {num_bots}")\\\\\\\\\\\\\\\\n            combinations = list(product(features, taglines, price_options))\\\\\\\\\\\\\\\\n            st.write(f"**Combinations:** {combinations}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            progress_placeholder = st.empty()\\\\\\\\\\\\\\\\n            try:\\\\\\\\\\\\\\\\n                df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\\\\\\\\\\\\\\\\n            except Exception as e:\\\\\\\\\\\\\\\\n                st.error(f"Error during simulation: {str(e)}")\\\\\\\\\\\\\\\\n                utils.log_error("Demand Meter", str(e))\\\\\\\\\\\\\\\\n                return\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            if df.empty:\\\\\\\\\\\\\\\\n                st.error("No valid data was generated. Please check your inputs and try again.")\\\\\\\\\\\\\\\\n                return\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            required_columns = [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']\\\\\\\\\\\\\\\\n            if not all(col in df.columns for col in required_columns):\\\\\\\\\\\\\\\\n                st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\\\\\\\\\\\\\\\\n                return\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            st.header("Executive Summary")\\\\\\\\\\\\\\\\n            narrative.generate_summary(df)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            st.header("Detailed Analysis")\\\\\\\\\\\\\\\\n            visualizations.plot_demand_distribution(df)\\\\\\\\\\\\\\\\n            visualizations.plot_demand_heatmap(df)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            st.header("User Feedback")\\\\\\\\\\\\\\\\n            feedback = st.text_area("Enter your feedback here:")\\\\\\\\\\\\\\\\n            if st.button("Submit Feedback"):\\\\\\\\\\\\\\\\n                utils.log_feedback(product_name, feedback)\\\\\\\\\\\\\\\\n                st.success("Thank you for your feedback!")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n            st.header("Automated Insights")\\\\\\\\\\\\\\\\n            config_list = [{"model": "gpt-3.5-turbo"}]\\\\\\\\\\\\\\\\n            assistant = AssistantAgent(name="Assistant", llm_config={"config_list": config_list})\\\\\\\\\\\\\\\\n            user_proxy = UserProxyAgent(name="User_proxy", code_execution_config={"work_dir": "coding"})\\\\\\\\\\\\\\\\n            try:\\\\\\\\\\\\\\\\n                insights = utils.generate_insights(assistant, user_proxy, df.to_dict(orient=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'records\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'))\\\\\\\\\\\\\\\\n                st.write(insights)\\\\\\\\\\\\\\\\n            except Exception as e:\\\\\\\\\\\\\\\\n                st.error(f"Failed to generate insights: {e}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nif __name__ == "__main__":\\\\\\\\\\\\\\\\n    run_dashboard()\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of modules/old.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/analytics.py ---\\\\\\\\\\\\\\\\nimport pandas as pd\\\\\\\\\\\\\\\\nimport random\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef van_westendorp_analysis(price_points, responses):\\\\\\\\\\\\\\\\n    """Performs Van Westendorp price sensitivity analysis."""\\\\\\\\\\\\\\\\n    too_expensive = []\\\\\\\\\\\\\\\\n    too_cheap = []\\\\\\\\\\\\\\\\n    just_right = []\\\\\\\\\\\\\\\\n    too_expensive_data = []\\\\\\\\\\\\\\\\n    too_cheap_data = []\\\\\\\\\\\\\\\\n    just_right_data = []\\\\\\\\\\\\\\\\n    for response in responses:\\\\\\\\\\\\\\\\n        for i, price in enumerate(price_points):\\\\\\\\\\\\\\\\n            if response == "Too expensive":\\\\\\\\\\\\\\\\n                too_expensive_data.append(price)\\\\\\\\\\\\\\\\n                too_expensive.append(i)\\\\\\\\\\\\\\\\n            elif response == "Too cheap":\\\\\\\\\\\\\\\\n                too_cheap_data.append(price)\\\\\\\\\\\\\\\\n                too_cheap.append(i)\\\\\\\\\\\\\\\\n            elif response == "Just right":\\\\\\\\\\\\\\\\n                just_right_data.append(price)\\\\\\\\\\\\\\\\n                just_right.append(i)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Calculate Optimal Price Range\\\\\\\\\\\\\\\\n    too_expensive_avg = sum(too_expensive_data) / len(too_expensive_data) if too_expensive_data else 0\\\\\\\\\\\\\\\\n    too_cheap_avg = sum(too_cheap_data) / len(too_cheap_data) if too_cheap_data else 0\\\\\\\\\\\\\\\\n    just_right_avg = sum(just_right_data) / len(just_right_data) if just_right_data else 0\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    optimal_price_range = (too_cheap_avg, too_expensive_avg)\\\\\\\\\\\\\\\\n    return optimal_price_range, too_expensive, too_cheap, just_right\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef gabor_granger_analysis(price_points, responses):\\\\\\\\\\\\\\\\n    """Performs Gabor-Granger price sensitivity analysis."""\\\\\\\\\\\\\\\\n    demand_at_price = {}\\\\\\\\\\\\\\\\n    for i, price in enumerate(price_points):\\\\\\\\\\\\\\\\n        demand_at_price[price] = responses.count(i)\\\\\\\\\\\\\\\\n    return demand_at_price\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef analyze_sentiment(responses):\\\\\\\\\\\\\\\\n    """Performs sentiment analysis on survey responses."""\\\\\\\\\\\\\\\\n    sentiments = []\\\\\\\\\\\\\\\\n    for response in responses:\\\\\\\\\\\\\\\\n        if isinstance(response, str):\\\\\\\\\\\\\\\\n            prompt = f"""Analyze the sentiment of the following text:\\\\\\\\\\\\\\\\n            "{response}"\\\\\\\\\\\\\\\\n            Provide the sentiment as "positive", "negative", or "neutral".\\\\\\\\\\\\\\\\n            """\\\\\\\\\\\\\\\\n            sentiment = llm(prompt)\\\\\\\\\\\\\\\\n            sentiments.append({"Response": response, "Sentiment": sentiment})\\\\\\\\\\\\\\\\n    return sentiments\\\\\\\\\\\\\\\\n--- End of modules/analytics.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/__init__.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of modules/__init__.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/results.py ---\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\nimport pandas as pd\\\\\\\\\\\\\\\\nimport random\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef display_survey_results(bot_data):\\\\\\\\\\\\\\\\n    """Displays the survey results in a structured format."""\\\\\\\\\\\\\\\\n    df = pd.DataFrame(bot_data)\\\\\\\\\\\\\\\\n    response_tally = df[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'response\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'].value_counts()\\\\\\\\\\\\\\\\n    st.write("### Survey Results")\\\\\\\\\\\\\\\\n    st.bar_chart(response_tally)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Key Insights\\\\\\\\\\\\\\\\n    st.write("### Key Insights")\\\\\\\\\\\\\\\\n    most_popular = response_tally.idxmax()\\\\\\\\\\\\\\\\n    st.write(f"**Most popular option**: {most_popular} ({options[f\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'option_{most_popular.lower()}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']})")\\\\\\\\\\\\\\\\n    st.write(f"**Average score for \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{followups[0]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'**: {df[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'followups\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'].apply(lambda x: x[0]).mean():.2f}/10")\\\\\\\\\\\\\\\\n    st.write(f"**Most common response to \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{followups[1]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'**: {df[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'followups\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'].apply(lambda x: x[1]).mode()[0]}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Sample Personas\\\\\\\\\\\\\\\\n    st.write("### Sample Personas")\\\\\\\\\\\\\\\\n    for i, (bot, data) in enumerate(random.sample(list(bot_data.items()), 5)):\\\\\\\\\\\\\\\\n        with st.expander(f"Persona {i+1}"):\\\\\\\\\\\\\\\\n            st.write(data[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'persona\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'])\\\\\\\\\\\\\\\\n            st.write(f"Response: {data[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'response\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']}")\\\\\\\\\\\\\\\\n--- End of modules/results.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/personas.py ---\\\\\\\\\\\\\\\\nimport os\\\\\\\\\\\\\\\\nimport random\\\\\\\\\\\\\\\\nfrom langchain_community.llms import OpenAI\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# --- OpenAI API ---\\\\\\\\\\\\\\\\nllm = OpenAI(temperature=0.7)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef generate_persona(income_range, interests):\\\\\\\\\\\\\\\\n    """Generates a persona based on income and a list of interests."""\\\\\\\\\\\\\\\\n    prompt = f"""Create a persona with the following elements:\\\\\\\\\\\\\\\\n    1. Identity: Name, occupation, background\\\\\\\\\\\\\\\\n    2. Characteristics: Personality traits, communication style, beliefs, values\\\\\\\\\\\\\\\\n    3. Knowledge and expertise: Specific areas of knowledge or expertise\\\\\\\\\\\\\\\\n    4. Experiences: Relevant past experiences, achievements, or challenges\\\\\\\\\\\\\\\\n    5. Motivations: Goals, desires, or driving forces\\\\\\\\\\\\\\\\n    6. Emotional and relational aspects: Emotional state, level of empathy, approach to relationships\\\\\\\\\\\\\\\\n    7. Context: Specific setting or situation\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    The persona should have an income between ${income_range[0]}k and ${income_range[1]}k. \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    {random.choice([\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'They like \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'They might like \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'They dont really care for \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'])} {random.sample(interests, random.randint(0, len(interests)))}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    Provide the information in a structured format.\\\\\\\\\\\\\\\\n    """\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    response = llm(prompt)\\\\\\\\\\\\\\\\n    return response.strip()\\\\\\\\\\\\\\\\n--- End of modules/personas.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/questions.py ---\\\\\\\\\\\\\\\\nimport os\\\\\\\\\\\\\\\\nimport streamlit as st\\\\\\\\\\\\\\\\nfrom pymongo import MongoClient\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# --- MongoDB Connection ---\\\\\\\\\\\\\\\\nclient = MongoClient(os.environ["MONGODB_URI"])\\\\\\\\\\\\\\\\ndb = client.get_database("Omnivia")\\\\\\\\\\\\\\\\nresponses_collection = db.get_collection("responses")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef create_survey_question():\\\\\\\\\\\\\\\\n    """Creates a survey question section with question type selection and conditional logic."""\\\\\\\\\\\\\\\\n    st.subheader("Create Survey Question")\\\\\\\\\\\\\\\\n    question_type = st.selectbox("Select Question Type", ["Multiple Choice", "Text", "Rating Scale", "Dropdown"])\\\\\\\\\\\\\\\\n    question_text = st.text_input("Enter Question Text:")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    options = []\\\\\\\\\\\\\\\\n    if question_type in ["Multiple Choice", "Dropdown"]:\\\\\\\\\\\\\\\\n        num_options = st.number_input("Number of Options", min_value=2, max_value=10, value=4)\\\\\\\\\\\\\\\\n        for i in range(int(num_options)):\\\\\\\\\\\\\\\\n            options.append(st.text_input(f"Option {i+1}:"))\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Conditional Logic (Dynamically Show/Hide Questions)\\\\\\\\\\\\\\\\n    condition_enabled = st.checkbox("Enable Conditional Logic")\\\\\\\\\\\\\\\\n    if condition_enabled:\\\\\\\\\\\\\\\\n        target_question = st.selectbox("Target Question", options, index=0)\\\\\\\\\\\\\\\\n        condition_value = st.text_input("Condition Value (e.g., Option A)")\\\\\\\\\\\\\\\\n        st.write(f"**Conditional Logic:**  If the answer to the previous question is \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{condition_value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', then the following question will be shown:")\\\\\\\\\\\\\\\\n        # ... (Implement logic to show/hide questions dynamically) ...\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    # Store the created question in the database\\\\\\\\\\\\\\\\n    if st.button("Add Question"):\\\\\\\\\\\\\\\\n        question_data = {\\\\\\\\\\\\\\\\n            "type": question_type,\\\\\\\\\\\\\\\\n            "text": question_text,\\\\\\\\\\\\\\\\n            "options": options if options else None,\\\\\\\\\\\\\\\\n            "condition": {\\\\\\\\\\\\\\\\n                "enabled": condition_enabled,\\\\\\\\\\\\\\\\n                "target_question": target_question if condition_enabled else None,\\\\\\\\\\\\\\\\n                "value": condition_value if condition_enabled else None\\\\\\\\\\\\\\\\n            }\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n        responses_collection.insert_one(question_data)  # Insert the question to the MongoDB collection\\\\\\\\\\\\\\\\n        st.success("Question added successfully.")\\\\\\\\\\\\\\\\n--- End of modules/questions.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- Start of modules/utils.py ---\\\\\\\\\\\\\\\\nimport random\\\\\\\\\\\\\\\\nimport pandas as pd\\\\\\\\\\\\\\\\nimport logging\\\\\\\\\\\\\\\\nimport autogen\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n# Setup logging\\\\\\\\\\\\\\\\nlogging.basicConfig(level=logging.INFO, format=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'%(asctime)s %(levelname)s:%(message)s\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\nlogger = logging.getLogger(__name__)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nfile_handler = logging.FileHandler(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'app_debug.log\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\nfile_handler.setLevel(logging.DEBUG)\\\\\\\\\\\\\\\\nfile_handler.setFormatter(logging.Formatter(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'%(asctime)s %(levelname)s:%(message)s\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'))\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nlogger.addHandler(file_handler)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef generate_survey_data(num_bots, male_percentage, income_range, interests_list):\\\\\\\\\\\\\\\\n    try:\\\\\\\\\\\\\\\\n        data = [{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'gender\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'male\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' if random.random() < male_percentage / 100 else \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'female\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\n                 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'income\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': random.randint(income_range[0], income_range[1]) * 1000,\\\\\\\\\\\\\\\\n                 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'interests\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': random.sample(interests_list, k=min(len(interests_list), 3))}\\\\\\\\\\\\\\\\n                for _ in range(num_bots)]\\\\\\\\\\\\\\\\n        logger.info(f"Generated survey data: {data[:5]}...")  # Log a sample of generated data\\\\\\\\\\\\\\\\n        return data\\\\\\\\\\\\\\\\n    except Exception as e:\\\\\\\\\\\\\\\\n        logger.error(f"Error generating survey data: {str(e)}")\\\\\\\\\\\\\\\\n        raise\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index):\\\\\\\\\\\\\\\\n    try:\\\\\\\\\\\\\\\\n        logger.info(f"Starting simulation for feature: {feature}, tagline: {tagline}, price: {price}")\\\\\\\\\\\\\\\\n        bot_data = generate_survey_data(num_bots, male_percentage, income_range, interests_list)\\\\\\\\\\\\\\\\n        demand_score = sum(random.randint(60, 90) for _ in bot_data) / len(bot_data)\\\\\\\\\\\\\\\\n        response_data = {\\\\\\\\\\\\\\\\n            "Feature": feature,\\\\\\\\\\\\\\\\n            "Tagline": tagline,\\\\\\\\\\\\\\\\n            "Price": float(price),\\\\\\\\\\\\\\\\n            "Demand Score": demand_score\\\\\\\\\\\\\\\\n        }\\\\\\\\\\\\\\\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation.log"})\\\\\\\\\\\\\\\\n        autogen.runtime_logging.log_event(name="demand_simulation", event=response_data, source="demand_meter")\\\\\\\\\\\\\\\\n        autogen.runtime_logging.stop()\\\\\\\\\\\\\\\\n        progress.progress((current_index + 1) / total_combinations)\\\\\\\\\\\\\\\\n        logger.info(f"Simulation successful for feature: {feature}, tagline: {tagline}, price: {price}")\\\\\\\\\\\\\\\\n        return response_data\\\\\\\\\\\\\\\\n    except Exception as e:\\\\\\\\\\\\\\\\n        error_data = {"Feature": feature, "Tagline": tagline, "Price": price, "Error": str(e)}\\\\\\\\\\\\\\\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation_errors.log"})\\\\\\\\\\\\\\\\n        autogen.runtime_logging.log_event(name="demand_simulation_error", event=error_data, source="demand_meter")\\\\\\\\\\\\\\\\n        autogen.runtime_logging.stop()\\\\\\\\\\\\\\\\n        logger.error(f"Error in simulate_demand for feature: {feature}, tagline: {tagline}, price: {price} - {str(e)}")\\\\\\\\\\\\\\\\n        return None\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress):\\\\\\\\\\\\\\\\n    results = []\\\\\\\\\\\\\\\\n    total_combinations = len(combinations)\\\\\\\\\\\\\\\\n    for current_index, (feature, tagline, price) in enumerate(combinations):\\\\\\\\\\\\\\\\n        result = simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index)\\\\\\\\\\\\\\\\n        if result:\\\\\\\\\\\\\\\\n            results.append(result)\\\\\\\\\\\\\\\\n        progress.progress((current_index + 1) / total_combinations)\\\\\\\\\\\\\\\\n    if not results:\\\\\\\\\\\\\\\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "process_simulation_errors.log"})\\\\\\\\\\\\\\\\n        autogen.runtime_logging.log_event(name="process_simulation_error", event={"Error": "No valid results returned"}, source="demand_meter")\\\\\\\\\\\\\\\\n        autogen.runtime_logging.stop()\\\\\\\\\\\\\\\\n        logger.warning("No valid results returned in process_simulation.")\\\\\\\\\\\\\\\\n    return pd.DataFrame(results)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef update_progress(progress, value):\\\\\\\\\\\\\\\\n    blocks = int(value / 5)\\\\\\\\\\\\\\\\n    blocks_html = "".join(["<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'progress-block\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'></div>" for _ in range(blocks)])\\\\\\\\\\\\\\\\n    progress.markdown(f"""\\\\\\\\\\\\\\\\n        <div class="progress-container">\\\\\\\\\\\\\\\\n            <div class="progress-bar" style="width:{value}%;">\\\\\\\\\\\\\\\\n                <div class="progress-blocks">{blocks_html}</div>\\\\\\\\\\\\\\\\n            </div>\\\\\\\\\\\\\\\\n        </div>\\\\\\\\\\\\\\\\n        <div class="progress-text">{value}%</div>\\\\\\\\\\\\\\\\n    """, unsafe_allow_html=True)\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef generate_insights(assistant, user_proxy, df_dict):\\\\\\\\\\\\\\\\n    insights_prompt = f"Analyze the demand scores for the following combinations and provide insights:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n{df_dict}"\\\\\\\\\\\\\\\\n    user_proxy.initiate_chat(assistant, message=insights_prompt)\\\\\\\\\\\\\\\\n    return assistant.last_message()["content"]\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef log_feedback(product_name, feedback):\\\\\\\\\\\\\\\\n    feedback_data = {"Product Name": product_name, "Feedback": feedback}\\\\\\\\\\\\\\\\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "user_feedback.log"})\\\\\\\\\\\\\\\\n    autogen.runtime_logging.log_event(name="user_feedback", event=feedback_data, source="demand_meter")\\\\\\\\\\\\\\\\n    autogen.runtime_logging.stop()\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef log_error(section, error_message):\\\\\\\\\\\\\\\\n    error_data = {"Section": section, "Error": error_message}\\\\\\\\\\\\\\\\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "app_errors.log"})\\\\\\\\\\\\\\\\n    autogen.runtime_logging.log_event(name="app_error", event=error_data, source="omnivia_survey_platform")\\\\\\\\\\\\\\\\n    autogen.runtime_logging.stop()\\\\\\\\\\\\\\\\n    logger.error(f"Error in {section}: {error_message}")\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n--- End of modules/utils.py ---\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\'}\\\\\\\', \\\\\\\'repo_document\\\\\\\': \\\\\\\'Repository Summary:\\\\\\\\n\\\\\\\\nThe GitHub repository brewedindices/omniviastreamlit provides a web application using the Streamlit framework. The project includes detailed setup instructions, development guidelines, and key features, making it a robust starting point for building modern web applications.\\\\\\\\n\\\\\\\\nKey Features:\\\\\\\\n- **Streamlit**: Framework for building interactive web applications in Python.\\\\\\\\n- **Python**: Programming language used for application logic.\\\\\\\\n- **Pandas**: Data manipulation and analysis library.\\\\\\\\n- **NumPy**: Library for numerical computations.\\\\\\\\n\\\\\\\\nInstructions:\\\\\\\\n1. **Clone the Repository**: `git clone https://github.com/brewedindices/omniviastreamlit`\\\\\\\\n2. **Setup Environment**: Follow the detailed setup instructions provided in the repository to configure the necessary dependencies and environment variables.\\\\\\\\n3. **Run the Application**: Use pip to install dependencies and start the application.\\\\\\\\n\\\\\\\\n\\\\\\\\nTable of Contents:\\\\\\\\nDirectory: .\\\\\\\\n  - .gitignore\\\\\\\\n  - replit.nix\\\\\\\\n  - config.toml\\\\\\\\n  - .breakpoints\\\\\\\\n  - pyproject.toml\\\\\\\\n  - poetry.lock\\\\\\\\n  - .replit\\\\\\\\n  - app.py\\\\\\\\n  - loading_screen.css\\\\\\\\n  - example.py\\\\\\\\nDirectory: modules\\\\\\\\n  - modules/dashboard.py\\\\\\\\n  - modules/visualizations.py\\\\\\\\n  - modules/narrative.py\\\\\\\\n  - modules/live_polling.py\\\\\\\\n  - modules/price_sensitivity.py\\\\\\\\n  - modules/old.py\\\\\\\\n  - modules/analytics.py\\\\\\\\n  - modules/__init__.py\\\\\\\\n  - modules/results.py\\\\\\\\n  - modules/personas.py\\\\\\\\n  - modules/questions.py\\\\\\\\n  - modules/utils.py\\\\\\\\n\\\\\\\\n\\\\\\\\n--- Directory: . ---\\\\\\\\n--- Start of .gitignore ---\\\\\\\\n# Byte-compiled / optimized / DLL files\\\\\\\\n__pycache__/\\\\\\\\n*.py[cod]\\\\\\\\n*$py.class\\\\\\\\n\\\\\\\\n# C extensions\\\\\\\\n*.so\\\\\\\\n\\\\\\\\n# Distribution / packaging\\\\\\\\n.Python\\\\\\\\nbuild/\\\\\\\\ndevelop-eggs/\\\\\\\\ndist/\\\\\\\\ndownloads/\\\\\\\\neggs/\\\\\\\\n.eggs/\\\\\\\\nlib/\\\\\\\\nlib64/\\\\\\\\nparts/\\\\\\\\nsdist/\\\\\\\\nvar/\\\\\\\\nwheels/\\\\\\\\nshare/python-wheels/\\\\\\\\n*.egg-info/\\\\\\\\n.installed.cfg\\\\\\\\n*.egg\\\\\\\\nMANIFEST\\\\\\\\n\\\\\\\\n# PyInstaller\\\\\\\\n#  Usually these files are written by a python script from a template\\\\\\\\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\\\\\\\\n*.manifest\\\\\\\\n*.spec\\\\\\\\n\\\\\\\\n# Installer logs\\\\\\\\npip-log.txt\\\\\\\\npip-delete-this-directory.txt\\\\\\\\n\\\\\\\\n# Unit test / coverage reports\\\\\\\\nhtmlcov/\\\\\\\\n.tox/\\\\\\\\n.nox/\\\\\\\\n.coverage\\\\\\\\n.coverage.*\\\\\\\\n.cache\\\\\\\\nnosetests.xml\\\\\\\\ncoverage.xml\\\\\\\\n*.cover\\\\\\\\n*.py,cover\\\\\\\\n.hypothesis/\\\\\\\\n.pytest_cache/\\\\\\\\ncover/\\\\\\\\n\\\\\\\\n# Translations\\\\\\\\n*.mo\\\\\\\\n*.pot\\\\\\\\n\\\\\\\\n# Django stuff:\\\\\\\\n*.log\\\\\\\\nlocal_settings.py\\\\\\\\ndb.sqlite3\\\\\\\\ndb.sqlite3-journal\\\\\\\\n\\\\\\\\n# Flask stuff:\\\\\\\\ninstance/\\\\\\\\n.webassets-cache\\\\\\\\n\\\\\\\\n# Scrapy stuff:\\\\\\\\n.scrapy\\\\\\\\n\\\\\\\\n# Sphinx documentation\\\\\\\\ndocs/_build/\\\\\\\\n\\\\\\\\n# PyBuilder\\\\\\\\n.pybuilder/\\\\\\\\ntarget/\\\\\\\\n\\\\\\\\n# Jupyter Notebook\\\\\\\\n.ipynb_checkpoints\\\\\\\\n\\\\\\\\n# IPython\\\\\\\\nprofile_default/\\\\\\\\nipython_config.py\\\\\\\\n\\\\\\\\n# pyenv\\\\\\\\n#   For a library or package, you might want to ignore these files since the code is\\\\\\\\n#   intended to run in multiple environments; otherwise, check them in:\\\\\\\\n# .python-version\\\\\\\\n\\\\\\\\n# pipenv\\\\\\\\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\\\\\\\\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\\\\\\\\n#   having no cross-platform support, pipenv may install dependencies that don\\\\\\\\\\\\\\\'t work, or not\\\\\\\\n#   install all needed dependencies.\\\\\\\\n#Pipfile.lock\\\\\\\\n\\\\\\\\n# poetry\\\\\\\\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\\\\\\\\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\\\\\\\\n#   commonly ignored for libraries.\\\\\\\\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\\\\\\\\n#poetry.lock\\\\\\\\n\\\\\\\\n# pdm\\\\\\\\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\\\\\\\\n#pdm.lock\\\\\\\\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\\\\\\\\n#   in version control.\\\\\\\\n#   https://pdm.fming.dev/#use-with-ide\\\\\\\\n.pdm.toml\\\\\\\\n\\\\\\\\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\\\\\\\\n__pypackages__/\\\\\\\\n\\\\\\\\n# Celery stuff\\\\\\\\ncelerybeat-schedule\\\\\\\\ncelerybeat.pid\\\\\\\\n\\\\\\\\n# SageMath parsed files\\\\\\\\n*.sage.py\\\\\\\\n\\\\\\\\n# Environments\\\\\\\\n.env\\\\\\\\n.venv\\\\\\\\nenv/\\\\\\\\nvenv/\\\\\\\\nENV/\\\\\\\\nenv.bak/\\\\\\\\nvenv.bak/\\\\\\\\n\\\\\\\\n# Spyder project settings\\\\\\\\n.spyderproject\\\\\\\\n.spyproject\\\\\\\\n\\\\\\\\n# Rope project settings\\\\\\\\n.ropeproject\\\\\\\\n\\\\\\\\n# mkdocs documentation\\\\\\\\n/site\\\\\\\\n\\\\\\\\n# mypy\\\\\\\\n.mypy_cache/\\\\\\\\n.dmypy.json\\\\\\\\ndmypy.json\\\\\\\\n\\\\\\\\n# Pyre type checker\\\\\\\\n.pyre/\\\\\\\\n\\\\\\\\n# pytype static type analyzer\\\\\\\\n.pytype/\\\\\\\\n\\\\\\\\n# Cython debug symbols\\\\\\\\ncython_debug/\\\\\\\\n\\\\\\\\n# PyCharm\\\\\\\\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\\\\\\\\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\\\\\\\\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\\\\\\\\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\\\\\\\\n#.idea/\\\\\\\\n--- End of .gitignore ---\\\\\\\\n\\\\\\\\n--- Start of replit.nix ---\\\\\\\\n{pkgs}: {\\\\\\\\n  deps = [\\\\\\\\n    pkgs.glibcLocales\\\\\\\\n  ];\\\\\\\\n}\\\\\\\\n\\\\\\\\n--- End of replit.nix ---\\\\\\\\n\\\\\\\\n--- Start of config.toml ---\\\\\\\\n[theme]\\\\\\\\nbase="dark"\\\\\\\\nprimaryColor="#FFC300"\\\\\\\\nbackgroundColor="#1E1E1E"\\\\\\\\nsecondaryBackgroundColor="#333333"\\\\\\\\ntextColor="#D4D4D4"\\\\\\\\nfont="sans serif"\\\\\\\\n\\\\\\\\n--- End of config.toml ---\\\\\\\\n\\\\\\\\n--- Start of .breakpoints ---\\\\\\\\n{\\\\\\\\n  "files": {}\\\\\\\\n}\\\\\\\\n--- End of .breakpoints ---\\\\\\\\n\\\\\\\\n--- Start of pyproject.toml ---\\\\\\\\n[tool.poetry]\\\\\\\\nname = "python-template"\\\\\\\\nversion = "0.1.0"\\\\\\\\ndescription = ""\\\\\\\\nauthors = ["Your Name <you@example.com>"]\\\\\\\\n\\\\\\\\n[tool.poetry.dependencies]\\\\\\\\npython = ">=3.10.0,<3.11"\\\\\\\\nstreamlit = "^1.27.2"\\\\\\\\nmodules = "^1.0.0"\\\\\\\\nrequests = "^2.32.3"\\\\\\\\nstreamlit-option-menu = "^0.3.13"\\\\\\\\npymongo = "^4.7.3"\\\\\\\\nnumpy = "^2.0.0"\\\\\\\\npandas = "^2.2.2"\\\\\\\\nplotly = "^5.22.0"\\\\\\\\n\\\\\\\\n[tool.pyright]\\\\\\\\n# https://github.com/microsoft/pyright/blob/main/docs/configuration.md\\\\\\\\nuseLibraryCodeForTypes = true\\\\\\\\nexclude = [".cache"]\\\\\\\\n\\\\\\\\n[tool.ruff]\\\\\\\\n# https://beta.ruff.rs/docs/configuration/\\\\\\\\nselect = [\\\\\\\\\\\\\\\'E\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'W\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'F\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'I\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'B\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'C4\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'ARG\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'SIM\\\\\\\\\\\\\\\']\\\\\\\\nignore = [\\\\\\\\\\\\\\\'W291\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'W292\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'W293\\\\\\\\\\\\\\\']\\\\\\\\n\\\\\\\\n[build-system]\\\\\\\\nrequires = ["poetry-core>=1.0.0"]\\\\\\\\nbuild-backend = "poetry.core.masonry.api"\\\\\\\\n--- End of pyproject.toml ---\\\\\\\\n\\\\\\\\n--- Start of poetry.lock ---\\\\\\\\n# This file is automatically @generated by Poetry 1.5.4 and should not be changed by hand.\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "altair"\\\\\\\\nversion = "5.1.2"\\\\\\\\ndescription = "Vega-Altair: A declarative statistical visualization library for Python."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "altair-5.1.2-py3-none-any.whl", hash = "sha256:7219708ec33c152e53145485040f428954ed15fd09b2a2d89e543e6d111dae7f"},\\\\\\\\n    {file = "altair-5.1.2.tar.gz", hash = "sha256:e5f52a71853a607c61ce93ad4a414b3d486cd0d46ac597a24ae8bd1ac99dd460"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\njinja2 = "*"\\\\\\\\njsonschema = ">=3.0"\\\\\\\\nnumpy = "*"\\\\\\\\npackaging = "*"\\\\\\\\npandas = ">=0.25"\\\\\\\\ntoolz = "*"\\\\\\\\ntyping-extensions = {version = ">=4.0.1", markers = "python_version < \\\\\\\\\\\\\\\\"3.11\\\\\\\\\\\\\\\\""}\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\ndev = ["anywidget", "black (<24)", "hatch", "ipython", "m2r", "mypy", "pandas-stubs", "pyarrow (>=11)", "pytest", "pytest-cov", "ruff", "types-jsonschema", "types-setuptools", "vega-datasets", "vegafusion[embed] (>=1.4.0)", "vl-convert-python (>=0.14.0)"]\\\\\\\\ndoc = ["docutils", "geopandas", "jinja2", "myst-parser", "numpydoc", "pillow (>=9,<10)", "pydata-sphinx-theme", "scipy", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinxext-altair"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "attrs"\\\\\\\\nversion = "23.1.0"\\\\\\\\ndescription = "Classes Without Boilerplate"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "attrs-23.1.0-py3-none-any.whl", hash = "sha256:1f28b4522cdc2fb4256ac1a020c78acf9cba2c6b461ccd2c126f3aa8e8335d04"},\\\\\\\\n    {file = "attrs-23.1.0.tar.gz", hash = "sha256:6279836d581513a26f1bf235f9acd333bc9115683f14f7e8fae46c98fc50e015"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\ncov = ["attrs[tests]", "coverage[toml] (>=5.3)"]\\\\\\\\ndev = ["attrs[docs,tests]", "pre-commit"]\\\\\\\\ndocs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]\\\\\\\\ntests = ["attrs[tests-no-zope]", "zope-interface"]\\\\\\\\ntests-no-zope = ["cloudpickle", "hypothesis", "mypy (>=1.1.1)", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins", "pytest-xdist[psutil]"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "blinker"\\\\\\\\nversion = "1.6.3"\\\\\\\\ndescription = "Fast, simple object-to-object and broadcast signaling"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "blinker-1.6.3-py3-none-any.whl", hash = "sha256:296320d6c28b006eb5e32d4712202dbcdcbf5dc482da298c2f44881c43884aaa"},\\\\\\\\n    {file = "blinker-1.6.3.tar.gz", hash = "sha256:152090d27c1c5c722ee7e48504b02d76502811ce02e1523553b4cf8c8b3d3a8d"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "cachetools"\\\\\\\\nversion = "5.3.1"\\\\\\\\ndescription = "Extensible memoizing collections and decorators"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "cachetools-5.3.1-py3-none-any.whl", hash = "sha256:95ef631eeaea14ba2e36f06437f36463aac3a096799e876ee55e5cdccb102590"},\\\\\\\\n    {file = "cachetools-5.3.1.tar.gz", hash = "sha256:dce83f2d9b4e1f732a8cd44af8e8fab2dbe46201467fc98b3ef8f269092bf62b"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "certifi"\\\\\\\\nversion = "2023.7.22"\\\\\\\\ndescription = "Python package for providing Mozilla\\\\\\\\\\\\\\\'s CA Bundle."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.6"\\\\\\\\nfiles = [\\\\\\\\n    {file = "certifi-2023.7.22-py3-none-any.whl", hash = "sha256:92d6037539857d8206b8f6ae472e8b77db8058fec5937a1ef3f54304089edbb9"},\\\\\\\\n    {file = "certifi-2023.7.22.tar.gz", hash = "sha256:539cc1d13202e33ca466e88b2807e29f4c13049d6d87031a3c110744495cb082"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "charset-normalizer"\\\\\\\\nversion = "3.3.0"\\\\\\\\ndescription = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7.0"\\\\\\\\nfiles = [\\\\\\\\n    {file = "charset-normalizer-3.3.0.tar.gz", hash = "sha256:63563193aec44bce707e0c5ca64ff69fa72ed7cf34ce6e11d5127555756fd2f6"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:effe5406c9bd748a871dbcaf3ac69167c38d72db8c9baf3ff954c344f31c4cbe"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:4162918ef3098851fcd8a628bf9b6a98d10c380725df9e04caf5ca6dd48c847a"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0570d21da019941634a531444364f2482e8db0b3425fcd5ac0c36565a64142c8"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5707a746c6083a3a74b46b3a631d78d129edab06195a92a8ece755aac25a3f3d"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:278c296c6f96fa686d74eb449ea1697f3c03dc28b75f873b65b5201806346a69"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:a4b71f4d1765639372a3b32d2638197f5cd5221b19531f9245fcc9ee62d38f56"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f5969baeaea61c97efa706b9b107dcba02784b1601c74ac84f2a532ea079403e"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a3f93dab657839dfa61025056606600a11d0b696d79386f974e459a3fbc568ec"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:db756e48f9c5c607b5e33dd36b1d5872d0422e960145b08ab0ec7fd420e9d649"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:232ac332403e37e4a03d209a3f92ed9071f7d3dbda70e2a5e9cff1c4ba9f0678"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_ppc64le.whl", hash = "sha256:e5c1502d4ace69a179305abb3f0bb6141cbe4714bc9b31d427329a95acfc8bdd"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_s390x.whl", hash = "sha256:2502dd2a736c879c0f0d3e2161e74d9907231e25d35794584b1ca5284e43f596"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23e8565ab7ff33218530bc817922fae827420f143479b753104ab801145b1d5b"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win32.whl", hash = "sha256:1872d01ac8c618a8da634e232f24793883d6e456a66593135aeafe3784b0848d"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win_amd64.whl", hash = "sha256:557b21a44ceac6c6b9773bc65aa1b4cc3e248a5ad2f5b914b91579a32e22204d"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:d7eff0f27edc5afa9e405f7165f85a6d782d308f3b6b9d96016c010597958e63"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:6a685067d05e46641d5d1623d7c7fdf15a357546cbb2f71b0ebde91b175ffc3e"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:0d3d5b7db9ed8a2b11a774db2bbea7ba1884430a205dbd54a32d61d7c2a190fa"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2935ffc78db9645cb2086c2f8f4cfd23d9b73cc0dc80334bc30aac6f03f68f8c"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:9fe359b2e3a7729010060fbca442ca225280c16e923b37db0e955ac2a2b72a05"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:380c4bde80bce25c6e4f77b19386f5ec9db230df9f2f2ac1e5ad7af2caa70459"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0d1e3732768fecb052d90d62b220af62ead5748ac51ef61e7b32c266cac9293"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1b2919306936ac6efb3aed1fbf81039f7087ddadb3160882a57ee2ff74fd2382"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:f8888e31e3a85943743f8fc15e71536bda1c81d5aa36d014a3c0c44481d7db6e"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:82eb849f085624f6a607538ee7b83a6d8126df6d2f7d3b319cb837b289123078"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_ppc64le.whl", hash = "sha256:7b8b8bf1189b3ba9b8de5c8db4d541b406611a71a955bbbd7385bbc45fcb786c"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_s390x.whl", hash = "sha256:5adf257bd58c1b8632046bbe43ee38c04e1038e9d37de9c57a94d6bd6ce5da34"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:c350354efb159b8767a6244c166f66e67506e06c8924ed74669b2c70bc8735b1"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win32.whl", hash = "sha256:02af06682e3590ab952599fbadac535ede5d60d78848e555aa58d0c0abbde786"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win_amd64.whl", hash = "sha256:86d1f65ac145e2c9ed71d8ffb1905e9bba3a91ae29ba55b4c46ae6fc31d7c0d4"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:3b447982ad46348c02cb90d230b75ac34e9886273df3a93eec0539308a6296d7"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:abf0d9f45ea5fb95051c8bfe43cb40cda383772f7e5023a83cc481ca2604d74e"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:b09719a17a2301178fac4470d54b1680b18a5048b481cb8890e1ef820cb80455"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b3d9b48ee6e3967b7901c052b670c7dda6deb812c309439adaffdec55c6d7b78"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:edfe077ab09442d4ef3c52cb1f9dab89bff02f4524afc0acf2d46be17dc479f5"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3debd1150027933210c2fc321527c2299118aa929c2f5a0a80ab6953e3bd1908"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:86f63face3a527284f7bb8a9d4f78988e3c06823f7bea2bd6f0e0e9298ca0403"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:24817cb02cbef7cd499f7c9a2735286b4782bd47a5b3516a0e84c50eab44b98e"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:c71f16da1ed8949774ef79f4a0260d28b83b3a50c6576f8f4f0288d109777989"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:9cf3126b85822c4e53aa28c7ec9869b924d6fcfb76e77a45c44b83d91afd74f9"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_ppc64le.whl", hash = "sha256:b3b2316b25644b23b54a6f6401074cebcecd1244c0b8e80111c9a3f1c8e83d65"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_s390x.whl", hash = "sha256:03680bb39035fbcffe828eae9c3f8afc0428c91d38e7d61aa992ef7a59fb120e"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:4cc152c5dd831641e995764f9f0b6589519f6f5123258ccaca8c6d34572fefa8"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win32.whl", hash = "sha256:b8f3307af845803fb0b060ab76cf6dd3a13adc15b6b451f54281d25911eb92df"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win_amd64.whl", hash = "sha256:8eaf82f0eccd1505cf39a45a6bd0a8cf1c70dcfc30dba338207a969d91b965c0"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:dc45229747b67ffc441b3de2f3ae5e62877a282ea828a5bdb67883c4ee4a8810"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2f4a0033ce9a76e391542c182f0d48d084855b5fcba5010f707c8e8c34663d77"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ada214c6fa40f8d800e575de6b91a40d0548139e5dc457d2ebb61470abf50186"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b1121de0e9d6e6ca08289583d7491e7fcb18a439305b34a30b20d8215922d43c"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1063da2c85b95f2d1a430f1c33b55c9c17ffaf5e612e10aeaad641c55a9e2b9d"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:70f1d09c0d7748b73290b29219e854b3207aea922f839437870d8cc2168e31cc"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:250c9eb0f4600361dd80d46112213dff2286231d92d3e52af1e5a6083d10cad9"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:750b446b2ffce1739e8578576092179160f6d26bd5e23eb1789c4d64d5af7dc7"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_ppc64le.whl", hash = "sha256:fc52b79d83a3fe3a360902d3f5d79073a993597d48114c29485e9431092905d8"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_s390x.whl", hash = "sha256:588245972aca710b5b68802c8cad9edaa98589b1b42ad2b53accd6910dad3545"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:e39c7eb31e3f5b1f88caff88bcff1b7f8334975b46f6ac6e9fc725d829bc35d4"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win32.whl", hash = "sha256:abecce40dfebbfa6abf8e324e1860092eeca6f7375c8c4e655a8afb61af58f2c"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win_amd64.whl", hash = "sha256:24a91a981f185721542a0b7c92e9054b7ab4fea0508a795846bc5b0abf8118d4"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:67b8cc9574bb518ec76dc8e705d4c39ae78bb96237cb533edac149352c1f39fe"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:ac71b2977fb90c35d41c9453116e283fac47bb9096ad917b8819ca8b943abecd"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:3ae38d325b512f63f8da31f826e6cb6c367336f95e418137286ba362925c877e"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:542da1178c1c6af8873e143910e2269add130a299c9106eef2594e15dae5e482"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:30a85aed0b864ac88309b7d94be09f6046c834ef60762a8833b660139cfbad13"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aae32c93e0f64469f74ccc730a7cb21c7610af3a775157e50bbd38f816536b38"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:15b26ddf78d57f1d143bdf32e820fd8935d36abe8a25eb9ec0b5a71c82eb3895"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7f5d10bae5d78e4551b7be7a9b29643a95aded9d0f602aa2ba584f0388e7a557"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:249c6470a2b60935bafd1d1d13cd613f8cd8388d53461c67397ee6a0f5dce741"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:c5a74c359b2d47d26cdbbc7845e9662d6b08a1e915eb015d044729e92e7050b7"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_ppc64le.whl", hash = "sha256:b5bcf60a228acae568e9911f410f9d9e0d43197d030ae5799e20dca8df588287"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_s390x.whl", hash = "sha256:187d18082694a29005ba2944c882344b6748d5be69e3a89bf3cc9d878e548d5a"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:81bf654678e575403736b85ba3a7867e31c2c30a69bc57fe88e3ace52fb17b89"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win32.whl", hash = "sha256:85a32721ddde63c9df9ebb0d2045b9691d9750cb139c161c80e500d210f5e26e"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win_amd64.whl", hash = "sha256:468d2a840567b13a590e67dd276c570f8de00ed767ecc611994c301d0f8c014f"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:e0fc42822278451bc13a2e8626cf2218ba570f27856b536e00cfa53099724828"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:09c77f964f351a7369cc343911e0df63e762e42bac24cd7d18525961c81754f4"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:12ebea541c44fdc88ccb794a13fe861cc5e35d64ed689513a5c03d05b53b7c82"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:805dfea4ca10411a5296bcc75638017215a93ffb584c9e344731eef0dcfb026a"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:96c2b49eb6a72c0e4991d62406e365d87067ca14c1a729a870d22354e6f68115"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aaf7b34c5bc56b38c931a54f7952f1ff0ae77a2e82496583b247f7c969eb1479"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:619d1c96099be5823db34fe89e2582b336b5b074a7f47f819d6b3a57ff7bdb86"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a0ac5e7015a5920cfce654c06618ec40c33e12801711da6b4258af59a8eff00a"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:93aa7eef6ee71c629b51ef873991d6911b906d7312c6e8e99790c0f33c576f89"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7966951325782121e67c81299a031f4c115615e68046f79b85856b86ebffc4cd"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_ppc64le.whl", hash = "sha256:02673e456dc5ab13659f85196c534dc596d4ef260e4d86e856c3b2773ce09843"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_s390x.whl", hash = "sha256:c2af80fb58f0f24b3f3adcb9148e6203fa67dd3f61c4af146ecad033024dde43"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:153e7b6e724761741e0974fc4dcd406d35ba70b92bfe3fedcb497226c93b9da7"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win32.whl", hash = "sha256:d47ecf253780c90ee181d4d871cd655a789da937454045b17b5798da9393901a"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win_amd64.whl", hash = "sha256:d97d85fa63f315a8bdaba2af9a6a686e0eceab77b3089af45133252618e70884"},\\\\\\\\n    {file = "charset_normalizer-3.3.0-py3-none-any.whl", hash = "sha256:e46cd37076971c1040fc8c41273a8b3e2c624ce4f2be3f5dfcb7a430c1d3acc2"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "click"\\\\\\\\nversion = "8.1.7"\\\\\\\\ndescription = "Composable command line interface toolkit"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "click-8.1.7-py3-none-any.whl", hash = "sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28"},\\\\\\\\n    {file = "click-8.1.7.tar.gz", hash = "sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\ncolorama = {version = "*", markers = "platform_system == \\\\\\\\\\\\\\\\"Windows\\\\\\\\\\\\\\\\""}\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "colorama"\\\\\\\\nversion = "0.4.6"\\\\\\\\ndescription = "Cross-platform colored terminal text."\\\\\\\\noptional = false\\\\\\\\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},\\\\\\\\n    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "dnspython"\\\\\\\\nversion = "2.6.1"\\\\\\\\ndescription = "DNS toolkit"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "dnspython-2.6.1-py3-none-any.whl", hash = "sha256:5ef3b9680161f6fa89daf8ad451b5f1a33b18ae8a1c6778cdf4b43f08c0a6e50"},\\\\\\\\n    {file = "dnspython-2.6.1.tar.gz", hash = "sha256:e8f0f9c23a7b7cb99ded64e6c3a6f3e701d78f50c55e002b839dea7225cff7cc"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\ndev = ["black (>=23.1.0)", "coverage (>=7.0)", "flake8 (>=7)", "mypy (>=1.8)", "pylint (>=3)", "pytest (>=7.4)", "pytest-cov (>=4.1.0)", "sphinx (>=7.2.0)", "twine (>=4.0.0)", "wheel (>=0.42.0)"]\\\\\\\\ndnssec = ["cryptography (>=41)"]\\\\\\\\ndoh = ["h2 (>=4.1.0)", "httpcore (>=1.0.0)", "httpx (>=0.26.0)"]\\\\\\\\ndoq = ["aioquic (>=0.9.25)"]\\\\\\\\nidna = ["idna (>=3.6)"]\\\\\\\\ntrio = ["trio (>=0.23)"]\\\\\\\\nwmi = ["wmi (>=1.5.1)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "gitdb"\\\\\\\\nversion = "4.0.10"\\\\\\\\ndescription = "Git Object Database"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "gitdb-4.0.10-py3-none-any.whl", hash = "sha256:c286cf298426064079ed96a9e4a9d39e7f3e9bf15ba60701e95f5492f28415c7"},\\\\\\\\n    {file = "gitdb-4.0.10.tar.gz", hash = "sha256:6eb990b69df4e15bad899ea868dc46572c3f75339735663b81de79b06f17eb9a"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nsmmap = ">=3.0.1,<6"\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "gitpython"\\\\\\\\nversion = "3.1.37"\\\\\\\\ndescription = "GitPython is a Python library used to interact with Git repositories"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "GitPython-3.1.37-py3-none-any.whl", hash = "sha256:5f4c4187de49616d710a77e98ddf17b4782060a1788df441846bddefbb89ab33"},\\\\\\\\n    {file = "GitPython-3.1.37.tar.gz", hash = "sha256:f9b9ddc0761c125d5780eab2d64be4873fc6817c2899cbcb34b02344bdc7bc54"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\ngitdb = ">=4.0.1,<5"\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\ntest = ["black", "coverage[toml]", "ddt (>=1.1.1,!=1.4.3)", "mypy", "pre-commit", "pytest", "pytest-cov", "pytest-sugar"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "idna"\\\\\\\\nversion = "3.4"\\\\\\\\ndescription = "Internationalized Domain Names in Applications (IDNA)"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.5"\\\\\\\\nfiles = [\\\\\\\\n    {file = "idna-3.4-py3-none-any.whl", hash = "sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2"},\\\\\\\\n    {file = "idna-3.4.tar.gz", hash = "sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "jinja2"\\\\\\\\nversion = "3.1.2"\\\\\\\\ndescription = "A very fast and expressive template engine."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "Jinja2-3.1.2-py3-none-any.whl", hash = "sha256:6088930bfe239f0e6710546ab9c19c9ef35e29792895fed6e6e31a023a182a61"},\\\\\\\\n    {file = "Jinja2-3.1.2.tar.gz", hash = "sha256:31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nMarkupSafe = ">=2.0"\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\ni18n = ["Babel (>=2.7)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "jsonschema"\\\\\\\\nversion = "4.19.1"\\\\\\\\ndescription = "An implementation of JSON Schema validation for Python"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "jsonschema-4.19.1-py3-none-any.whl", hash = "sha256:cd5f1f9ed9444e554b38ba003af06c0a8c2868131e56bfbef0550fb450c0330e"},\\\\\\\\n    {file = "jsonschema-4.19.1.tar.gz", hash = "sha256:ec84cc37cfa703ef7cd4928db24f9cb31428a5d0fa77747b8b51a847458e0bbf"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nattrs = ">=22.2.0"\\\\\\\\njsonschema-specifications = ">=2023.03.6"\\\\\\\\nreferencing = ">=0.28.4"\\\\\\\\nrpds-py = ">=0.7.1"\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\nformat = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]\\\\\\\\nformat-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "jsonschema-specifications"\\\\\\\\nversion = "2023.7.1"\\\\\\\\ndescription = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "jsonschema_specifications-2023.7.1-py3-none-any.whl", hash = "sha256:05adf340b659828a004220a9613be00fa3f223f2b82002e273dee62fd50524b1"},\\\\\\\\n    {file = "jsonschema_specifications-2023.7.1.tar.gz", hash = "sha256:c91a50404e88a1f6ba40636778e2ee08f6e24c5613fe4c53ac24578a5a7f72bb"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nreferencing = ">=0.28.0"\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "markdown-it-py"\\\\\\\\nversion = "3.0.0"\\\\\\\\ndescription = "Python port of markdown-it. Markdown parsing, done right!"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "markdown-it-py-3.0.0.tar.gz", hash = "sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb"},\\\\\\\\n    {file = "markdown_it_py-3.0.0-py3-none-any.whl", hash = "sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nmdurl = ">=0.1,<1.0"\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\nbenchmarking = ["psutil", "pytest", "pytest-benchmark"]\\\\\\\\ncode-style = ["pre-commit (>=3.0,<4.0)"]\\\\\\\\ncompare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]\\\\\\\\nlinkify = ["linkify-it-py (>=1,<3)"]\\\\\\\\nplugins = ["mdit-py-plugins"]\\\\\\\\nprofiling = ["gprof2dot"]\\\\\\\\nrtd = ["jupyter_sphinx", "mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx_book_theme"]\\\\\\\\ntesting = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "markupsafe"\\\\\\\\nversion = "2.1.3"\\\\\\\\ndescription = "Safely add untrusted strings to HTML/XML markup."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:cd0f502fe016460680cd20aaa5a76d241d6f35a1c3350c474bac1273803893fa"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e09031c87a1e51556fdcb46e5bd4f59dfb743061cf93c4d6831bf894f125eb57"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68e78619a61ecf91e76aa3e6e8e33fc4894a2bebe93410754bd28fce0a8a4f9f"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:65c1a9bcdadc6c28eecee2c119465aebff8f7a584dd719facdd9e825ec61ab52"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:525808b8019e36eb524b8c68acdd63a37e75714eac50e988180b169d64480a00"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:962f82a3086483f5e5f64dbad880d31038b698494799b097bc59c2edf392fce6"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:aa7bd130efab1c280bed0f45501b7c8795f9fdbeb02e965371bbef3523627779"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:c9c804664ebe8f83a211cace637506669e7890fec1b4195b505c214e50dd4eb7"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win32.whl", hash = "sha256:10bbfe99883db80bdbaff2dcf681dfc6533a614f700da1287707e8a5d78a8431"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win_amd64.whl", hash = "sha256:1577735524cdad32f9f694208aa75e422adba74f1baee7551620e43a3141f559"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:ad9e82fb8f09ade1c3e1b996a6337afac2b8b9e365f926f5a61aacc71adc5b3c"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:3c0fae6c3be832a0a0473ac912810b2877c8cb9d76ca48de1ed31e1c68386575"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b076b6226fb84157e3f7c971a47ff3a679d837cf338547532ab866c57930dbee"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:bfce63a9e7834b12b87c64d6b155fdd9b3b96191b6bd334bf37db7ff1fe457f2"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:338ae27d6b8745585f87218a3f23f1512dbf52c26c28e322dbe54bcede54ccb9"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:e4dd52d80b8c83fdce44e12478ad2e85c64ea965e75d66dbeafb0a3e77308fcc"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:df0be2b576a7abbf737b1575f048c23fb1d769f267ec4358296f31c2479db8f9"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:5bbe06f8eeafd38e5d0a4894ffec89378b6c6a625ff57e3028921f8ff59318ac"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win32.whl", hash = "sha256:dd15ff04ffd7e05ffcb7fe79f1b98041b8ea30ae9234aed2a9168b5797c3effb"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win_amd64.whl", hash = "sha256:134da1eca9ec0ae528110ccc9e48041e0828d79f24121a1a146161103c76e686"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:f698de3fd0c4e6972b92290a45bd9b1536bffe8c6759c62471efaa8acb4c37bc"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:aa57bd9cf8ae831a362185ee444e15a93ecb2e344c8e52e4d721ea3ab6ef1823"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:ffcc3f7c66b5f5b7931a5aa68fc9cecc51e685ef90282f4a82f0f5e9b704ad11"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47d4f1c5f80fc62fdd7777d0d40a2e9dda0a05883ab11374334f6c4de38adffd"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1f67c7038d560d92149c060157d623c542173016c4babc0c1913cca0564b9939"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:9aad3c1755095ce347e26488214ef77e0485a3c34a50c5a5e2471dff60b9dd9c"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:14ff806850827afd6b07a5f32bd917fb7f45b046ba40c57abdb636674a8b559c"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8f9293864fe09b8149f0cc42ce56e3f0e54de883a9de90cd427f191c346eb2e1"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win32.whl", hash = "sha256:715d3562f79d540f251b99ebd6d8baa547118974341db04f5ad06d5ea3eb8007"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win_amd64.whl", hash = "sha256:1b8dd8c3fd14349433c79fa8abeb573a55fc0fdd769133baac1f5e07abf54aeb"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:8e254ae696c88d98da6555f5ace2279cf7cd5b3f52be2b5cf97feafe883b58d2"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cb0932dc158471523c9637e807d9bfb93e06a95cbf010f1a38b98623b929ef2b"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9402b03f1a1b4dc4c19845e5c749e3ab82d5078d16a2a4c2cd2df62d57bb0707"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:ca379055a47383d02a5400cb0d110cef0a776fc644cda797db0c5696cfd7e18e"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:b7ff0f54cb4ff66dd38bebd335a38e2c22c41a8ee45aa608efc890ac3e3931bc"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:c011a4149cfbcf9f03994ec2edffcb8b1dc2d2aede7ca243746df97a5d41ce48"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:56d9f2ecac662ca1611d183feb03a3fa4406469dafe241673d521dd5ae92a155"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win32.whl", hash = "sha256:8758846a7e80910096950b67071243da3e5a20ed2546e6392603c096778d48e0"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win_amd64.whl", hash = "sha256:787003c0ddb00500e49a10f2844fac87aa6ce977b90b0feaaf9de23c22508b24"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:2ef12179d3a291be237280175b542c07a36e7f60718296278d8593d21ca937d4"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:2c1b19b3aaacc6e57b7e25710ff571c24d6c3613a45e905b1fde04d691b98ee0"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8afafd99945ead6e075b973fefa56379c5b5c53fd8937dad92c662da5d8fd5ee"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8c41976a29d078bb235fea9b2ecd3da465df42a562910f9022f1a03107bd02be"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d080e0a5eb2529460b30190fcfcc4199bd7f827663f858a226a81bc27beaa97e"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:69c0f17e9f5a7afdf2cc9fb2d1ce6aabdb3bafb7f38017c0b77862bcec2bbad8"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:504b320cd4b7eff6f968eddf81127112db685e81f7e36e75f9f84f0df46041c3"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:42de32b22b6b804f42c5d98be4f7e5e977ecdd9ee9b660fda1a3edf03b11792d"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win32.whl", hash = "sha256:ceb01949af7121f9fc39f7d27f91be8546f3fb112c608bc4029aef0bab86a2a5"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win_amd64.whl", hash = "sha256:1b40069d487e7edb2676d3fbdb2b0829ffa2cd63a2ec26c4938b2d34391b4ecc"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:8023faf4e01efadfa183e863fefde0046de576c6f14659e8782065bcece22198"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6b2b56950d93e41f33b4223ead100ea0fe11f8e6ee5f641eb753ce4b77a7042b"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9dcdfd0eaf283af041973bff14a2e143b8bd64e069f4c383416ecd79a81aab58"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:05fb21170423db021895e1ea1e1f3ab3adb85d1c2333cbc2310f2a26bc77272e"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:282c2cb35b5b673bbcadb33a585408104df04f14b2d9b01d4c345a3b92861c2c"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:ab4a0df41e7c16a1392727727e7998a467472d0ad65f3ad5e6e765015df08636"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7ef3cb2ebbf91e330e3bb937efada0edd9003683db6b57bb108c4001f37a02ea"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:0a4e4a1aff6c7ac4cd55792abf96c915634c2b97e3cc1c7129578aa68ebd754e"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win32.whl", hash = "sha256:fec21693218efe39aa7f8599346e90c705afa52c5b31ae019b2e57e8f6542bb2"},\\\\\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win_amd64.whl", hash = "sha256:3fd4abcb888d15a94f32b75d8fd18ee162ca0c064f35b11134be77050296d6ba"},\\\\\\\\n    {file = "MarkupSafe-2.1.3.tar.gz", hash = "sha256:af598ed32d6ae86f1b747b82783958b1a4ab8f617b06fe68795c7f026abbdcad"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "mdurl"\\\\\\\\nversion = "0.1.2"\\\\\\\\ndescription = "Markdown URL utilities"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},\\\\\\\\n    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "modules"\\\\\\\\nversion = "1.0.0"\\\\\\\\ndescription = "Simple test on modules"\\\\\\\\noptional = false\\\\\\\\npython-versions = "*"\\\\\\\\nfiles = [\\\\\\\\n    {file = "modules-1.0.0.tar.gz", hash = "sha256:5146b31b76e9899f95c19e3654c6aee2799694b912ca00faec6798725486934b"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "numpy"\\\\\\\\nversion = "2.0.0"\\\\\\\\ndescription = "Fundamental package for array computing in Python"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.9"\\\\\\\\nfiles = [\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:04494f6ec467ccb5369d1808570ae55f6ed9b5809d7f035059000a37b8d7e86f"},\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:2635dbd200c2d6faf2ef9a0d04f0ecc6b13b3cad54f7c67c61155138835515d2"},\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_arm64.whl", hash = "sha256:0a43f0974d501842866cc83471bdb0116ba0dffdbaac33ec05e6afed5b615238"},\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_x86_64.whl", hash = "sha256:8d83bb187fb647643bd56e1ae43f273c7f4dbcdf94550d7938cfc32566756514"},\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:79e843d186c8fb1b102bef3e2bc35ef81160ffef3194646a7fdd6a73c6b97196"},\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d7696c615765091cc5093f76fd1fa069870304beaccfd58b5dcc69e55ef49c1"},\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:b4c76e3d4c56f145d41b7b6751255feefae92edbc9a61e1758a98204200f30fc"},\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:acd3a644e4807e73b4e1867b769fbf1ce8c5d80e7caaef0d90dcdc640dfc9787"},\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-win32.whl", hash = "sha256:cee6cc0584f71adefe2c908856ccc98702baf95ff80092e4ca46061538a2ba98"},\\\\\\\\n    {file = "numpy-2.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:ed08d2703b5972ec736451b818c2eb9da80d66c3e84aed1deeb0c345fefe461b"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:ad0c86f3455fbd0de6c31a3056eb822fc939f81b1618f10ff3406971893b62a5"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:e7f387600d424f91576af20518334df3d97bc76a300a755f9a8d6e4f5cadd289"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_arm64.whl", hash = "sha256:34f003cb88b1ba38cb9a9a4a3161c1604973d7f9d5552c38bc2f04f829536609"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_x86_64.whl", hash = "sha256:b6f6a8f45d0313db07d6d1d37bd0b112f887e1369758a5419c0370ba915b3871"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5f64641b42b2429f56ee08b4f427a4d2daf916ec59686061de751a55aafa22e4"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:a7039a136017eaa92c1848152827e1424701532ca8e8967fe480fe1569dae581"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:46e161722e0f619749d1cd892167039015b2c2817296104487cd03ed4a955995"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:0e50842b2295ba8414c8c1d9d957083d5dfe9e16828b37de883f51fc53c4016f"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-win32.whl", hash = "sha256:2ce46fd0b8a0c947ae047d222f7136fc4d55538741373107574271bc00e20e8f"},\\\\\\\\n    {file = "numpy-2.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:fbd6acc766814ea6443628f4e6751d0da6593dae29c08c0b2606164db026970c"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:354f373279768fa5a584bac997de6a6c9bc535c482592d7a813bb0c09be6c76f"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:4d2f62e55a4cd9c58c1d9a1c9edaedcd857a73cb6fda875bf79093f9d9086f85"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_arm64.whl", hash = "sha256:1e72728e7501a450288fc8e1f9ebc73d90cfd4671ebbd631f3e7857c39bd16f2"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_x86_64.whl", hash = "sha256:84554fc53daa8f6abf8e8a66e076aff6ece62de68523d9f665f32d2fc50fd66e"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c73aafd1afca80afecb22718f8700b40ac7cab927b8abab3c3e337d70e10e5a2"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:49d9f7d256fbc804391a7f72d4a617302b1afac1112fac19b6c6cec63fe7fe8a"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:0ec84b9ba0654f3b962802edc91424331f423dcf5d5f926676e0150789cb3d95"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:feff59f27338135776f6d4e2ec7aeeac5d5f7a08a83e80869121ef8164b74af9"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-win32.whl", hash = "sha256:c5a59996dc61835133b56a32ebe4ef3740ea5bc19b3983ac60cc32be5a665d54"},\\\\\\\\n    {file = "numpy-2.0.0-cp312-cp312-win_amd64.whl", hash = "sha256:a356364941fb0593bb899a1076b92dfa2029f6f5b8ba88a14fd0984aaf76d0df"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:e61155fae27570692ad1d327e81c6cf27d535a5d7ef97648a17d922224b216de"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:4554eb96f0fd263041baf16cf0881b3f5dafae7a59b1049acb9540c4d57bc8cb"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_arm64.whl", hash = "sha256:903703372d46bce88b6920a0cd86c3ad82dae2dbef157b5fc01b70ea1cfc430f"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_x86_64.whl", hash = "sha256:3e8e01233d57639b2e30966c63d36fcea099d17c53bf424d77f088b0f4babd86"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cde1753efe513705a0c6d28f5884e22bdc30438bf0085c5c486cdaff40cd67a"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:821eedb7165ead9eebdb569986968b541f9908979c2da8a4967ecac4439bae3d"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:9a1712c015831da583b21c5bfe15e8684137097969c6d22e8316ba66b5baabe4"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:9c27f0946a3536403efb0e1c28def1ae6730a72cd0d5878db38824855e3afc44"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-win32.whl", hash = "sha256:63b92c512d9dbcc37f9d81b123dec99fdb318ba38c8059afc78086fe73820275"},\\\\\\\\n    {file = "numpy-2.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:3f6bed7f840d44c08ebdb73b1825282b801799e325bcbdfa6bc5c370e5aecc65"},\\\\\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:9416a5c2e92ace094e9f0082c5fd473502c91651fb896bc17690d6fc475128d6"},\\\\\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_14_0_x86_64.whl", hash = "sha256:17067d097ed036636fa79f6a869ac26df7db1ba22039d962422506640314933a"},\\\\\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:38ecb5b0582cd125f67a629072fed6f83562d9dd04d7e03256c9829bdec027ad"},\\\\\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:cef04d068f5fb0518a77857953193b6bb94809a806bd0a14983a8f12ada060c9"},\\\\\\\\n    {file = "numpy-2.0.0.tar.gz", hash = "sha256:cf5d1c9e6837f8af9f92b6bd3e86d513cdc11f60fd62185cc49ec7d1aba34864"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "packaging"\\\\\\\\nversion = "23.2"\\\\\\\\ndescription = "Core utilities for Python packages"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "packaging-23.2-py3-none-any.whl", hash = "sha256:8c491190033a9af7e1d931d0b5dacc2ef47509b34dd0de67ed209b5203fc88c7"},\\\\\\\\n    {file = "packaging-23.2.tar.gz", hash = "sha256:048fb0e9405036518eaaf48a55953c750c11e1a1b68e0dd1a9d62ed0c092cfc5"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "pandas"\\\\\\\\nversion = "2.2.2"\\\\\\\\ndescription = "Powerful data structures for data analysis, time series, and statistics"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.9"\\\\\\\\nfiles = [\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:90c6fca2acf139569e74e8781709dccb6fe25940488755716d1d354d6bc58bce"},\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:c7adfc142dac335d8c1e0dcbd37eb8617eac386596eb9e1a1b77791cf2498238"},\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4abfe0be0d7221be4f12552995e58723c7422c80a659da13ca382697de830c08"},\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8635c16bf3d99040fdf3ca3db669a7250ddf49c55dc4aa8fe0ae0fa8d6dcc1f0"},\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:40ae1dffb3967a52203105a077415a86044a2bea011b5f321c6aa64b379a3f51"},\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:8e5a0b00e1e56a842f922e7fae8ae4077aee4af0acb5ae3622bd4b4c30aedf99"},\\\\\\\\n    {file = "pandas-2.2.2-cp310-cp310-win_amd64.whl", hash = "sha256:ddf818e4e6c7c6f4f7c8a12709696d193976b591cc7dc50588d3d1a6b5dc8772"},\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:696039430f7a562b74fa45f540aca068ea85fa34c244d0deee539cb6d70aa288"},\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:8e90497254aacacbc4ea6ae5e7a8cd75629d6ad2b30025a4a8b09aa4faf55151"},\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:58b84b91b0b9f4bafac2a0ac55002280c094dfc6402402332c0913a59654ab2b"},\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d2123dc9ad6a814bcdea0f099885276b31b24f7edf40f6cdbc0912672e22eee"},\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:2925720037f06e89af896c70bca73459d7e6a4be96f9de79e2d440bd499fe0db"},\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:0cace394b6ea70c01ca1595f839cf193df35d1575986e484ad35c4aeae7266c1"},\\\\\\\\n    {file = "pandas-2.2.2-cp311-cp311-win_amd64.whl", hash = "sha256:873d13d177501a28b2756375d59816c365e42ed8417b41665f346289adc68d24"},\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:9dfde2a0ddef507a631dc9dc4af6a9489d5e2e740e226ad426a05cabfbd7c8ef"},\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:e9b79011ff7a0f4b1d6da6a61aa1aa604fb312d6647de5bad20013682d1429ce"},\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cb51fe389360f3b5a4d57dbd2848a5f033350336ca3b340d1c53a1fad33bcad"},\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:eee3a87076c0756de40b05c5e9a6069c035ba43e8dd71c379e68cab2c20f16ad"},\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:3e374f59e440d4ab45ca2fffde54b81ac3834cf5ae2cdfa69c90bc03bde04d76"},\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:43498c0bdb43d55cb162cdc8c06fac328ccb5d2eabe3cadeb3529ae6f0517c32"},\\\\\\\\n    {file = "pandas-2.2.2-cp312-cp312-win_amd64.whl", hash = "sha256:d187d355ecec3629624fccb01d104da7d7f391db0311145817525281e2804d23"},\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:0ca6377b8fca51815f382bd0b697a0814c8bda55115678cbc94c30aacbb6eff2"},\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9057e6aa78a584bc93a13f0a9bf7e753a5e9770a30b4d758b8d5f2a62a9433cd"},\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:001910ad31abc7bf06f49dcc903755d2f7f3a9186c0c040b827e522e9cef0863"},\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:66b479b0bd07204e37583c191535505410daa8df638fd8e75ae1b383851fe921"},\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:a77e9d1c386196879aa5eb712e77461aaee433e54c68cf253053a73b7e49c33a"},\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:92fd6b027924a7e178ac202cfbe25e53368db90d56872d20ffae94b96c7acc57"},\\\\\\\\n    {file = "pandas-2.2.2-cp39-cp39-win_amd64.whl", hash = "sha256:640cef9aa381b60e296db324337a554aeeb883ead99dc8f6c18e81a93942f5f4"},\\\\\\\\n    {file = "pandas-2.2.2.tar.gz", hash = "sha256:9e79019aba43cb4fda9e4d983f8e88ca0373adbb697ae9c6c43093218de28b54"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nnumpy = {version = ">=1.22.4", markers = "python_version < \\\\\\\\\\\\\\\\"3.11\\\\\\\\\\\\\\\\""}\\\\\\\\npython-dateutil = ">=2.8.2"\\\\\\\\npytz = ">=2020.1"\\\\\\\\ntzdata = ">=2022.7"\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\nall = ["PyQt5 (>=5.15.9)", "SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)", "beautifulsoup4 (>=4.11.2)", "bottleneck (>=1.3.6)", "dataframe-api-compat (>=0.1.7)", "fastparquet (>=2022.12.0)", "fsspec (>=2022.11.0)", "gcsfs (>=2022.11.0)", "html5lib (>=1.1)", "hypothesis (>=6.46.1)", "jinja2 (>=3.1.2)", "lxml (>=4.9.2)", "matplotlib (>=3.6.3)", "numba (>=0.56.4)", "numexpr (>=2.8.4)", "odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "pandas-gbq (>=0.19.0)", "psycopg2 (>=2.9.6)", "pyarrow (>=10.0.1)", "pymysql (>=1.0.2)", "pyreadstat (>=1.2.0)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "qtpy (>=2.3.0)", "s3fs (>=2022.11.0)", "scipy (>=1.10.0)", "tables (>=3.8.0)", "tabulate (>=0.9.0)", "xarray (>=2022.12.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)", "zstandard (>=0.19.0)"]\\\\\\\\naws = ["s3fs (>=2022.11.0)"]\\\\\\\\nclipboard = ["PyQt5 (>=5.15.9)", "qtpy (>=2.3.0)"]\\\\\\\\ncompression = ["zstandard (>=0.19.0)"]\\\\\\\\ncomputation = ["scipy (>=1.10.0)", "xarray (>=2022.12.0)"]\\\\\\\\nconsortium-standard = ["dataframe-api-compat (>=0.1.7)"]\\\\\\\\nexcel = ["odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)"]\\\\\\\\nfeather = ["pyarrow (>=10.0.1)"]\\\\\\\\nfss = ["fsspec (>=2022.11.0)"]\\\\\\\\ngcp = ["gcsfs (>=2022.11.0)", "pandas-gbq (>=0.19.0)"]\\\\\\\\nhdf5 = ["tables (>=3.8.0)"]\\\\\\\\nhtml = ["beautifulsoup4 (>=4.11.2)", "html5lib (>=1.1)", "lxml (>=4.9.2)"]\\\\\\\\nmysql = ["SQLAlchemy (>=2.0.0)", "pymysql (>=1.0.2)"]\\\\\\\\noutput-formatting = ["jinja2 (>=3.1.2)", "tabulate (>=0.9.0)"]\\\\\\\\nparquet = ["pyarrow (>=10.0.1)"]\\\\\\\\nperformance = ["bottleneck (>=1.3.6)", "numba (>=0.56.4)", "numexpr (>=2.8.4)"]\\\\\\\\nplot = ["matplotlib (>=3.6.3)"]\\\\\\\\npostgresql = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "psycopg2 (>=2.9.6)"]\\\\\\\\npyarrow = ["pyarrow (>=10.0.1)"]\\\\\\\\nspss = ["pyreadstat (>=1.2.0)"]\\\\\\\\nsql-other = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)"]\\\\\\\\ntest = ["hypothesis (>=6.46.1)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)"]\\\\\\\\nxml = ["lxml (>=4.9.2)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "pillow"\\\\\\\\nversion = "10.0.1"\\\\\\\\ndescription = "Python Imaging Library (Fork)"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_10_10_x86_64.whl", hash = "sha256:8f06be50669087250f319b706decf69ca71fdecd829091a37cc89398ca4dc17a"},\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:50bd5f1ebafe9362ad622072a1d2f5850ecfa44303531ff14353a4059113b12d"},\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e6a90167bcca1216606223a05e2cf991bb25b14695c518bc65639463d7db722d"},\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f11c9102c56ffb9ca87134bd025a43d2aba3f1155f508eff88f694b33a9c6d19"},\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:186f7e04248103482ea6354af6d5bcedb62941ee08f7f788a1c7707bc720c66f"},\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:0462b1496505a3462d0f35dc1c4d7b54069747d65d00ef48e736acda2c8cbdff"},\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:d889b53ae2f030f756e61a7bff13684dcd77e9af8b10c6048fb2c559d6ed6eaf"},\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:552912dbca585b74d75279a7570dd29fa43b6d93594abb494ebb31ac19ace6bd"},\\\\\\\\n    {file = "Pillow-10.0.1-cp310-cp310-win_amd64.whl", hash = "sha256:787bb0169d2385a798888e1122c980c6eff26bf941a8ea79747d35d8f9210ca0"},\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_10_10_x86_64.whl", hash = "sha256:fd2a5403a75b54661182b75ec6132437a181209b901446ee5724b589af8edef1"},\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:2d7e91b4379f7a76b31c2dda84ab9e20c6220488e50f7822e59dac36b0cd92b1"},\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:19e9adb3f22d4c416e7cd79b01375b17159d6990003633ff1d8377e21b7f1b21"},\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:93139acd8109edcdeffd85e3af8ae7d88b258b3a1e13a038f542b79b6d255c54"},\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:92a23b0431941a33242b1f0ce6c88a952e09feeea9af4e8be48236a68ffe2205"},\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:cbe68deb8580462ca0d9eb56a81912f59eb4542e1ef8f987405e35a0179f4ea2"},\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:522ff4ac3aaf839242c6f4e5b406634bfea002469656ae8358644fc6c4856a3b"},\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:84efb46e8d881bb06b35d1d541aa87f574b58e87f781cbba8d200daa835b42e1"},\\\\\\\\n    {file = "Pillow-10.0.1-cp311-cp311-win_amd64.whl", hash = "sha256:898f1d306298ff40dc1b9ca24824f0488f6f039bc0e25cfb549d3195ffa17088"},\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_10_10_x86_64.whl", hash = "sha256:bcf1207e2f2385a576832af02702de104be71301c2696d0012b1b93fe34aaa5b"},\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:5d6c9049c6274c1bb565021367431ad04481ebb54872edecfcd6088d27edd6ed"},\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:28444cb6ad49726127d6b340217f0627abc8732f1194fd5352dec5e6a0105635"},\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:de596695a75496deb3b499c8c4f8e60376e0516e1a774e7bc046f0f48cd620ad"},\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_aarch64.whl", hash = "sha256:2872f2d7846cf39b3dbff64bc1104cc48c76145854256451d33c5faa55c04d1a"},\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_x86_64.whl", hash = "sha256:4ce90f8a24e1c15465048959f1e94309dfef93af272633e8f37361b824532e91"},\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:ee7810cf7c83fa227ba9125de6084e5e8b08c59038a7b2c9045ef4dde61663b4"},\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:b1be1c872b9b5fcc229adeadbeb51422a9633abd847c0ff87dc4ef9bb184ae08"},\\\\\\\\n    {file = "Pillow-10.0.1-cp312-cp312-win_amd64.whl", hash = "sha256:98533fd7fa764e5f85eebe56c8e4094db912ccbe6fbf3a58778d543cadd0db08"},\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_10_10_x86_64.whl", hash = "sha256:764d2c0daf9c4d40ad12fbc0abd5da3af7f8aa11daf87e4fa1b834000f4b6b0a"},\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:fcb59711009b0168d6ee0bd8fb5eb259c4ab1717b2f538bbf36bacf207ef7a68"},\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:697a06bdcedd473b35e50a7e7506b1d8ceb832dc238a336bd6f4f5aa91a4b500"},\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9f665d1e6474af9f9da5e86c2a3a2d2d6204e04d5af9c06b9d42afa6ebde3f21"},\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:2fa6dd2661838c66f1a5473f3b49ab610c98a128fc08afbe81b91a1f0bf8c51d"},\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:3a04359f308ebee571a3127fdb1bd01f88ba6f6fb6d087f8dd2e0d9bff43f2a7"},\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:723bd25051454cea9990203405fa6b74e043ea76d4968166dfd2569b0210886a"},\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:71671503e3015da1b50bd18951e2f9daf5b6ffe36d16f1eb2c45711a301521a7"},\\\\\\\\n    {file = "Pillow-10.0.1-cp38-cp38-win_amd64.whl", hash = "sha256:44e7e4587392953e5e251190a964675f61e4dae88d1e6edbe9f36d6243547ff3"},\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_10_10_x86_64.whl", hash = "sha256:3855447d98cced8670aaa63683808df905e956f00348732448b5a6df67ee5849"},\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:ed2d9c0704f2dc4fa980b99d565c0c9a543fe5101c25b3d60488b8ba80f0cce1"},\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:f5bb289bb835f9fe1a1e9300d011eef4d69661bb9b34d5e196e5e82c4cb09b37"},\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3a0d3e54ab1df9df51b914b2233cf779a5a10dfd1ce339d0421748232cea9876"},\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:2cc6b86ece42a11f16f55fe8903595eff2b25e0358dec635d0a701ac9586588f"},\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:ca26ba5767888c84bf5a0c1a32f069e8204ce8c21d00a49c90dabeba00ce0145"},\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:f0b4b06da13275bc02adfeb82643c4a6385bd08d26f03068c2796f60d125f6f2"},\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:bc2e3069569ea9dbe88d6b8ea38f439a6aad8f6e7a6283a38edf61ddefb3a9bf"},\\\\\\\\n    {file = "Pillow-10.0.1-cp39-cp39-win_amd64.whl", hash = "sha256:8b451d6ead6e3500b6ce5c7916a43d8d8d25ad74b9102a629baccc0808c54971"},\\\\\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-macosx_10_10_x86_64.whl", hash = "sha256:32bec7423cdf25c9038fef614a853c9d25c07590e1a870ed471f47fb80b244db"},\\\\\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b7cf63d2c6928b51d35dfdbda6f2c1fddbe51a6bc4a9d4ee6ea0e11670dd981e"},\\\\\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:f6d3d4c905e26354e8f9d82548475c46d8e0889538cb0657aa9c6f0872a37aa4"},\\\\\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:847e8d1017c741c735d3cd1883fa7b03ded4f825a6e5fcb9378fd813edee995f"},\\\\\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-macosx_10_10_x86_64.whl", hash = "sha256:7f771e7219ff04b79e231d099c0a28ed83aa82af91fd5fa9fdb28f5b8d5addaf"},\\\\\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:459307cacdd4138edee3875bbe22a2492519e060660eaf378ba3b405d1c66317"},\\\\\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:b059ac2c4c7a97daafa7dc850b43b2d3667def858a4f112d1aa082e5c3d6cf7d"},\\\\\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:d6caf3cd38449ec3cd8a68b375e0c6fe4b6fd04edb6c9766b55ef84a6e8ddf2d"},\\\\\\\\n    {file = "Pillow-10.0.1.tar.gz", hash = "sha256:d72967b06be9300fed5cfbc8b5bafceec48bf7cdc7dab66b1d2549035287191d"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\ndocs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-removed-in", "sphinxext-opengraph"]\\\\\\\\ntests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "plotly"\\\\\\\\nversion = "5.22.0"\\\\\\\\ndescription = "An open-source, interactive data visualization library for Python"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "plotly-5.22.0-py3-none-any.whl", hash = "sha256:68fc1901f098daeb233cc3dd44ec9dc31fb3ca4f4e53189344199c43496ed006"},\\\\\\\\n    {file = "plotly-5.22.0.tar.gz", hash = "sha256:859fdadbd86b5770ae2466e542b761b247d1c6b49daed765b95bb8c7063e7469"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\npackaging = "*"\\\\\\\\ntenacity = ">=6.2.0"\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "protobuf"\\\\\\\\nversion = "4.24.4"\\\\\\\\ndescription = ""\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "protobuf-4.24.4-cp310-abi3-win32.whl", hash = "sha256:ec9912d5cb6714a5710e28e592ee1093d68c5ebfeda61983b3f40331da0b1ebb"},\\\\\\\\n    {file = "protobuf-4.24.4-cp310-abi3-win_amd64.whl", hash = "sha256:1badab72aa8a3a2b812eacfede5020472e16c6b2212d737cefd685884c191085"},\\\\\\\\n    {file = "protobuf-4.24.4-cp37-abi3-macosx_10_9_universal2.whl", hash = "sha256:8e61a27f362369c2f33248a0ff6896c20dcd47b5d48239cb9720134bef6082e4"},\\\\\\\\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_aarch64.whl", hash = "sha256:bffa46ad9612e6779d0e51ae586fde768339b791a50610d85eb162daeb23661e"},\\\\\\\\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_x86_64.whl", hash = "sha256:b493cb590960ff863743b9ff1452c413c2ee12b782f48beca77c8da3e2ffe9d9"},\\\\\\\\n    {file = "protobuf-4.24.4-cp37-cp37m-win32.whl", hash = "sha256:dbbed8a56e56cee8d9d522ce844a1379a72a70f453bde6243e3c86c30c2a3d46"},\\\\\\\\n    {file = "protobuf-4.24.4-cp37-cp37m-win_amd64.whl", hash = "sha256:6b7d2e1c753715dcfe9d284a25a52d67818dd43c4932574307daf836f0071e37"},\\\\\\\\n    {file = "protobuf-4.24.4-cp38-cp38-win32.whl", hash = "sha256:02212557a76cd99574775a81fefeba8738d0f668d6abd0c6b1d3adcc75503dbe"},\\\\\\\\n    {file = "protobuf-4.24.4-cp38-cp38-win_amd64.whl", hash = "sha256:2fa3886dfaae6b4c5ed2730d3bf47c7a38a72b3a1f0acb4d4caf68e6874b947b"},\\\\\\\\n    {file = "protobuf-4.24.4-cp39-cp39-win32.whl", hash = "sha256:b77272f3e28bb416e2071186cb39efd4abbf696d682cbb5dc731308ad37fa6dd"},\\\\\\\\n    {file = "protobuf-4.24.4-cp39-cp39-win_amd64.whl", hash = "sha256:9fee5e8aa20ef1b84123bb9232b3f4a5114d9897ed89b4b8142d81924e05d79b"},\\\\\\\\n    {file = "protobuf-4.24.4-py3-none-any.whl", hash = "sha256:80797ce7424f8c8d2f2547e2d42bfbb6c08230ce5832d6c099a37335c9c90a92"},\\\\\\\\n    {file = "protobuf-4.24.4.tar.gz", hash = "sha256:5a70731910cd9104762161719c3d883c960151eea077134458503723b60e3667"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "pyarrow"\\\\\\\\nversion = "13.0.0"\\\\\\\\ndescription = "Python library for Apache Arrow"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_10_14_x86_64.whl", hash = "sha256:1afcc2c33f31f6fb25c92d50a86b7a9f076d38acbcb6f9e74349636109550148"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:70fa38cdc66b2fc1349a082987f2b499d51d072faaa6b600f71931150de2e0e3"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cd57b13a6466822498238877892a9b287b0a58c2e81e4bdb0b596dbb151cbb73"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f8ce69f7bf01de2e2764e14df45b8404fc6f1a5ed9871e8e08a12169f87b7a26"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:588f0d2da6cf1b1680974d63be09a6530fd1bd825dc87f76e162404779a157dc"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:6241afd72b628787b4abea39e238e3ff9f34165273fad306c7acf780dd850956"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:fda7857e35993673fcda603c07d43889fca60a5b254052a462653f8656c64f44"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_10_14_x86_64.whl", hash = "sha256:aac0ae0146a9bfa5e12d87dda89d9ef7c57a96210b899459fc2f785303dcbb67"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:d7759994217c86c161c6a8060509cfdf782b952163569606bb373828afdd82e8"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:868a073fd0ff6468ae7d869b5fc1f54de5c4255b37f44fb890385eb68b68f95d"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:51be67e29f3cfcde263a113c28e96aa04362ed8229cb7c6e5f5c719003659d33"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:d1b4e7176443d12610874bb84d0060bf080f000ea9ed7c84b2801df851320295"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:69b6f9a089d116a82c3ed819eea8fe67dae6105f0d81eaf0fdd5e60d0c6e0944"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:ab1268db81aeb241200e321e220e7cd769762f386f92f61b898352dd27e402ce"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_10_14_x86_64.whl", hash = "sha256:ee7490f0f3f16a6c38f8c680949551053c8194e68de5046e6c288e396dccee80"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:e3ad79455c197a36eefbd90ad4aa832bece7f830a64396c15c61a0985e337287"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68fcd2dc1b7d9310b29a15949cdd0cb9bc34b6de767aff979ebf546020bf0ba0"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dc6fd330fd574c51d10638e63c0d00ab456498fc804c9d01f2a61b9264f2c5b2"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:e66442e084979a97bb66939e18f7b8709e4ac5f887e636aba29486ffbf373763"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:0f6eff839a9e40e9c5610d3ff8c5bdd2f10303408312caf4c8003285d0b49565"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-win_amd64.whl", hash = "sha256:8b30a27f1cddf5c6efcb67e598d7823a1e253d743d92ac32ec1eb4b6a1417867"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_10_14_x86_64.whl", hash = "sha256:09552dad5cf3de2dc0aba1c7c4b470754c69bd821f5faafc3d774bedc3b04bb7"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:3896ae6c205d73ad192d2fc1489cd0edfab9f12867c85b4c277af4d37383c18c"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6647444b21cb5e68b593b970b2a9a07748dd74ea457c7dadaa15fd469c48ada1"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47663efc9c395e31d09c6aacfa860f4473815ad6804311c5433f7085415d62a7"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:b9ba6b6d34bd2563345488cf444510588ea42ad5613df3b3509f48eb80250afd"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:d00d374a5625beeb448a7fa23060df79adb596074beb3ddc1838adb647b6ef09"},\\\\\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:c51afd87c35c8331b56f796eff954b9c7f8d4b7fef5903daf4e05fcf017d23a8"},\\\\\\\\n    {file = "pyarrow-13.0.0.tar.gz", hash = "sha256:83333726e83ed44b0ac94d8d7a21bbdee4a05029c3b1e8db58a863eec8fd8a33"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nnumpy = ">=1.16.6"\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "pydeck"\\\\\\\\nversion = "0.8.0"\\\\\\\\ndescription = "Widget for deck.gl maps"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "pydeck-0.8.0-py2.py3-none-any.whl", hash = "sha256:a8fa7757c6f24bba033af39db3147cb020eef44012ba7e60d954de187f9ed4d5"},\\\\\\\\n    {file = "pydeck-0.8.0.tar.gz", hash = "sha256:07edde833f7cfcef6749124351195aa7dcd24663d4909fd7898dbd0b6fbc01ec"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\njinja2 = ">=2.10.1"\\\\\\\\nnumpy = ">=1.16.4"\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\ncarto = ["pydeck-carto"]\\\\\\\\njupyter = ["ipykernel (>=5.1.2)", "ipython (>=5.8.0)", "ipywidgets (>=7,<8)", "traitlets (>=4.3.2)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "pygments"\\\\\\\\nversion = "2.16.1"\\\\\\\\ndescription = "Pygments is a syntax highlighting package written in Python."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "Pygments-2.16.1-py3-none-any.whl", hash = "sha256:13fc09fa63bc8d8671a6d247e1eb303c4b343eaee81d861f3404db2935653692"},\\\\\\\\n    {file = "Pygments-2.16.1.tar.gz", hash = "sha256:1daff0494820c69bc8941e407aa20f577374ee88364ee10a98fdbe0aece96e29"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\nplugins = ["importlib-metadata"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "pymongo"\\\\\\\\nversion = "4.7.3"\\\\\\\\ndescription = "Python driver for MongoDB <http://www.mongodb.org>"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e9580b4537b3cc5d412070caabd1dabdf73fdce249793598792bac5782ecf2eb"},\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:517243b2b189c98004570dd8fc0e89b1a48363d5578b3b99212fa2098b2ea4b8"},\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:23b1e9dabd61da1c7deb54d888f952f030e9e35046cebe89309b28223345b3d9"},\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:03e0f9901ad66c6fb7da0d303461377524d61dab93a4e4e5af44164c5bb4db76"},\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9a870824aa54453aee030bac08c77ebcf2fe8999400f0c2a065bebcbcd46b7f8"},\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dfd7b3d3f4261bddbb74a332d87581bc523353e62bb9da4027cc7340f6fcbebc"},\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4d719a643ea6da46d215a3ba51dac805a773b611c641319558d8576cbe31cef8"},\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-win32.whl", hash = "sha256:d8b1e06f361f3c66ee694cb44326e1a2e4f93bc9c3a4849ae8547889fca71154"},\\\\\\\\n    {file = "pymongo-4.7.3-cp310-cp310-win_amd64.whl", hash = "sha256:c450ab2f9397e2d5caa7fddeb4feb30bf719c47c13ae02c0bbb3b71bf4099c1c"},\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:79cc6459209e885ba097779eaa0fe7f2fa049db39ab43b1731cf8d065a4650e8"},\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:6e2287f1e2cc35e73cd74a4867e398a97962c5578a3991c730ef78d276ca8e46"},\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:413506bd48d8c31ee100645192171e4773550d7cb940b594d5175ac29e329ea1"},\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1cc1febf17646d52b7561caa762f60bdfe2cbdf3f3e70772f62eb624269f9c05"},\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:8dfcf18a49955d50a16c92b39230bd0668ffc9c164ccdfe9d28805182b48fa72"},\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:89872041196c008caddf905eb59d3dc2d292ae6b0282f1138418e76f3abd3ad6"},\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d3ed97b89de62ea927b672ad524de0d23f3a6b4a01c8d10e3d224abec973fbc3"},\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-win32.whl", hash = "sha256:d2f52b38151e946011d888a8441d3d75715c663fc5b41a7ade595e924e12a90a"},\\\\\\\\n    {file = "pymongo-4.7.3-cp311-cp311-win_amd64.whl", hash = "sha256:4a4cc91c28e81c0ce03d3c278e399311b0af44665668a91828aec16527082676"},\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:cb30c8a78f5ebaca98640943447b6a0afcb146f40b415757c9047bf4a40d07b4"},\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:9cf2069f5d37c398186453589486ea98bb0312214c439f7d320593b61880dc05"},\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3564f423958fced8a8c90940fd2f543c27adbcd6c7c6ed6715d847053f6200a0"},\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:7a8af8a38fa6951fff73e6ff955a6188f829b29fed7c5a1b739a306b4aa56fe8"},\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3a0e81c8dba6d825272867d487f18764cfed3c736d71d7d4ff5b79642acbed42"},\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:88fc1d146feabac4385ea8ddb1323e584922922641303c8bf392fe1c36803463"},\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4225100b2c5d1f7393d7c5d256ceb8b20766830eecf869f8ae232776347625a6"},\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-win32.whl", hash = "sha256:5f3569ed119bf99c0f39ac9962fb5591eff02ca210fe80bb5178d7a1171c1b1e"},\\\\\\\\n    {file = "pymongo-4.7.3-cp312-cp312-win_amd64.whl", hash = "sha256:eb383c54c0c8ba27e7712b954fcf2a0905fee82a929d277e2e94ad3a5ba3c7db"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:a46cffe91912570151617d866a25d07b9539433a32231ca7e7cf809b6ba1745f"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4c3cba427dac50944c050c96d958c5e643c33a457acee03bae27c8990c5b9c16"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:a7a5fd893edbeb7fa982f8d44b6dd0186b6cd86c89e23f6ef95049ff72bffe46"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c168a2fadc8b19071d0a9a4f85fe38f3029fe22163db04b4d5c046041c0b14bd"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2c59c2c9e70f63a7f18a31e367898248c39c068c639b0579623776f637e8f482"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d08165fd82c89d372e82904c3268bd8fe5de44f92a00e97bb1db1785154397d9"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:397fed21afec4fdaecf72f9c4344b692e489756030a9c6d864393e00c7e80491"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:f903075f8625e2d228f1b9b9a0cf1385f1c41e93c03fd7536c91780a0fb2e98f"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-win32.whl", hash = "sha256:8ed1132f58c38add6b6138b771d0477a3833023c015c455d9a6e26f367f9eb5c"},\\\\\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-win_amd64.whl", hash = "sha256:8d00a5d8fc1043a4f641cbb321da766699393f1b6f87c70fae8089d61c9c9c54"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:9377b868c38700c7557aac1bc4baae29f47f1d279cc76b60436e547fd643318c"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:da4a6a7b4f45329bb135aa5096823637bd5f760b44d6224f98190ee367b6b5dd"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:487e2f9277f8a63ac89335ec4f1699ae0d96ebd06d239480d69ed25473a71b2c"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6db3d608d541a444c84f0bfc7bad80b0b897e0f4afa580a53f9a944065d9b633"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e90af2ad3a8a7c295f4d09a2fbcb9a350c76d6865f787c07fe843b79c6e821d1"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8e28feb18dc559d50ededba27f9054c79f80c4edd70a826cecfe68f3266807b3"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:f21ecddcba2d9132d5aebd8e959de8d318c29892d0718420447baf2b9bccbb19"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:26140fbb3f6a9a74bd73ed46d0b1f43d5702e87a6e453a31b24fad9c19df9358"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:94baa5fc7f7d22c3ce2ac7bd92f7e03ba7a6875f2480e3b97a400163d6eaafc9"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-win32.whl", hash = "sha256:92dd247727dd83d1903e495acc743ebd757f030177df289e3ba4ef8a8c561fad"},\\\\\\\\n    {file = "pymongo-4.7.3-cp38-cp38-win_amd64.whl", hash = "sha256:1c90c848a5e45475731c35097f43026b88ef14a771dfd08f20b67adc160a3f79"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:f598be401b416319a535c386ac84f51df38663f7a9d1071922bda4d491564422"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:35ba90477fae61c65def6e7d09e8040edfdd3b7fd47c3c258b4edded60c4d625"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9aa8735955c70892634d7e61b0ede9b1eefffd3cd09ccabee0ffcf1bdfe62254"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:82a97d8f7f138586d9d0a0cff804a045cdbbfcfc1cd6bba542b151e284fbbec5"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:de3b9db558930efab5eaef4db46dcad8bf61ac3ddfd5751b3e5ac6084a25e366"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0e149217ef62812d3c2401cf0e2852b0c57fd155297ecc4dcd67172c4eca402"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:b3a8a1ef4a824f5feb793b3231526d0045eadb5eb01080e38435dfc40a26c3e5"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d14e5e89a4be1f10efc3d9dcb13eb7a3b2334599cb6bb5d06c6a9281b79c8e22"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:c6bfa29f032fd4fd7b129520f8cdb51ab71d88c2ba0567cccd05d325f963acb5"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-win32.whl", hash = "sha256:1421d0bd2ce629405f5157bd1aaa9b83f12d53a207cf68a43334f4e4ee312b66"},\\\\\\\\n    {file = "pymongo-4.7.3-cp39-cp39-win_amd64.whl", hash = "sha256:f7ee974f8b9370a998919c55b1050889f43815ab588890212023fecbc0402a6d"},\\\\\\\\n    {file = "pymongo-4.7.3.tar.gz", hash = "sha256:6354a66b228f2cd399be7429685fb68e07f19110a3679782ecb4fdb68da03831"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\ndnspython = ">=1.16.0,<3.0.0"\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\naws = ["pymongo-auth-aws (>=1.1.0,<2.0.0)"]\\\\\\\\nencryption = ["certifi", "pymongo-auth-aws (>=1.1.0,<2.0.0)", "pymongocrypt (>=1.6.0,<2.0.0)"]\\\\\\\\ngssapi = ["pykerberos", "winkerberos (>=0.5.0)"]\\\\\\\\nocsp = ["certifi", "cryptography (>=2.5)", "pyopenssl (>=17.2.0)", "requests (<3.0.0)", "service-identity (>=18.1.0)"]\\\\\\\\nsnappy = ["python-snappy"]\\\\\\\\ntest = ["pytest (>=7)"]\\\\\\\\nzstd = ["zstandard"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "python-dateutil"\\\\\\\\nversion = "2.8.2"\\\\\\\\ndescription = "Extensions to the standard Python datetime module"\\\\\\\\noptional = false\\\\\\\\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},\\\\\\\\n    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nsix = ">=1.5"\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "pytz"\\\\\\\\nversion = "2023.3.post1"\\\\\\\\ndescription = "World timezone definitions, modern and historical"\\\\\\\\noptional = false\\\\\\\\npython-versions = "*"\\\\\\\\nfiles = [\\\\\\\\n    {file = "pytz-2023.3.post1-py2.py3-none-any.whl", hash = "sha256:ce42d816b81b68506614c11e8937d3aa9e41007ceb50bfdcb0749b921bf646c7"},\\\\\\\\n    {file = "pytz-2023.3.post1.tar.gz", hash = "sha256:7b4fddbeb94a1eba4b557da24f19fdf9db575192544270a9101d8509f9f43d7b"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "referencing"\\\\\\\\nversion = "0.30.2"\\\\\\\\ndescription = "JSON Referencing + Python"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "referencing-0.30.2-py3-none-any.whl", hash = "sha256:449b6669b6121a9e96a7f9e410b245d471e8d48964c67113ce9afe50c8dd7bdf"},\\\\\\\\n    {file = "referencing-0.30.2.tar.gz", hash = "sha256:794ad8003c65938edcdbc027f1933215e0d0ccc0291e3ce20a4d87432b59efc0"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nattrs = ">=22.2.0"\\\\\\\\nrpds-py = ">=0.7.0"\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "requests"\\\\\\\\nversion = "2.32.3"\\\\\\\\ndescription = "Python HTTP for Humans."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "requests-2.32.3-py3-none-any.whl", hash = "sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6"},\\\\\\\\n    {file = "requests-2.32.3.tar.gz", hash = "sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\ncertifi = ">=2017.4.17"\\\\\\\\ncharset-normalizer = ">=2,<4"\\\\\\\\nidna = ">=2.5,<4"\\\\\\\\nurllib3 = ">=1.21.1,<3"\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\nsocks = ["PySocks (>=1.5.6,!=1.5.7)"]\\\\\\\\nuse-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "rich"\\\\\\\\nversion = "13.6.0"\\\\\\\\ndescription = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7.0"\\\\\\\\nfiles = [\\\\\\\\n    {file = "rich-13.6.0-py3-none-any.whl", hash = "sha256:2b38e2fe9ca72c9a00170a1a2d20c63c790d0e10ef1fe35eba76e1e7b1d7d245"},\\\\\\\\n    {file = "rich-13.6.0.tar.gz", hash = "sha256:5c14d22737e6d5084ef4771b62d5d4363165b403455a30a1c8ca39dc7b644bef"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nmarkdown-it-py = ">=2.2.0"\\\\\\\\npygments = ">=2.13.0,<3.0.0"\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\njupyter = ["ipywidgets (>=7.5.1,<9)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "rpds-py"\\\\\\\\nversion = "0.10.6"\\\\\\\\ndescription = "Python bindings to Rust\\\\\\\\\\\\\\\'s persistent data structures (rpds)"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_10_7_x86_64.whl", hash = "sha256:6bdc11f9623870d75692cc33c59804b5a18d7b8a4b79ef0b00b773a27397d1f6"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:26857f0f44f0e791f4a266595a7a09d21f6b589580ee0585f330aaccccb836e3"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7f5e15c953ace2e8dde9824bdab4bec50adb91a5663df08d7d994240ae6fa31"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:61fa268da6e2e1cd350739bb61011121fa550aa2545762e3dc02ea177ee4de35"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c48f3fbc3e92c7dd6681a258d22f23adc2eb183c8cb1557d2fcc5a024e80b094"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c0503c5b681566e8b722fe8c4c47cce5c7a51f6935d5c7012c4aefe952a35eed"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:734c41f9f57cc28658d98270d3436dba65bed0cfc730d115b290e970150c540d"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:a5d7ed104d158c0042a6a73799cf0eb576dfd5fc1ace9c47996e52320c37cb7c"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:e3df0bc35e746cce42579826b89579d13fd27c3d5319a6afca9893a9b784ff1b"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:73e0a78a9b843b8c2128028864901f55190401ba38aae685350cf69b98d9f7c9"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:5ed505ec6305abd2c2c9586a7b04fbd4baf42d4d684a9c12ec6110deefe2a063"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-none-win32.whl", hash = "sha256:d97dd44683802000277bbf142fd9f6b271746b4846d0acaf0cefa6b2eaf2a7ad"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp310-none-win_amd64.whl", hash = "sha256:b455492cab07107bfe8711e20cd920cc96003e0da3c1f91297235b1603d2aca7"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_10_7_x86_64.whl", hash = "sha256:e8cdd52744f680346ff8c1ecdad5f4d11117e1724d4f4e1874f3a67598821069"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:66414dafe4326bca200e165c2e789976cab2587ec71beb80f59f4796b786a238"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cc435d059f926fdc5b05822b1be4ff2a3a040f3ae0a7bbbe672babb468944722"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:8e7f2219cb72474571974d29a191714d822e58be1eb171f229732bc6fdedf0ac"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:3953c6926a63f8ea5514644b7afb42659b505ece4183fdaaa8f61d978754349e"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:2bb2e4826be25e72013916eecd3d30f66fd076110de09f0e750163b416500721"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:7bf347b495b197992efc81a7408e9a83b931b2f056728529956a4d0858608b80"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:102eac53bb0bf0f9a275b438e6cf6904904908562a1463a6fc3323cf47d7a532"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:40f93086eef235623aa14dbddef1b9fb4b22b99454cb39a8d2e04c994fb9868c"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:e22260a4741a0e7a206e175232867b48a16e0401ef5bce3c67ca5b9705879066"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:f4e56860a5af16a0fcfa070a0a20c42fbb2012eed1eb5ceeddcc7f8079214281"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-none-win32.whl", hash = "sha256:0774a46b38e70fdde0c6ded8d6d73115a7c39d7839a164cc833f170bbf539116"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp311-none-win_amd64.whl", hash = "sha256:4a5ee600477b918ab345209eddafde9f91c0acd931f3776369585a1c55b04c57"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_10_7_x86_64.whl", hash = "sha256:5ee97c683eaface61d38ec9a489e353d36444cdebb128a27fe486a291647aff6"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:0713631d6e2d6c316c2f7b9320a34f44abb644fc487b77161d1724d883662e31"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b5a53f5998b4bbff1cb2e967e66ab2addc67326a274567697379dd1e326bded7"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6a555ae3d2e61118a9d3e549737bb4a56ff0cec88a22bd1dfcad5b4e04759175"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:945eb4b6bb8144909b203a88a35e0a03d22b57aefb06c9b26c6e16d72e5eb0f0"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:52c215eb46307c25f9fd2771cac8135d14b11a92ae48d17968eda5aa9aaf5071"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c1b3cd23d905589cb205710b3988fc8f46d4a198cf12862887b09d7aaa6bf9b9"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:64ccc28683666672d7c166ed465c09cee36e306c156e787acef3c0c62f90da5a"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:516a611a2de12fbea70c78271e558f725c660ce38e0006f75139ba337d56b1f6"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:9ff93d3aedef11f9c4540cf347f8bb135dd9323a2fc705633d83210d464c579d"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:d858532212f0650be12b6042ff4378dc2efbb7792a286bee4489eaa7ba010586"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-none-win32.whl", hash = "sha256:3c4eff26eddac49d52697a98ea01b0246e44ca82ab09354e94aae8823e8bda02"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp312-none-win_amd64.whl", hash = "sha256:150eec465dbc9cbca943c8e557a21afdcf9bab8aaabf386c44b794c2f94143d2"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_10_7_x86_64.whl", hash = "sha256:cf693eb4a08eccc1a1b636e4392322582db2a47470d52e824b25eca7a3977b53"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4134aa2342f9b2ab6c33d5c172e40f9ef802c61bb9ca30d21782f6e035ed0043"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e782379c2028a3611285a795b89b99a52722946d19fc06f002f8b53e3ea26ea9"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2f6da6d842195fddc1cd34c3da8a40f6e99e4a113918faa5e60bf132f917c247"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:b4a9fe992887ac68256c930a2011255bae0bf5ec837475bc6f7edd7c8dfa254e"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b788276a3c114e9f51e257f2a6f544c32c02dab4aa7a5816b96444e3f9ffc336"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:caa1afc70a02645809c744eefb7d6ee8fef7e2fad170ffdeacca267fd2674f13"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bddd4f91eede9ca5275e70479ed3656e76c8cdaaa1b354e544cbcf94c6fc8ac4"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:775049dfa63fb58293990fc59473e659fcafd953bba1d00fc5f0631a8fd61977"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_i686.whl", hash = "sha256:c6c45a2d2b68c51fe3d9352733fe048291e483376c94f7723458cfd7b473136b"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:0699ab6b8c98df998c3eacf51a3b25864ca93dab157abe358af46dc95ecd9801"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-none-win32.whl", hash = "sha256:ebdab79f42c5961682654b851f3f0fc68e6cc7cd8727c2ac4ffff955154123c1"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp38-none-win_amd64.whl", hash = "sha256:24656dc36f866c33856baa3ab309da0b6a60f37d25d14be916bd3e79d9f3afcf"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_10_7_x86_64.whl", hash = "sha256:0898173249141ee99ffcd45e3829abe7bcee47d941af7434ccbf97717df020e5"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9e9184fa6c52a74a5521e3e87badbf9692549c0fcced47443585876fcc47e469"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5752b761902cd15073a527b51de76bbae63d938dc7c5c4ad1e7d8df10e765138"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:99a57006b4ec39dbfb3ed67e5b27192792ffb0553206a107e4aadb39c5004cd5"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:09586f51a215d17efdb3a5f090d7cbf1633b7f3708f60a044757a5d48a83b393"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e225a6a14ecf44499aadea165299092ab0cba918bb9ccd9304eab1138844490b"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b2039f8d545f20c4e52713eea51a275e62153ee96c8035a32b2abb772b6fc9e5"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:34ad87a831940521d462ac11f1774edf867c34172010f5390b2f06b85dcc6014"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:dcdc88b6b01015da066da3fb76545e8bb9a6880a5ebf89e0f0b2e3ca557b3ab7"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:25860ed5c4e7f5e10c496ea78af46ae8d8468e0be745bd233bab9ca99bfd2647"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:7854a207ef77319ec457c1eb79c361b48807d252d94348305db4f4b62f40f7f3"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-none-win32.whl", hash = "sha256:e6fcc026a3f27c1282c7ed24b7fcac82cdd70a0e84cc848c0841a3ab1e3dea2d"},\\\\\\\\n    {file = "rpds_py-0.10.6-cp39-none-win_amd64.whl", hash = "sha256:e98c4c07ee4c4b3acf787e91b27688409d918212dfd34c872201273fdd5a0e18"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_10_7_x86_64.whl", hash = "sha256:68fe9199184c18d997d2e4293b34327c0009a78599ce703e15cd9a0f47349bba"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:3339eca941568ed52d9ad0f1b8eb9fe0958fa245381747cecf2e9a78a5539c42"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a360cfd0881d36c6dc271992ce1eda65dba5e9368575663de993eeb4523d895f"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:031f76fc87644a234883b51145e43985aa2d0c19b063e91d44379cd2786144f8"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1f36a9d751f86455dc5278517e8b65580eeee37d61606183897f122c9e51cef3"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:052a832078943d2b2627aea0d19381f607fe331cc0eb5df01991268253af8417"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:023574366002bf1bd751ebaf3e580aef4a468b3d3c216d2f3f7e16fdabd885ed"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:defa2c0c68734f4a82028c26bcc85e6b92cced99866af118cd6a89b734ad8e0d"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:879fb24304ead6b62dbe5034e7b644b71def53c70e19363f3c3be2705c17a3b4"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_i686.whl", hash = "sha256:53c43e10d398e365da2d4cc0bcaf0854b79b4c50ee9689652cdc72948e86f487"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:3777cc9dea0e6c464e4b24760664bd8831738cc582c1d8aacf1c3f546bef3f65"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_10_7_x86_64.whl", hash = "sha256:40578a6469e5d1df71b006936ce95804edb5df47b520c69cf5af264d462f2cbb"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_11_0_arm64.whl", hash = "sha256:cf71343646756a072b85f228d35b1d7407da1669a3de3cf47f8bbafe0c8183a4"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:10f32b53f424fc75ff7b713b2edb286fdbfc94bf16317890260a81c2c00385dc"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:81de24a1c51cfb32e1fbf018ab0bdbc79c04c035986526f76c33e3f9e0f3356c"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ac17044876e64a8ea20ab132080ddc73b895b4abe9976e263b0e30ee5be7b9c2"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5e8a78bd4879bff82daef48c14d5d4057f6856149094848c3ed0ecaf49f5aec2"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:78ca33811e1d95cac8c2e49cb86c0fb71f4d8409d8cbea0cb495b6dbddb30a55"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:c63c3ef43f0b3fb00571cff6c3967cc261c0ebd14a0a134a12e83bdb8f49f21f"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:7fde6d0e00b2fd0dbbb40c0eeec463ef147819f23725eda58105ba9ca48744f4"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_i686.whl", hash = "sha256:79edd779cfc46b2e15b0830eecd8b4b93f1a96649bcb502453df471a54ce7977"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:9164ec8010327ab9af931d7ccd12ab8d8b5dc2f4c6a16cbdd9d087861eaaefa1"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_10_7_x86_64.whl", hash = "sha256:d29ddefeab1791e3c751e0189d5f4b3dbc0bbe033b06e9c333dca1f99e1d523e"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:30adb75ecd7c2a52f5e76af50644b3e0b5ba036321c390b8e7ec1bb2a16dd43c"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:dd609fafdcdde6e67a139898196698af37438b035b25ad63704fd9097d9a3482"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6eef672de005736a6efd565577101277db6057f65640a813de6c2707dc69f396"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6cf4393c7b41abbf07c88eb83e8af5013606b1cdb7f6bc96b1b3536b53a574b8"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:ad857f42831e5b8d41a32437f88d86ead6c191455a3499c4b6d15e007936d4cf"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1d7360573f1e046cb3b0dceeb8864025aa78d98be4bb69f067ec1c40a9e2d9df"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d08f63561c8a695afec4975fae445245386d645e3e446e6f260e81663bfd2e38"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:f0f17f2ce0f3529177a5fff5525204fad7b43dd437d017dd0317f2746773443d"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_i686.whl", hash = "sha256:442626328600bde1d09dc3bb00434f5374948838ce75c41a52152615689f9403"},\\\\\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:e9616f5bd2595f7f4a04b67039d890348ab826e943a9bfdbe4938d0eba606971"},\\\\\\\\n    {file = "rpds_py-0.10.6.tar.gz", hash = "sha256:4ce5a708d65a8dbf3748d2474b580d606b1b9f91b5c6ab2a316e0b0cf7a4ba50"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "six"\\\\\\\\nversion = "1.16.0"\\\\\\\\ndescription = "Python 2 and 3 compatibility utilities"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"\\\\\\\\nfiles = [\\\\\\\\n    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},\\\\\\\\n    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "smmap"\\\\\\\\nversion = "5.0.1"\\\\\\\\ndescription = "A pure Python implementation of a sliding window memory map manager"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "smmap-5.0.1-py3-none-any.whl", hash = "sha256:e6d8668fa5f93e706934a62d7b4db19c8d9eb8cf2adbb75ef1b675aa332b69da"},\\\\\\\\n    {file = "smmap-5.0.1.tar.gz", hash = "sha256:dceeb6c0028fdb6734471eb07c0cd2aae706ccaecab45965ee83f11c8d3b1f62"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "streamlit"\\\\\\\\nversion = "1.36.0"\\\\\\\\ndescription = "A faster way to build and share data apps"\\\\\\\\noptional = false\\\\\\\\npython-versions = "!=3.9.7,>=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "streamlit-1.36.0-py2.py3-none-any.whl", hash = "sha256:3399a33ea5faa26c05dd433d142eefe68ade67e9189a9e1d47a1731ae30a1c42"},\\\\\\\\n    {file = "streamlit-1.36.0.tar.gz", hash = "sha256:a12af9f0eb61ab5832f438336257b1ec20eb29d8e0e0c6b40a79116ba939bc9c"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\naltair = ">=4.0,<6"\\\\\\\\nblinker = ">=1.0.0,<2"\\\\\\\\ncachetools = ">=4.0,<6"\\\\\\\\nclick = ">=7.0,<9"\\\\\\\\ngitpython = ">=3.0.7,<3.1.19 || >3.1.19,<4"\\\\\\\\nnumpy = ">=1.20,<3"\\\\\\\\npackaging = ">=20,<25"\\\\\\\\npandas = ">=1.3.0,<3"\\\\\\\\npillow = ">=7.1.0,<11"\\\\\\\\nprotobuf = ">=3.20,<6"\\\\\\\\npyarrow = ">=7.0"\\\\\\\\npydeck = ">=0.8.0b4,<1"\\\\\\\\nrequests = ">=2.27,<3"\\\\\\\\nrich = ">=10.14.0,<14"\\\\\\\\ntenacity = ">=8.1.0,<9"\\\\\\\\ntoml = ">=0.10.1,<2"\\\\\\\\ntornado = ">=6.0.3,<7"\\\\\\\\ntyping-extensions = ">=4.3.0,<5"\\\\\\\\nwatchdog = {version = ">=2.1.5,<5", markers = "platform_system != \\\\\\\\\\\\\\\\"Darwin\\\\\\\\\\\\\\\\""}\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\nsnowflake = ["snowflake-connector-python (>=2.8.0)", "snowflake-snowpark-python (>=0.9.0)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "streamlit-option-menu"\\\\\\\\nversion = "0.3.13"\\\\\\\\ndescription = "streamlit-option-menu is a simple Streamlit component that allows users to select a single item from a list of options in a menu."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.6"\\\\\\\\nfiles = [\\\\\\\\n    {file = "streamlit-option-menu-0.3.13.tar.gz", hash = "sha256:a0fb4eb52bdc5060b0cbf08ef75fc27c78126e13cdcdde1ec7beea36c0cc3880"},\\\\\\\\n    {file = "streamlit_option_menu-0.3.13-py3-none-any.whl", hash = "sha256:7e7e4f8770bc444ea4e51b27d3f6dfbda87e369b686421137f323d5b9ad13c25"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.dependencies]\\\\\\\\nstreamlit = ">=0.63"\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "tenacity"\\\\\\\\nversion = "8.2.3"\\\\\\\\ndescription = "Retry code until it succeeds"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "tenacity-8.2.3-py3-none-any.whl", hash = "sha256:ce510e327a630c9e1beaf17d42e6ffacc88185044ad85cf74c0a8887c6a0f88c"},\\\\\\\\n    {file = "tenacity-8.2.3.tar.gz", hash = "sha256:5398ef0d78e63f40007c1fb4c0bff96e1911394d2fa8d194f77619c05ff6cc8a"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\ndoc = ["reno", "sphinx", "tornado (>=4.5)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "toml"\\\\\\\\nversion = "0.10.2"\\\\\\\\ndescription = "Python Library for Tom\\\\\\\\\\\\\\\'s Obvious, Minimal Language"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"\\\\\\\\nfiles = [\\\\\\\\n    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},\\\\\\\\n    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "toolz"\\\\\\\\nversion = "0.12.0"\\\\\\\\ndescription = "List processing tools and functional utilities"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.5"\\\\\\\\nfiles = [\\\\\\\\n    {file = "toolz-0.12.0-py3-none-any.whl", hash = "sha256:2059bd4148deb1884bb0eb770a3cde70e7f954cfbbdc2285f1f2de01fd21eb6f"},\\\\\\\\n    {file = "toolz-0.12.0.tar.gz", hash = "sha256:88c570861c440ee3f2f6037c4654613228ff40c93a6c25e0eba70d17282c6194"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "tornado"\\\\\\\\nversion = "6.3.3"\\\\\\\\ndescription = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">= 3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_universal2.whl", hash = "sha256:502fba735c84450974fec147340016ad928d29f1e91f49be168c0a4c18181e1d"},\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_x86_64.whl", hash = "sha256:805d507b1f588320c26f7f097108eb4023bbaa984d63176d1652e184ba24270a"},\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1bd19ca6c16882e4d37368e0152f99c099bad93e0950ce55e71daed74045908f"},\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7ac51f42808cca9b3613f51ffe2a965c8525cb1b00b7b2d56828b8045354f76a"},\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:71a8db65160a3c55d61839b7302a9a400074c9c753040455494e2af74e2501f2"},\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_aarch64.whl", hash = "sha256:ceb917a50cd35882b57600709dd5421a418c29ddc852da8bcdab1f0db33406b0"},\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_i686.whl", hash = "sha256:7d01abc57ea0dbb51ddfed477dfe22719d376119844e33c661d873bf9c0e4a16"},\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_x86_64.whl", hash = "sha256:9dc4444c0defcd3929d5c1eb5706cbe1b116e762ff3e0deca8b715d14bf6ec17"},\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-win32.whl", hash = "sha256:65ceca9500383fbdf33a98c0087cb975b2ef3bfb874cb35b8de8740cf7f41bd3"},\\\\\\\\n    {file = "tornado-6.3.3-cp38-abi3-win_amd64.whl", hash = "sha256:22d3c2fa10b5793da13c807e6fc38ff49a4f6e1e3868b0a6f4164768bb8e20f5"},\\\\\\\\n    {file = "tornado-6.3.3.tar.gz", hash = "sha256:e7d8db41c0181c80d76c982aacc442c0783a2c54d6400fe028954201a2e032fe"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "typing-extensions"\\\\\\\\nversion = "4.8.0"\\\\\\\\ndescription = "Backported and Experimental Type Hints for Python 3.8+"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.8"\\\\\\\\nfiles = [\\\\\\\\n    {file = "typing_extensions-4.8.0-py3-none-any.whl", hash = "sha256:8f92fc8806f9a6b641eaa5318da32b44d401efaac0f6678c9bc448ba3605faa0"},\\\\\\\\n    {file = "typing_extensions-4.8.0.tar.gz", hash = "sha256:df8e4339e9cb77357558cbdbceca33c303714cf861d1eef15e1070055ae8b7ef"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "tzdata"\\\\\\\\nversion = "2023.3"\\\\\\\\ndescription = "Provider of IANA time zone data"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=2"\\\\\\\\nfiles = [\\\\\\\\n    {file = "tzdata-2023.3-py2.py3-none-any.whl", hash = "sha256:7e65763eef3120314099b6939b5546db7adce1e7d6f2e179e3df563c70511eda"},\\\\\\\\n    {file = "tzdata-2023.3.tar.gz", hash = "sha256:11ef1e08e54acb0d4f95bdb1be05da659673de4acbd21bf9c69e94cc5e907a3a"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "urllib3"\\\\\\\\nversion = "2.0.6"\\\\\\\\ndescription = "HTTP library with thread-safe connection pooling, file post, and more."\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "urllib3-2.0.6-py3-none-any.whl", hash = "sha256:7a7c7003b000adf9e7ca2a377c9688bbc54ed41b985789ed576570342a375cd2"},\\\\\\\\n    {file = "urllib3-2.0.6.tar.gz", hash = "sha256:b19e1a85d206b56d7df1d5e683df4a7725252a964e3993648dd0fb5a1c157564"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\nbrotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]\\\\\\\\nsecure = ["certifi", "cryptography (>=1.9)", "idna (>=2.0.0)", "pyopenssl (>=17.1.0)", "urllib3-secure-extra"]\\\\\\\\nsocks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]\\\\\\\\nzstd = ["zstandard (>=0.18.0)"]\\\\\\\\n\\\\\\\\n[[package]]\\\\\\\\nname = "watchdog"\\\\\\\\nversion = "3.0.0"\\\\\\\\ndescription = "Filesystem events monitoring"\\\\\\\\noptional = false\\\\\\\\npython-versions = ">=3.7"\\\\\\\\nfiles = [\\\\\\\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:336adfc6f5cc4e037d52db31194f7581ff744b67382eb6021c868322e32eef41"},\\\\\\\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:a70a8dcde91be523c35b2bf96196edc5730edb347e374c7de7cd20c43ed95397"},\\\\\\\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:adfdeab2da79ea2f76f87eb42a3ab1966a5313e5a69a0213a3cc06ef692b0e96"},\\\\\\\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:2b57a1e730af3156d13b7fdddfc23dea6487fceca29fc75c5a868beed29177ae"},\\\\\\\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:7ade88d0d778b1b222adebcc0927428f883db07017618a5e684fd03b83342bd9"},\\\\\\\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:7e447d172af52ad204d19982739aa2346245cc5ba6f579d16dac4bfec226d2e7"},\\\\\\\\n    {file = "watchdog-3.0.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:9fac43a7466eb73e64a9940ac9ed6369baa39b3bf221ae23493a9ec4d0022674"},\\\\\\\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:8ae9cda41fa114e28faf86cb137d751a17ffd0316d1c34ccf2235e8a84365c7f"},\\\\\\\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:25f70b4aa53bd743729c7475d7ec41093a580528b100e9a8c5b5efe8899592fc"},\\\\\\\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4f94069eb16657d2c6faada4624c39464f65c05606af50bb7902e036e3219be3"},\\\\\\\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:7c5f84b5194c24dd573fa6472685b2a27cc5a17fe5f7b6fd40345378ca6812e3"},\\\\\\\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:3aa7f6a12e831ddfe78cdd4f8996af9cf334fd6346531b16cec61c3b3c0d8da0"},\\\\\\\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:233b5817932685d39a7896b1090353fc8efc1ef99c9c054e46c8002561252fb8"},\\\\\\\\n    {file = "watchdog-3.0.0-pp37-pypy37_pp73-macosx_10_9_x86_64.whl", hash = "sha256:13bbbb462ee42ec3c5723e1205be8ced776f05b100e4737518c67c8325cf6100"},\\\\\\\\n    {file = "watchdog-3.0.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl", hash = "sha256:8f3ceecd20d71067c7fd4c9e832d4e22584318983cabc013dbf3f70ea95de346"},\\\\\\\\n    {file = "watchdog-3.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:c9d8c8ec7efb887333cf71e328e39cffbf771d8f8f95d308ea4125bf5f90ba64"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_aarch64.whl", hash = "sha256:0e06ab8858a76e1219e68c7573dfeba9dd1c0219476c5a44d5333b01d7e1743a"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_armv7l.whl", hash = "sha256:d00e6be486affb5781468457b21a6cbe848c33ef43f9ea4a73b4882e5f188a44"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_i686.whl", hash = "sha256:c07253088265c363d1ddf4b3cdb808d59a0468ecd017770ed716991620b8f77a"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64.whl", hash = "sha256:5113334cf8cf0ac8cd45e1f8309a603291b614191c9add34d33075727a967709"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64le.whl", hash = "sha256:51f90f73b4697bac9c9a78394c3acbbd331ccd3655c11be1a15ae6fe289a8c83"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_s390x.whl", hash = "sha256:ba07e92756c97e3aca0912b5cbc4e5ad802f4557212788e72a72a47ff376950d"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_x86_64.whl", hash = "sha256:d429c2430c93b7903914e4db9a966c7f2b068dd2ebdd2fa9b9ce094c7d459f33"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-win32.whl", hash = "sha256:3ed7c71a9dccfe838c2f0b6314ed0d9b22e77d268c67e015450a29036a81f60f"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-win_amd64.whl", hash = "sha256:4c9956d27be0bb08fc5f30d9d0179a855436e655f046d288e2bcc11adfae893c"},\\\\\\\\n    {file = "watchdog-3.0.0-py3-none-win_ia64.whl", hash = "sha256:5d9f3a10e02d7371cd929b5d8f11e87d4bad890212ed3901f9b4d68767bee759"},\\\\\\\\n    {file = "watchdog-3.0.0.tar.gz", hash = "sha256:4d98a320595da7a7c5a18fc48cb633c2e73cda78f93cac2ef42d42bf609a33f9"},\\\\\\\\n]\\\\\\\\n\\\\\\\\n[package.extras]\\\\\\\\nwatchmedo = ["PyYAML (>=3.10)"]\\\\\\\\n\\\\\\\\n[metadata]\\\\\\\\nlock-version = "2.0"\\\\\\\\npython-versions = ">=3.10.0,<3.11"\\\\\\\\ncontent-hash = "19326ad4cba6cf84c5b09afbd1b8f3eb811da4d2c1161a64d6d0e0f8e45f9c04"\\\\\\\\n\\\\\\\\n--- End of poetry.lock ---\\\\\\\\n\\\\\\\\n--- Start of .replit ---\\\\\\\\nentrypoint = "main.py"\\\\\\\\nrun = ["streamlit", "run", "app.py", "--server.headless", "true"]\\\\\\\\n\\\\\\\\nmodules = ["python-3.10:v18-20230807-322e88b"]\\\\\\\\n\\\\\\\\nhidden = [".pythonlibs"]\\\\\\\\n\\\\\\\\n[nix]\\\\\\\\nchannel = "stable-23_05"\\\\\\\\n\\\\\\\\n[deployment]\\\\\\\\nrun = ["streamlit", "run", "--server.address", "0.0.0.0", "--server.headless", "true", "--server.enableCORS=false", "--server.enableWebsocketCompression=false", "--server.runOnSave=false", "app.py"]\\\\\\\\nignorePorts = false\\\\\\\\ndeploymentTarget = "gce"\\\\\\\\n\\\\\\\\n[[ports]]\\\\\\\\nlocalPort = 8501\\\\\\\\nexternalPort = 80\\\\\\\\n\\\\\\\\n[[ports]]\\\\\\\\nlocalPort = 8502\\\\\\\\nexternalPort = 3000\\\\\\\\n\\\\\\\\n--- End of .replit ---\\\\\\\\n\\\\\\\\n--- Start of app.py ---\\\\\\\\n# app.py\\\\\\\\nimport streamlit as st\\\\\\\\n\\\\\\\\n# --- Streamlit Page Configuration ---\\\\\\\\nst.set_page_config(\\\\\\\\n    page_title="Omnivia Survey Platform",\\\\\\\\n    layout="wide",\\\\\\\\n    initial_sidebar_state="expanded",\\\\\\\\n    page_icon=":bar_chart:"\\\\\\\\n)\\\\\\\\n\\\\\\\\nfrom modules import personas, questions, results, analytics, utils, dashboard, price_sensitivity, live_polling\\\\\\\\nfrom PIL import Image\\\\\\\\nfrom streamlit_option_menu import option_menu\\\\\\\\nimport json\\\\\\\\nimport requests\\\\\\\\nfrom pymongo import MongoClient\\\\\\\\nimport logging\\\\\\\\n\\\\\\\\n# Configure logging\\\\\\\\nlogging.basicConfig(level=logging.DEBUG)\\\\\\\\n\\\\\\\\n# --- Load Brand Assets ---\\\\\\\\ndef load_brand_assets():\\\\\\\\n    logo_path = "logo.png"  # Replace with your logo path\\\\\\\\n    primary_color = "#FF6F61"\\\\\\\\n    try:\\\\\\\\n        logo = Image.open(logo_path)\\\\\\\\n        return logo, primary_color\\\\\\\\n    except FileNotFoundError:\\\\\\\\n        logging.error("Logo file not found.")\\\\\\\\n        return None, primary_color\\\\\\\\n\\\\\\\\nlogo_image, primary_color = load_brand_assets()\\\\\\\\n\\\\\\\\n# --- Main App Logic ---\\\\\\\\ndef main():\\\\\\\\n    with st.container():\\\\\\\\n        if logo_image:\\\\\\\\n            st.image(logo_image, use_column_width=True)\\\\\\\\n        st.title("Omnivia Survey Platform")\\\\\\\\n\\\\\\\\n        # --- Navigation ---\\\\\\\\n        selected = option_menu(\\\\\\\\n            menu_title=None,\\\\\\\\n            options=["Demand Meter", "Price Sensitivity", "Live Polling"],\\\\\\\\n            icons=["bar-chart", "graph-up-arrow", "chat-dots"],\\\\\\\\n            menu_icon="cast",\\\\\\\\n            default_index=0,\\\\\\\\n            styles={\\\\\\\\n                "container": {"padding": "5!important", "background-color": "#2A2A2A"},\\\\\\\\n                "icon": {"color": "white"},\\\\\\\\n                "nav-link": {"font-size": "16px", "text-align": "left", "margin": "0px", "--hover-color": "#D65A50"},\\\\\\\\n                "nav-link-selected": {"background-color": "#D65A50"},\\\\\\\\n            }\\\\\\\\n        )\\\\\\\\n\\\\\\\\n        # --- App Sections ---\\\\\\\\n        try:\\\\\\\\n            if selected == "Demand Meter":\\\\\\\\n                dashboard.run_dashboard()  # Call the module to run Demand Meter\\\\\\\\n            elif selected == "Price Sensitivity":\\\\\\\\n                price_sensitivity.run_price_sensitivity()  # Call the module to run Price Sensitivity\\\\\\\\n            elif selected == "Live Polling":\\\\\\\\n                live_polling.run_live_polling()  # Call the module to run Live Polling\\\\\\\\n        except Exception as e:\\\\\\\\n            st.error(f"Error running {selected}: {str(e)}")\\\\\\\\n            logging.error(f"Error running {selected}: {str(e)}")\\\\\\\\n            utils.log_error(selected, str(e))\\\\\\\\n\\\\\\\\nif __name__ == "__main__":\\\\\\\\n    main()\\\\\\\\n\\\\\\\\n--- End of app.py ---\\\\\\\\n\\\\\\\\n--- Start of loading_screen.css ---\\\\\\\\n/* loading_screen.css */\\\\\\\\nbody {\\\\\\\\n  background-color: #000;\\\\\\\\n  color: #0f0;\\\\\\\\n  font-family: \\\\\\\\\\\\\\\'Courier New\\\\\\\\\\\\\\\', Courier, monospace;\\\\\\\\n}\\\\\\\\n\\\\\\\\n.loading-text {\\\\\\\\n  font-size: 24px;\\\\\\\\n  text-align: center;\\\\\\\\n  padding-top: 20%;\\\\\\\\n}\\\\\\\\n\\\\\\\\n.loading-text::after {\\\\\\\\n  content: \\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\';\\\\\\\\n  display: inline-block;\\\\\\\\n  width: 1em;\\\\\\\\n  height: 1em;\\\\\\\\n  border-radius: 50%;\\\\\\\\n  background: #0f0;\\\\\\\\n  margin-left: 10px;\\\\\\\\n  animation: blink 1s infinite;\\\\\\\\n}\\\\\\\\n\\\\\\\\n@keyframes blink {\\\\\\\\n  0%, 50%, 100% {\\\\\\\\n    opacity: 1;\\\\\\\\n  }\\\\\\\\n  25%, 75% {\\\\\\\\n    opacity: 0;\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\n--- End of loading_screen.css ---\\\\\\\\n\\\\\\\\n--- Start of example.py ---\\\\\\\\nimport streamlit as st\\\\\\\\nimport pandas as pd\\\\\\\\nimport numpy as np\\\\\\\\nimport plotly.express as px\\\\\\\\n\\\\\\\\n# Set page configuration\\\\\\\\nst.set_page_config(\\\\\\\\n    page_title="Executive Report",\\\\\\\\n    layout="wide",\\\\\\\\n    initial_sidebar_state="expanded",\\\\\\\\n)\\\\\\\\n\\\\\\\\n# Navigation Tabs\\\\\\\\ntabs = [\\\\\\\\\\\\\\\'Overview\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Price & Performance\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Portfolio & Management\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Fees & Minimums\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Distributions\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'News & Reviews\\\\\\\\\\\\\\\']\\\\\\\\ntab = st.sidebar.radio("Navigation", tabs)\\\\\\\\n\\\\\\\\n# Dummy data\\\\\\\\ndef generate_dummy_data():\\\\\\\\n    dates = pd.date_range(start="2023-01-01", periods=100, freq="D")\\\\\\\\n    values = np.random.randn(100).cumsum()\\\\\\\\n    return pd.DataFrame({"Date": dates, "Value": values})\\\\\\\\n\\\\\\\\n# Header\\\\\\\\nst.title("Executive Report")\\\\\\\\nst.markdown("""\\\\\\\\nA comprehensive report highlighting key financial metrics, market trends, and potential risks for \\\\\\\\n**PSS World Medical, Inc. (PSSI)**.\\\\\\\\n""")\\\\\\\\n\\\\\\\\n# Main content based on selected tab\\\\\\\\nif tab == "Overview":\\\\\\\\n    st.header("Company Overview")\\\\\\\\n    st.markdown("""\\\\\\\\n    **PSS World Medical, Inc. (PSSI)**\\\\\\\\n\\\\\\\\n    - **Sector**: Healthcare\\\\\\\\n    - **Industry**: Medical Distribution\\\\\\\\n    - **Market Cap**: $2.3B\\\\\\\\n    """)\\\\\\\\n    st.image("https://via.placeholder.com/600x400", caption="Company Headquarters", use_column_width=True)\\\\\\\\n    st.subheader("Key Highlights")\\\\\\\\n    st.markdown("""\\\\\\\\n    - Strong market position\\\\\\\\n    - Consistent revenue growth\\\\\\\\n    - Expanding product lines\\\\\\\\n    """)\\\\\\\\n\\\\\\\\nelif tab == "Price & Performance":\\\\\\\\n    st.header("Price & Performance")\\\\\\\\n\\\\\\\\n    st.subheader("Current Prices")\\\\\\\\n    current_prices = {\\\\\\\\n        "Price as of 02/27/2018": "$254.07",\\\\\\\\n        "Change": "-$3.23 (-1.26%)",\\\\\\\\n        "SEC Yield": "1.67%",\\\\\\\\n        "52-week high 01/26/2018": "$265.42",\\\\\\\\n        "52-week low 04/13/2017": "$215.11",\\\\\\\\n        "Range": "$50.31 (23.39%)"\\\\\\\\n    }\\\\\\\\n    st.table(pd.DataFrame.from_dict(current_prices, orient=\\\\\\\\\\\\\\\'index\\\\\\\\\\\\\\\', columns=[\\\\\\\\\\\\\\\'Value\\\\\\\\\\\\\\\']).reset_index().rename(columns={"index": "Metric"}))\\\\\\\\n\\\\\\\\n    st.subheader("Historical Prices")\\\\\\\\n    historical_prices = pd.DataFrame({\\\\\\\\n        "Date": ["02/22/2018", "02/23/2018", "02/26/2018", "02/27/2018", "02/28/2018"],\\\\\\\\n        "Price": ["$250.26", "$254.29", "$257.30", "$254.07", "$251.27"]\\\\\\\\n    })\\\\\\\\n    st.table(historical_prices)\\\\\\\\n\\\\\\\\n    st.subheader("Performance")\\\\\\\\n    data = generate_dummy_data()\\\\\\\\n    fig = px.line(data, x="Date", y="Value", title="Performance Over Time", labels={"Date": "Date", "Value": "Value"})\\\\\\\\n    fig.update_layout(height=400)\\\\\\\\n    st.plotly_chart(fig)\\\\\\\\n\\\\\\\\n    st.subheader("Average Annual Returns")\\\\\\\\n    annual_returns = pd.DataFrame({\\\\\\\\n        "Metric": ["500 Index Fund Inv", "S&P 500 Index"],\\\\\\\\n        "1 Year": ["16.94%", "17.01%"],\\\\\\\\n        "3 Year": ["11.00%", "11.14%"],\\\\\\\\n        "5 Year": ["14.57%", "14.73%"],\\\\\\\\n        "10 Year": ["9.60%", "9.73%"],\\\\\\\\n        "Since Inception": ["11.12%", "-"]\\\\\\\\n    })\\\\\\\\n    st.table(annual_returns)\\\\\\\\n\\\\\\\\n    st.subheader("After-tax Returns")\\\\\\\\n    after_tax_returns = pd.DataFrame({\\\\\\\\n        "Metric": ["500 Index Fund Inv", "Returns after taxes on distributions", "Returns after taxes on distributions and sale of fund shares"],\\\\\\\\n        "1 Year": ["21.67%", "12.64%", "20.44%"],\\\\\\\\n        "3 Year": ["11.26%", "8.71%", "9.70%"],\\\\\\\\n        "5 Year": ["15.62%", "12.51%", "14.24%"],\\\\\\\\n        "10 Year": ["8.37%", "6.75%", "7.61%"],\\\\\\\\n        "Since Inception": ["11.11%", "-", "-"]\\\\\\\\n    })\\\\\\\\n    st.table(after_tax_returns)\\\\\\\\n\\\\\\\\nelif tab == "Portfolio & Management":\\\\\\\\n    st.header("Portfolio & Management")\\\\\\\\n    st.markdown("Details about the portfolio and management team go here.")\\\\\\\\n\\\\\\\\nelif tab == "Fees & Minimums":\\\\\\\\n    st.header("Fees & Minimums")\\\\\\\\n    st.markdown("Details about the fees and minimums go here.")\\\\\\\\n\\\\\\\\nelif tab == "Distributions":\\\\\\\\n    st.header("Distributions")\\\\\\\\n    st.markdown("Details about the distributions go here.")\\\\\\\\n\\\\\\\\nelif tab == "News & Reviews":\\\\\\\\n    st.header("News & Reviews")\\\\\\\\n    st.markdown("Details about the latest news and reviews go here.")\\\\\\\\n\\\\\\\\n# Custom CSS for styling\\\\\\\\nst.markdown("""\\\\\\\\n    <style>\\\\\\\\n    .report-container { max-width: 1200px; margin: 0 auto; }\\\\\\\\n    .header { background-color: #f0f2f6; padding: 20px; border-radius: 5px; margin-bottom: 20px; text-align: center; }\\\\\\\\n    .header h1 { font-size: 2.5em; margin-bottom: 0; }\\\\\\\\n    .header p { font-size: 1.2em; color: #666; }\\\\\\\\n    .main { background-color: #fff; padding: 20px; border-radius: 5px; margin-bottom: 20px; }\\\\\\\\n    .section-title { font-size: 1.8em; margin-bottom: 20px; border-bottom: 2px solid #e0e0e0; padding-bottom: 10px; }\\\\\\\\n    .metric-box { text-align: center; background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\\\\\\\\n    .metric-box h2 { font-size: 1.5em; margin: 0; }\\\\\\\\n    .metric-box p { font-size: 1.2em; color: #666; margin: 0; }\\\\\\\\n    .visual-card { background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\\\\\\\\n    </style>\\\\\\\\n""", unsafe_allow_html=True)\\\\\\\\n\\\\\\\\n--- End of example.py ---\\\\\\\\n\\\\\\\\n\\\\\\\\n--- Directory: modules ---\\\\\\\\n--- Start of modules/dashboard.py ---\\\\\\\\nimport streamlit as st\\\\\\\\nimport pandas as pd\\\\\\\\nimport plotly.express as px\\\\\\\\nimport plotly.graph_objs as go\\\\\\\\nfrom itertools import product\\\\\\\\nfrom modules import utils, narrative  # Ensure you have the utils and narrative modules defined\\\\\\\\nimport logging\\\\\\\\nfrom openai import OpenAI\\\\\\\\nimport os\\\\\\\\n\\\\\\\\n# Configure logging\\\\\\\\nlogging.basicConfig(level=logging.INFO)\\\\\\\\n\\\\\\\\n# Custom CSS for better visuals and modern look\\\\\\\\nst.markdown("""\\\\\\\\n    <style>\\\\\\\\n        body {\\\\\\\\n            font-family: \\\\\\\\\\\\\\\'Segoe UI\\\\\\\\\\\\\\\', Tahoma, Geneva, Verdana, sans-serif;\\\\\\\\n            background-color: #1E1E1E;\\\\\\\\n            color: #D4D4D4;\\\\\\\\n        }\\\\\\\\n        .report-title {\\\\\\\\n            font-size: 2.5rem;\\\\\\\\n            color: #FFC300;\\\\\\\\n            margin-top: 20px;\\\\\\\\n            margin-bottom: 20px;\\\\\\\\n        }\\\\\\\\n        .section-header {\\\\\\\\n            font-size: 1.8rem;\\\\\\\\n            color: #FFD700;\\\\\\\\n            margin-top: 20px;\\\\\\\\n            margin-bottom: 10px;\\\\\\\\n        }\\\\\\\\n        .key-insights {\\\\\\\\n            font-size: 1.2rem;\\\\\\\\n            color: #E0E0E0;\\\\\\\\n            background-color: #333333;\\\\\\\\n            padding: 20px;\\\\\\\\n            border-radius: 10px;\\\\\\\\n            margin-top: 20px;\\\\\\\\n        }\\\\\\\\n        .metric {\\\\\\\\n            font-size: 1.5rem;\\\\\\\\n            font-weight: bold;\\\\\\\\n            color: #FFD700;\\\\\\\\n            margin: 10px 0;\\\\\\\\n        }\\\\\\\\n        .sidebar .sidebar-content {\\\\\\\\n            background-color: #333333;\\\\\\\\n            padding: 20px;\\\\\\\\n            border-radius: 10px;\\\\\\\\n        }\\\\\\\\n        .sidebar .sidebar-content input, .sidebar .sidebar-content select {\\\\\\\\n            background-color: #444444;\\\\\\\\n            color: #D4D4D4;\\\\\\\\n            border: none;\\\\\\\\n            border-radius: 5px;\\\\\\\\n            padding: 10px;\\\\\\\\n        }\\\\\\\\n        .sidebar .sidebar-content button {\\\\\\\\n            background-color: #FFC300;\\\\\\\\n            color: #1E1E1E;\\\\\\\\n            border: none;\\\\\\\\n            border-radius: 5px;\\\\\\\\n            padding: 10px 20px;\\\\\\\\n            margin-top: 10px;\\\\\\\\n        }\\\\\\\\n    </style>\\\\\\\\n""", unsafe_allow_html=True)\\\\\\\\n\\\\\\\\n# Initialize OpenAI client\\\\\\\\nopenai_client = OpenAI()\\\\\\\\nopenai_client.api_key = os.getenv(\\\\\\\\\\\\\\\'OPENAI_API_KEY\\\\\\\\\\\\\\\')\\\\\\\\nif not openai_client.api_key:\\\\\\\\n    st.error("OpenAI API key is missing. Please set the OPENAI_API_KEY environment variable.")\\\\\\\\n\\\\\\\\n# Function to generate narrative summary using OpenAI GPT\\\\\\\\ndef generate_narrative_summary(df):\\\\\\\\n    prompt = f"Generate an executive summary for the following data:\\\\\\\\\\\\\\\\n{df.to_string(index=False)}"\\\\\\\\n\\\\\\\\n    try:\\\\\\\\n        response = openai_client.chat.completions.create(\\\\\\\\n            model="gpt-3.5-turbo",\\\\\\\\n            messages=[\\\\\\\\n                {"role": "system", "content": "You are a helpful assistant."},\\\\\\\\n                {"role": "user", "content": prompt}\\\\\\\\n            ],\\\\\\\\n            max_tokens=200\\\\\\\\n        )\\\\\\\\n\\\\\\\\n        # Check if the response has a \\\\\\\\\\\\\\\'choices\\\\\\\\\\\\\\\' field and if it\\\\\\\\\\\\\\\'s not empty\\\\\\\\n        if response.choices:\\\\\\\\n            summary = response.choices[0].message.content.strip()\\\\\\\\n            return summary\\\\\\\\n        else:\\\\\\\\n            st.warning("OpenAI response did not contain a summary. Please try again later.")\\\\\\\\n            return ""  # Return an empty string if there\\\\\\\\\\\\\\\'s no summary\\\\\\\\n\\\\\\\\n    except Exception as e:\\\\\\\\n        logging.error(f"Error generating narrative summary: {str(e)}")\\\\\\\\n        st.error(f"Error generating narrative summary. Please try again later.")\\\\\\\\n        return "" \\\\\\\\n\\\\\\\\n# Function to generate predictive analytics \\\\\\\\ndef generate_predictive_analytics(df):\\\\\\\\n    df[\\\\\\\\\\\\\\\'Predicted_Demand_Score\\\\\\\\\\\\\\\'] = df[\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\'] * 1.05  # Mock prediction logic\\\\\\\\n    return df[[\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Predicted_Demand_Score\\\\\\\\\\\\\\\']]\\\\\\\\n\\\\\\\\n# Function to personalize dashboard based on user preferences\\\\\\\\ndef personalized_insights(user_preferences):\\\\\\\\n    insights = f"Personalized insights based on preferences: {user_preferences}"\\\\\\\\n    return insights\\\\\\\\n\\\\\\\\n# Function to set up alerts and notifications\\\\\\\\ndef setup_alerts():\\\\\\\\n    st.sidebar.header("Alerts and Notifications")\\\\\\\\n    st.sidebar.text_input("Enter Alert Criteria", key="alert_criteria")\\\\\\\\n    if st.sidebar.button("Set Alert"):\\\\\\\\n        st.sidebar.success("Alert set successfully!")\\\\\\\\n\\\\\\\\n# Run the main dashboard application\\\\\\\\ndef run_dashboard():\\\\\\\\n    try:\\\\\\\\n        st.markdown("<h1 class=\\\\\\\\\\\\\\\'report-title\\\\\\\\\\\\\\\'>Executive Dashboard - AI-Powered Demand Insights</h1>", unsafe_allow_html=True)\\\\\\\\n\\\\\\\\n        st.sidebar.markdown("<div class=\\\\\\\\\\\\\\\'sidebar-content\\\\\\\\\\\\\\\'>", unsafe_allow_html=True)\\\\\\\\n        product_name = st.sidebar.text_input("Product Name:", placeholder="Enter the product name")\\\\\\\\n        product_features = st.sidebar.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\\\\\\\\n        tagline_options = st.sidebar.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\\\\\\\\n        price_options_str = st.sidebar.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\\\\\\\\n\\\\\\\\n        try:\\\\\\\\n            price_options = [float(x.strip()) for x in price_options_str.split(\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\')] if price_options_str else []\\\\\\\\n            price_error = False\\\\\\\\n        except ValueError:\\\\\\\\n            price_error = True\\\\\\\\n            price_options = []\\\\\\\\n            st.sidebar.warning("Invalid price options. Please enter comma-separated numbers.")\\\\\\\\n\\\\\\\\n        st.sidebar.markdown("<h3 class=\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\'>Simulation Configuration</h3>", unsafe_allow_html=True)\\\\\\\\n        num_bots = st.sidebar.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\\\\\\\\n        male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\\\\\\\\n        income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\\\\\\\\n        interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\\\\\\\n        interests_list = [i.strip() for i in interests.split(",")] if interests else []\\\\\\\\n\\\\\\\\n        if interests_list:\\\\\\\\n            st.sidebar.markdown("<h3 class=\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\'>Interests:</h3>", unsafe_allow_html=True)\\\\\\\\n            st.sidebar.markdown(" ".join([f\\\\\\\\\\\\\\\'<span style="background-color: #FFD700; color: #1E1E1E; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\\\\\\\\\\\\\\\' for interest in interests_list]), unsafe_allow_html=True)\\\\\\\\n\\\\\\\\n        # Initialize df outside the conditional block\\\\\\\\n        df = pd.DataFrame() \\\\\\\\n\\\\\\\\n        if st.sidebar.button("Calculate Demand") and not price_error:\\\\\\\\n            if not all([product_name, product_features, tagline_options, price_options]):\\\\\\\\n                st.warning("Please fill in all product details.")\\\\\\\\n            else:\\\\\\\\n                features = [x.strip() for x in product_features.split(\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\')]\\\\\\\\n                taglines = [x.strip() for x in tagline_options.split(\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\')]\\\\\\\\n                st.write(f"**Product Name:** {product_name}")\\\\\\\\n                st.write(f"**Features:** {features}")\\\\\\\\n                st.write(f"**Taglines:** {taglines}")\\\\\\\\n                st.write(f"**Prices:** {price_options}")\\\\\\\\n                st.write(f"**Number of Bots:** {num_bots}")\\\\\\\\n                combinations = list(product(features, taglines, price_options))\\\\\\\\n                st.write(f"**Combinations:** {combinations}")\\\\\\\\n\\\\\\\\n                progress_placeholder = st.empty()\\\\\\\\n                try:\\\\\\\\n                    df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\\\\\\\\n                except Exception as e:\\\\\\\\n                    st.error(f"Error during simulation: {str(e)}")\\\\\\\\n                    logging.error(f"Error during simulation: {str(e)}")\\\\\\\\n                    utils.log_error("Demand Meter", str(e))\\\\\\\\n\\\\\\\\n                if not df.empty:\\\\\\\\n                    required_columns = [\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\']\\\\\\\\n                    if not all(col in df.columns for col in required_columns):\\\\\\\\n                        st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\\\\\\\\n                        return\\\\\\\\n\\\\\\\\n                    st.markdown("<h2 class=\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\'>Executive Summary</h2>", unsafe_allow_html=True)\\\\\\\\n                    summary = generate_narrative_summary(df)\\\\\\\\n                    st.markdown(f"<div class=\\\\\\\\\\\\\\\'key-insights\\\\\\\\\\\\\\\'>{summary}</div>", unsafe_allow_html=True)\\\\\\\\n\\\\\\\\n                    st.markdown("<h2 class=\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\'>Detailed Analysis</h2>", unsafe_allow_html=True)\\\\\\\\n                    fig = px.scatter(df, x=\\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\', y=\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\', color=\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\', hover_data=[\\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\'])\\\\\\\\n                    st.plotly_chart(fig, use_container_width=True)\\\\\\\\n\\\\\\\\n                    heatmap_data = df.pivot_table(index="Feature", columns="Tagline", values="Demand Score")\\\\\\\\n                    fig = go.Figure(data=go.Heatmap(z=heatmap_data.values, x=heatmap_data.columns, y=heatmap_data.index))\\\\\\\\n                    st.plotly_chart(fig, use_container_width=True)\\\\\\\\n\\\\\\\\n                    # User Feedback\\\\\\\\n                    st.markdown("<h2 class=\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\'>User Feedback</h2>", unsafe_allow_html=True)\\\\\\\\n                    feedback = st.text_area("Enter your feedback here:")\\\\\\\\n                    if st.button("Submit Feedback"):\\\\\\\\n                        utils.log_feedback(product_name, feedback)\\\\\\\\n                        st.success("Thank you for your feedback!")\\\\\\\\n\\\\\\\\n        # Predictive Analytics (Now uses df even if not calculated)\\\\\\\\n        st.markdown("<h2 class=\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\'>Predictive Analytics</h2>", unsafe_allow_html=True)\\\\\\\\n        if not df.empty:  # Check if df is populated\\\\\\\\n            predictions = generate_predictive_analytics(df)\\\\\\\\n            st.write(predictions)\\\\\\\\n        else:\\\\\\\\n            st.info("Please run a simulation to view predictive analytics.")\\\\\\\\n\\\\\\\\n        # Personalized Insights (Now uses df even if not calculated)\\\\\\\\n        st.markdown("<h2 class=\\\\\\\\\\\\\\\'section-header\\\\\\\\\\\\\\\'>Personalized Insights</h2>", unsafe_allow_html=True)\\\\\\\\n        user_preferences = st.text_input("Enter your preferences (comma-separated):", placeholder="Preference1, Preference2")\\\\\\\\n        if user_preferences and not df.empty:  # Check for both preferences and data\\\\\\\\n            insights = personalized_insights(user_preferences)\\\\\\\\n            st.write(insights)\\\\\\\\n        else:\\\\\\\\n            st.info("Please run a simulation to view personalized insights.")\\\\\\\\n\\\\\\\\n        # Set up Alerts\\\\\\\\n        setup_alerts()\\\\\\\\n\\\\\\\\n    except Exception as e:\\\\\\\\n        logging.error(f"Error in run_dashboard: {str(e)}")\\\\\\\\n        st.error(f"Error in run_dashboard: {str(e)}")\\\\\\\\n\\\\\\\\nif __name__ == "__main__":\\\\\\\\n    run_dashboard()\\\\\\\\n--- End of modules/dashboard.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/visualizations.py ---\\\\\\\\nimport streamlit as st\\\\\\\\nimport seaborn as sns\\\\\\\\nimport matplotlib.pyplot as plt\\\\\\\\n\\\\\\\\ndef plot_demand_distribution(df):\\\\\\\\n    st.write("### Demand Score Distribution")\\\\\\\\n    fig, ax = plt.subplots(figsize=(10, 6))\\\\\\\\n    sns.histplot(df[\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\'], bins=20, kde=True, ax=ax)\\\\\\\\n    st.pyplot(fig)\\\\\\\\n\\\\\\\\ndef plot_demand_heatmap(df):\\\\\\\\n    st.write("### Demand Score Heatmap")\\\\\\\\n    try:\\\\\\\\n        heatmap_data = df.pivot_table(values=\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\', index=\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\', columns=\\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\', aggfunc=\\\\\\\\\\\\\\\'mean\\\\\\\\\\\\\\\')\\\\\\\\n        fig, ax = plt.subplots(figsize=(12, 8))\\\\\\\\n        sns.heatmap(heatmap_data, annot=True, cmap="YlGnBu", ax=ax)\\\\\\\\n        st.pyplot(fig)\\\\\\\\n    except Exception as e:\\\\\\\\n        st.error(f"Error creating heatmap: {str(e)}")\\\\\\\\n\\\\\\\\n--- End of modules/visualizations.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/narrative.py ---\\\\\\\\nimport streamlit as st\\\\\\\\n\\\\\\\\ndef generate_summary(df):\\\\\\\\n    st.markdown("<div class=\\\\\\\\\\\\\\\'key-insights\\\\\\\\\\\\\\\'>", unsafe_allow_html=True)\\\\\\\\n    best_combination = df.loc[df[\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\'].idxmax()]\\\\\\\\n    st.markdown(f"<p class=\\\\\\\\\\\\\\\'metric\\\\\\\\\\\\\\\'>Best Combination: Feature - {best_combination[\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\']}, Tagline - {best_combination[\\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\']}, Price - ${best_combination[\\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\']}</p>", unsafe_allow_html=True)\\\\\\\\n    st.markdown(f"<p class=\\\\\\\\\\\\\\\'metric\\\\\\\\\\\\\\\'>Highest Demand Score: {best_combination[\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\']:.1f}</p>", unsafe_allow_html=True)\\\\\\\\n\\\\\\\\n    if df[\\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\'].min() < 70:\\\\\\\\n        st.markdown("<p>Suggestions for Improvement:</p>", unsafe_allow_html=True)\\\\\\\\n        st.markdown("<ul><li>Consider revising features, taglines, or prices to boost demand.</li></ul>", unsafe_allow_html=True)\\\\\\\\n    st.markdown("</div>", unsafe_allow_html=True)\\\\\\\\n\\\\\\\\n--- End of modules/narrative.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/live_polling.py ---\\\\\\\\nimport streamlit as st\\\\\\\\nimport pandas as pd\\\\\\\\nimport random\\\\\\\\nimport concurrent.futures\\\\\\\\nimport math\\\\\\\\nfrom modules import utils, results, analytics\\\\\\\\nimport time  # Ensure the time module is imported\\\\\\\\n\\\\\\\\ndef run_live_polling():\\\\\\\\n    """Runs the Live Polling section of the app."""\\\\\\\\n    st.subheader("Live Polling")\\\\\\\\n    st.write("**Real-time Results and Interactive Visualizations**")\\\\\\\\n\\\\\\\\n    # --- Live Polling Input ---\\\\\\\\n    st.sidebar.subheader("Create Survey")\\\\\\\\n    survey_question = st.sidebar.text_input("Enter your survey question:", "")\\\\\\\\n    options = {f"option_{chr(65+i)}": st.sidebar.text_input(f"Enter option {chr(65+i)}:", "") for i in range(4)}\\\\\\\\n    followups = [st.sidebar.text_input(f"Enter follow-up question {i+1}:", "") for i in range(2)]\\\\\\\\n\\\\\\\\n    # --- Live Polling Logic and Display ---\\\\\\\\n    votes = {key: 0 for key in options.keys()}\\\\\\\\n    if st.button("Start Poll"):\\\\\\\\n        if not survey_question or not any(options.values()):\\\\\\\\n            st.warning("Please enter a question and options.")\\\\\\\\n        else:\\\\\\\\n            selected_option = st.selectbox("Choose your option:", options.values())\\\\\\\\n            if st.button("Vote"):\\\\\\\\n                votes[selected_option] += 1\\\\\\\\n\\\\\\\\n            st.write(f"**Poll Results:**")\\\\\\\\n            for option, count in votes.items():\\\\\\\\n                st.write(f"- {option}: {count} votes")\\\\\\\\n\\\\\\\\n            # Simple timer (You\\\\\\\\\\\\\\\'ll likely replace this with real-time updates)\\\\\\\\n            start_time = time.time()\\\\\\\\n            while time.time() - start_time < 10: # 10 seconds for example\\\\\\\\n                st.write(f"Time remaining: {10 - int(time.time() - start_time)} seconds")\\\\\\\\n                st.experimental_rerun()\\\\\\\\n\\\\\\\\n    # --- Live Polling Input (Demographics) ---\\\\\\\\n    st.sidebar.subheader("Specify Demographics")\\\\\\\\n    male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\\\\\\\\n    female_percentage = 100 - male_percentage\\\\\\\\n    income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\\\\\\\\n\\\\\\\\n    # Interest badges\\\\\\\\n    interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\\\\\\\n    interests_list = interests.split(",") if interests else []\\\\\\\\n\\\\\\\\n    if interests_list:\\\\\\\\n        st.sidebar.markdown("### Interests:")\\\\\\\\n        for interest in interests_list:\\\\\\\\n            st.sidebar.markdown(\\\\\\\\n                f"""<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest.strip()}</span>""",\\\\\\\\n                unsafe_allow_html=True\\\\\\\\n            )\\\\\\\\n\\\\\\\\n    num_bots = st.sidebar.number_input("Enter number of bots:", min_value=1, max_value=1000, value=100)\\\\\\\\n\\\\\\\\n    # Start button\\\\\\\\n    start_button = st.sidebar.button("Start Survey Simulation")\\\\\\\\n\\\\\\\\n    # Simulation settings\\\\\\\\n    MAX_CONCURRENT_THREADS = 25\\\\\\\\n    batch_size = 25\\\\\\\\n    num_batches = math.ceil(num_bots / batch_size)\\\\\\\\n\\\\\\\\n    # Survey simulation logic\\\\\\\\n    if start_button:\\\\\\\\n        bot_data = utils.generate_survey_data(int(num_bots), male_percentage, income_range, interests_list)\\\\\\\\n\\\\\\\\n        # Sentiment Analysis\\\\\\\\n        sentiment_results = analytics.analyze_sentiment([data[\\\\\\\\\\\\\\\'persona\\\\\\\\\\\\\\\'] for data in bot_data.values()])\\\\\\\\n        st.write("### Sentiment Analysis")\\\\\\\\n        sentiment_df = pd.DataFrame(sentiment_results)\\\\\\\\n        st.dataframe(sentiment_df)\\\\\\\\n\\\\\\\\n        # Display Results\\\\\\\\n        results.display_survey_results(bot_data)\\\\\\\\n--- End of modules/live_polling.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/price_sensitivity.py ---\\\\\\\\nimport streamlit as st\\\\\\\\nimport pandas as pd\\\\\\\\nimport json\\\\\\\\n\\\\\\\\ndef run_price_sensitivity():\\\\\\\\n    """Runs the Price Sensitivity section of the app."""\\\\\\\\n    st.subheader("Price Sensitivity")\\\\\\\\n    st.write("**Analyze the impact of different prices on demand**")\\\\\\\\n\\\\\\\\n    # --- Price Sensitivity Analysis ---\\\\\\\\n    price_points_str = st.text_input("Enter Price Points (comma-separated):")\\\\\\\\n\\\\\\\\n    # Validate and parse price points\\\\\\\\n    try:\\\\\\\\n        price_points = [float(x.strip()) for x in price_points_str.split(\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\')] if price_points_str else []\\\\\\\\n        price_error = False\\\\\\\\n    except ValueError:\\\\\\\\n        price_error = True\\\\\\\\n        price_points = []\\\\\\\\n\\\\\\\\n    if price_error:\\\\\\\\n        st.warning("Invalid price points. Please enter comma-separated numbers.")\\\\\\\\n\\\\\\\\n    if st.button("Run Price Sensitivity Analysis") and not price_error:\\\\\\\\n        if not price_points:\\\\\\\\n            st.warning("Please enter price points.")\\\\\\\\n        else:\\\\\\\\n            st.write(f"**Price Points:** {price_points}")\\\\\\\\n\\\\\\\\n            # Simulate retrieving responses from a database\\\\\\\\n            responses = []  # Replace with actual database call\\\\\\\\n            if responses:\\\\\\\\n                # Placeholder for actual price sensitivity analysis\\\\\\\\n                st.write("**Analysis Results:**")\\\\\\\\n                for point in price_points:\\\\\\\\n                    st.write(f"At ${point}, the demand is...")  # Placeholder for actual logic\\\\\\\\n\\\\\\\\n                # Example of Van Westendorp Price Sensitivity Analysis\\\\\\\\n                st.write("**Van Westendorp Price Sensitivity Analysis:**")\\\\\\\\n                optimal_price_range = (min(price_points), max(price_points))  # Placeholder for actual analysis\\\\\\\\n                st.write(f"Optimal Price Range: {optimal_price_range}")\\\\\\\\n\\\\\\\\n                # Example of Gabor-Granger Price Sensitivity Analysis\\\\\\\\n                st.write("**Gabor-Granger Price Sensitivity Analysis:**")\\\\\\\\n                demand_at_price = {point: random.randint(50, 100) for point in price_points}  # Placeholder\\\\\\\\n                st.write(f"Demand at Different Price Points: {demand_at_price}")\\\\\\\\n\\\\\\\\n                # Chart for Gabor-Granger Results\\\\\\\\n                option = {\\\\\\\\n                    "title": {"text": "Gabor-Granger Price Sensitivity", "left": "center"},\\\\\\\\n                    "xAxis": {"type": "category", "data": price_points},\\\\\\\\n                    "yAxis": {"type": "value"},\\\\\\\\n                    "series": [\\\\\\\\n                        {"data": list(demand_at_price.values()), "type": "bar", "showBackground": True, "backgroundStyle": {"color": \\\\\\\\\\\\\\\'rgba(180, 180, 180, 0.2)\\\\\\\\\\\\\\\'}}\\\\\\\\n                    ]\\\\\\\\n                }\\\\\\\\n                st.echarts(options=json.dumps(option), height="400px")\\\\\\\\n\\\\\\\\n--- End of modules/price_sensitivity.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/old.py ---\\\\\\\\nimport streamlit as st\\\\\\\\nimport pandas as pd\\\\\\\\nfrom itertools import product\\\\\\\\nfrom modules import utils, visualizations, narrative\\\\\\\\nfrom autogen import AssistantAgent, UserProxyAgent\\\\\\\\n\\\\\\\\ndef run_dashboard():\\\\\\\\n    st.title("Executive Dashboard - AI-Powered Demand Insights")\\\\\\\\n\\\\\\\\n    product_name = st.text_input("Product Name:", placeholder="Enter the product name")\\\\\\\\n    product_features = st.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\\\\\\\\n    tagline_options = st.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\\\\\\\\n    price_options_str = st.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\\\\\\\\n\\\\\\\\n    try:\\\\\\\\n        price_options = [float(x.strip()) for x in price_options_str.split(\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\')] if price_options_str else []\\\\\\\\n        price_error = False\\\\\\\\n    except ValueError:\\\\\\\\n        price_error = True\\\\\\\\n        price_options = []\\\\\\\\n        st.warning("Invalid price options. Please enter comma-separated numbers.")\\\\\\\\n\\\\\\\\n    st.header("Simulation Configuration")\\\\\\\\n    num_bots = st.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\\\\\\\\n    male_percentage = st.slider("Male Percentage", 0, 100, 50)\\\\\\\\n    income_range = st.slider("Income Range (in thousands)", 0, 500, (50, 150))\\\\\\\\n    interests = st.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\\\\\\\n    interests_list = [i.strip() for i in interests.split(",")] if interests else []\\\\\\\\n\\\\\\\\n    if interests_list:\\\\\\\\n        st.markdown("### Interests:")\\\\\\\\n        st.markdown(" ".join([f\\\\\\\\\\\\\\\'<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\\\\\\\\\\\\\\\' for interest in interests_list]), unsafe_allow_html=True)\\\\\\\\n\\\\\\\\n    if st.button("Calculate Demand") and not price_error:\\\\\\\\n        if not all([product_name, product_features, tagline_options, price_options]):\\\\\\\\n            st.warning("Please fill in all product details.")\\\\\\\\n        else:\\\\\\\\n            features = [x.strip() for x in product_features.split(\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\')]\\\\\\\\n            taglines = [x.strip() for x in tagline_options.split(\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\')]\\\\\\\\n            st.write(f"**Product Name:** {product_name}")\\\\\\\\n            st.write(f"**Features:** {features}")\\\\\\\\n            st.write(f"**Taglines:** {taglines}")\\\\\\\\n            st.write(f"**Prices:** {price_options}")\\\\\\\\n            st.write(f"**Number of Bots:** {num_bots}")\\\\\\\\n            combinations = list(product(features, taglines, price_options))\\\\\\\\n            st.write(f"**Combinations:** {combinations}")\\\\\\\\n\\\\\\\\n            progress_placeholder = st.empty()\\\\\\\\n            try:\\\\\\\\n                df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\\\\\\\\n            except Exception as e:\\\\\\\\n                st.error(f"Error during simulation: {str(e)}")\\\\\\\\n                utils.log_error("Demand Meter", str(e))\\\\\\\\n                return\\\\\\\\n\\\\\\\\n            if df.empty:\\\\\\\\n                st.error("No valid data was generated. Please check your inputs and try again.")\\\\\\\\n                return\\\\\\\\n\\\\\\\\n            required_columns = [\\\\\\\\\\\\\\\'Feature\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Tagline\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Price\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'Demand Score\\\\\\\\\\\\\\\']\\\\\\\\n            if not all(col in df.columns for col in required_columns):\\\\\\\\n                st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\\\\\\\\n                return\\\\\\\\n\\\\\\\\n            st.header("Executive Summary")\\\\\\\\n            narrative.generate_summary(df)\\\\\\\\n\\\\\\\\n            st.header("Detailed Analysis")\\\\\\\\n            visualizations.plot_demand_distribution(df)\\\\\\\\n            visualizations.plot_demand_heatmap(df)\\\\\\\\n\\\\\\\\n            st.header("User Feedback")\\\\\\\\n            feedback = st.text_area("Enter your feedback here:")\\\\\\\\n            if st.button("Submit Feedback"):\\\\\\\\n                utils.log_feedback(product_name, feedback)\\\\\\\\n                st.success("Thank you for your feedback!")\\\\\\\\n\\\\\\\\n            st.header("Automated Insights")\\\\\\\\n            config_list = [{"model": "gpt-3.5-turbo"}]\\\\\\\\n            assistant = AssistantAgent(name="Assistant", llm_config={"config_list": config_list})\\\\\\\\n            user_proxy = UserProxyAgent(name="User_proxy", code_execution_config={"work_dir": "coding"})\\\\\\\\n            try:\\\\\\\\n                insights = utils.generate_insights(assistant, user_proxy, df.to_dict(orient=\\\\\\\\\\\\\\\'records\\\\\\\\\\\\\\\'))\\\\\\\\n                st.write(insights)\\\\\\\\n            except Exception as e:\\\\\\\\n                st.error(f"Failed to generate insights: {e}")\\\\\\\\n\\\\\\\\nif __name__ == "__main__":\\\\\\\\n    run_dashboard()\\\\\\\\n\\\\\\\\n--- End of modules/old.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/analytics.py ---\\\\\\\\nimport pandas as pd\\\\\\\\nimport random\\\\\\\\n\\\\\\\\ndef van_westendorp_analysis(price_points, responses):\\\\\\\\n    """Performs Van Westendorp price sensitivity analysis."""\\\\\\\\n    too_expensive = []\\\\\\\\n    too_cheap = []\\\\\\\\n    just_right = []\\\\\\\\n    too_expensive_data = []\\\\\\\\n    too_cheap_data = []\\\\\\\\n    just_right_data = []\\\\\\\\n    for response in responses:\\\\\\\\n        for i, price in enumerate(price_points):\\\\\\\\n            if response == "Too expensive":\\\\\\\\n                too_expensive_data.append(price)\\\\\\\\n                too_expensive.append(i)\\\\\\\\n            elif response == "Too cheap":\\\\\\\\n                too_cheap_data.append(price)\\\\\\\\n                too_cheap.append(i)\\\\\\\\n            elif response == "Just right":\\\\\\\\n                just_right_data.append(price)\\\\\\\\n                just_right.append(i)\\\\\\\\n\\\\\\\\n    # Calculate Optimal Price Range\\\\\\\\n    too_expensive_avg = sum(too_expensive_data) / len(too_expensive_data) if too_expensive_data else 0\\\\\\\\n    too_cheap_avg = sum(too_cheap_data) / len(too_cheap_data) if too_cheap_data else 0\\\\\\\\n    just_right_avg = sum(just_right_data) / len(just_right_data) if just_right_data else 0\\\\\\\\n\\\\\\\\n    optimal_price_range = (too_cheap_avg, too_expensive_avg)\\\\\\\\n    return optimal_price_range, too_expensive, too_cheap, just_right\\\\\\\\n\\\\\\\\ndef gabor_granger_analysis(price_points, responses):\\\\\\\\n    """Performs Gabor-Granger price sensitivity analysis."""\\\\\\\\n    demand_at_price = {}\\\\\\\\n    for i, price in enumerate(price_points):\\\\\\\\n        demand_at_price[price] = responses.count(i)\\\\\\\\n    return demand_at_price\\\\\\\\n\\\\\\\\ndef analyze_sentiment(responses):\\\\\\\\n    """Performs sentiment analysis on survey responses."""\\\\\\\\n    sentiments = []\\\\\\\\n    for response in responses:\\\\\\\\n        if isinstance(response, str):\\\\\\\\n            prompt = f"""Analyze the sentiment of the following text:\\\\\\\\n            "{response}"\\\\\\\\n            Provide the sentiment as "positive", "negative", or "neutral".\\\\\\\\n            """\\\\\\\\n            sentiment = llm(prompt)\\\\\\\\n            sentiments.append({"Response": response, "Sentiment": sentiment})\\\\\\\\n    return sentiments\\\\\\\\n--- End of modules/analytics.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/__init__.py ---\\\\\\\\n\\\\\\\\n--- End of modules/__init__.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/results.py ---\\\\\\\\nimport streamlit as st\\\\\\\\nimport pandas as pd\\\\\\\\nimport random\\\\\\\\n\\\\\\\\ndef display_survey_results(bot_data):\\\\\\\\n    """Displays the survey results in a structured format."""\\\\\\\\n    df = pd.DataFrame(bot_data)\\\\\\\\n    response_tally = df[\\\\\\\\\\\\\\\'response\\\\\\\\\\\\\\\'].value_counts()\\\\\\\\n    st.write("### Survey Results")\\\\\\\\n    st.bar_chart(response_tally)\\\\\\\\n\\\\\\\\n    # Key Insights\\\\\\\\n    st.write("### Key Insights")\\\\\\\\n    most_popular = response_tally.idxmax()\\\\\\\\n    st.write(f"**Most popular option**: {most_popular} ({options[f\\\\\\\\\\\\\\\'option_{most_popular.lower()}\\\\\\\\\\\\\\\']})")\\\\\\\\n    st.write(f"**Average score for \\\\\\\\\\\\\\\'{followups[0]}\\\\\\\\\\\\\\\'**: {df[\\\\\\\\\\\\\\\'followups\\\\\\\\\\\\\\\'].apply(lambda x: x[0]).mean():.2f}/10")\\\\\\\\n    st.write(f"**Most common response to \\\\\\\\\\\\\\\'{followups[1]}\\\\\\\\\\\\\\\'**: {df[\\\\\\\\\\\\\\\'followups\\\\\\\\\\\\\\\'].apply(lambda x: x[1]).mode()[0]}")\\\\\\\\n\\\\\\\\n    # Sample Personas\\\\\\\\n    st.write("### Sample Personas")\\\\\\\\n    for i, (bot, data) in enumerate(random.sample(list(bot_data.items()), 5)):\\\\\\\\n        with st.expander(f"Persona {i+1}"):\\\\\\\\n            st.write(data[\\\\\\\\\\\\\\\'persona\\\\\\\\\\\\\\\'])\\\\\\\\n            st.write(f"Response: {data[\\\\\\\\\\\\\\\'response\\\\\\\\\\\\\\\']}")\\\\\\\\n--- End of modules/results.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/personas.py ---\\\\\\\\nimport os\\\\\\\\nimport random\\\\\\\\nfrom langchain_community.llms import OpenAI\\\\\\\\n\\\\\\\\n# --- OpenAI API ---\\\\\\\\nllm = OpenAI(temperature=0.7)\\\\\\\\n\\\\\\\\ndef generate_persona(income_range, interests):\\\\\\\\n    """Generates a persona based on income and a list of interests."""\\\\\\\\n    prompt = f"""Create a persona with the following elements:\\\\\\\\n    1. Identity: Name, occupation, background\\\\\\\\n    2. Characteristics: Personality traits, communication style, beliefs, values\\\\\\\\n    3. Knowledge and expertise: Specific areas of knowledge or expertise\\\\\\\\n    4. Experiences: Relevant past experiences, achievements, or challenges\\\\\\\\n    5. Motivations: Goals, desires, or driving forces\\\\\\\\n    6. Emotional and relational aspects: Emotional state, level of empathy, approach to relationships\\\\\\\\n    7. Context: Specific setting or situation\\\\\\\\n\\\\\\\\n    The persona should have an income between ${income_range[0]}k and ${income_range[1]}k. \\\\\\\\n\\\\\\\\n    {random.choice([\\\\\\\\\\\\\\\'They like \\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'They might like \\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\'They dont really care for \\\\\\\\\\\\\\\'])} {random.sample(interests, random.randint(0, len(interests)))}\\\\\\\\n\\\\\\\\n    Provide the information in a structured format.\\\\\\\\n    """\\\\\\\\n\\\\\\\\n    response = llm(prompt)\\\\\\\\n    return response.strip()\\\\\\\\n--- End of modules/personas.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/questions.py ---\\\\\\\\nimport os\\\\\\\\nimport streamlit as st\\\\\\\\nfrom pymongo import MongoClient\\\\\\\\n\\\\\\\\n# --- MongoDB Connection ---\\\\\\\\nclient = MongoClient(os.environ["MONGODB_URI"])\\\\\\\\ndb = client.get_database("Omnivia")\\\\\\\\nresponses_collection = db.get_collection("responses")\\\\\\\\n\\\\\\\\ndef create_survey_question():\\\\\\\\n    """Creates a survey question section with question type selection and conditional logic."""\\\\\\\\n    st.subheader("Create Survey Question")\\\\\\\\n    question_type = st.selectbox("Select Question Type", ["Multiple Choice", "Text", "Rating Scale", "Dropdown"])\\\\\\\\n    question_text = st.text_input("Enter Question Text:")\\\\\\\\n\\\\\\\\n    options = []\\\\\\\\n    if question_type in ["Multiple Choice", "Dropdown"]:\\\\\\\\n        num_options = st.number_input("Number of Options", min_value=2, max_value=10, value=4)\\\\\\\\n        for i in range(int(num_options)):\\\\\\\\n            options.append(st.text_input(f"Option {i+1}:"))\\\\\\\\n\\\\\\\\n    # Conditional Logic (Dynamically Show/Hide Questions)\\\\\\\\n    condition_enabled = st.checkbox("Enable Conditional Logic")\\\\\\\\n    if condition_enabled:\\\\\\\\n        target_question = st.selectbox("Target Question", options, index=0)\\\\\\\\n        condition_value = st.text_input("Condition Value (e.g., Option A)")\\\\\\\\n        st.write(f"**Conditional Logic:**  If the answer to the previous question is \\\\\\\\\\\\\\\'{condition_value}\\\\\\\\\\\\\\\', then the following question will be shown:")\\\\\\\\n        # ... (Implement logic to show/hide questions dynamically) ...\\\\\\\\n\\\\\\\\n    # Store the created question in the database\\\\\\\\n    if st.button("Add Question"):\\\\\\\\n        question_data = {\\\\\\\\n            "type": question_type,\\\\\\\\n            "text": question_text,\\\\\\\\n            "options": options if options else None,\\\\\\\\n            "condition": {\\\\\\\\n                "enabled": condition_enabled,\\\\\\\\n                "target_question": target_question if condition_enabled else None,\\\\\\\\n                "value": condition_value if condition_enabled else None\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n        responses_collection.insert_one(question_data)  # Insert the question to the MongoDB collection\\\\\\\\n        st.success("Question added successfully.")\\\\\\\\n--- End of modules/questions.py ---\\\\\\\\n\\\\\\\\n--- Start of modules/utils.py ---\\\\\\\\nimport random\\\\\\\\nimport pandas as pd\\\\\\\\nimport logging\\\\\\\\nimport autogen\\\\\\\\n\\\\\\\\n# Setup logging\\\\\\\\nlogging.basicConfig(level=logging.INFO, format=\\\\\\\\\\\\\\\'%(asctime)s %(levelname)s:%(message)s\\\\\\\\\\\\\\\')\\\\\\\\nlogger = logging.getLogger(__name__)\\\\\\\\n\\\\\\\\nfile_handler = logging.FileHandler(\\\\\\\\\\\\\\\'app_debug.log\\\\\\\\\\\\\\\')\\\\\\\\nfile_handler.setLevel(logging.DEBUG)\\\\\\\\nfile_handler.setFormatter(logging.Formatter(\\\\\\\\\\\\\\\'%(asctime)s %(levelname)s:%(message)s\\\\\\\\\\\\\\\'))\\\\\\\\n\\\\\\\\nlogger.addHandler(file_handler)\\\\\\\\n\\\\\\\\ndef generate_survey_data(num_bots, male_percentage, income_range, interests_list):\\\\\\\\n    try:\\\\\\\\n        data = [{\\\\\\\\\\\\\\\'gender\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\'male\\\\\\\\\\\\\\\' if random.random() < male_percentage / 100 else \\\\\\\\\\\\\\\'female\\\\\\\\\\\\\\\',\\\\\\\\n                 \\\\\\\\\\\\\\\'income\\\\\\\\\\\\\\\': random.randint(income_range[0], income_range[1]) * 1000,\\\\\\\\n                 \\\\\\\\\\\\\\\'interests\\\\\\\\\\\\\\\': random.sample(interests_list, k=min(len(interests_list), 3))}\\\\\\\\n                for _ in range(num_bots)]\\\\\\\\n        logger.info(f"Generated survey data: {data[:5]}...")  # Log a sample of generated data\\\\\\\\n        return data\\\\\\\\n    except Exception as e:\\\\\\\\n        logger.error(f"Error generating survey data: {str(e)}")\\\\\\\\n        raise\\\\\\\\n\\\\\\\\ndef simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index):\\\\\\\\n    try:\\\\\\\\n        logger.info(f"Starting simulation for feature: {feature}, tagline: {tagline}, price: {price}")\\\\\\\\n        bot_data = generate_survey_data(num_bots, male_percentage, income_range, interests_list)\\\\\\\\n        demand_score = sum(random.randint(60, 90) for _ in bot_data) / len(bot_data)\\\\\\\\n        response_data = {\\\\\\\\n            "Feature": feature,\\\\\\\\n            "Tagline": tagline,\\\\\\\\n            "Price": float(price),\\\\\\\\n            "Demand Score": demand_score\\\\\\\\n        }\\\\\\\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation.log"})\\\\\\\\n        autogen.runtime_logging.log_event(name="demand_simulation", event=response_data, source="demand_meter")\\\\\\\\n        autogen.runtime_logging.stop()\\\\\\\\n        progress.progress((current_index + 1) / total_combinations)\\\\\\\\n        logger.info(f"Simulation successful for feature: {feature}, tagline: {tagline}, price: {price}")\\\\\\\\n        return response_data\\\\\\\\n    except Exception as e:\\\\\\\\n        error_data = {"Feature": feature, "Tagline": tagline, "Price": price, "Error": str(e)}\\\\\\\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation_errors.log"})\\\\\\\\n        autogen.runtime_logging.log_event(name="demand_simulation_error", event=error_data, source="demand_meter")\\\\\\\\n        autogen.runtime_logging.stop()\\\\\\\\n        logger.error(f"Error in simulate_demand for feature: {feature}, tagline: {tagline}, price: {price} - {str(e)}")\\\\\\\\n        return None\\\\\\\\n\\\\\\\\ndef process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress):\\\\\\\\n    results = []\\\\\\\\n    total_combinations = len(combinations)\\\\\\\\n    for current_index, (feature, tagline, price) in enumerate(combinations):\\\\\\\\n        result = simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index)\\\\\\\\n        if result:\\\\\\\\n            results.append(result)\\\\\\\\n        progress.progress((current_index + 1) / total_combinations)\\\\\\\\n    if not results:\\\\\\\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "process_simulation_errors.log"})\\\\\\\\n        autogen.runtime_logging.log_event(name="process_simulation_error", event={"Error": "No valid results returned"}, source="demand_meter")\\\\\\\\n        autogen.runtime_logging.stop()\\\\\\\\n        logger.warning("No valid results returned in process_simulation.")\\\\\\\\n    return pd.DataFrame(results)\\\\\\\\n\\\\\\\\ndef update_progress(progress, value):\\\\\\\\n    blocks = int(value / 5)\\\\\\\\n    blocks_html = "".join(["<div class=\\\\\\\\\\\\\\\'progress-block\\\\\\\\\\\\\\\'></div>" for _ in range(blocks)])\\\\\\\\n    progress.markdown(f"""\\\\\\\\n        <div class="progress-container">\\\\\\\\n            <div class="progress-bar" style="width:{value}%;">\\\\\\\\n                <div class="progress-blocks">{blocks_html}</div>\\\\\\\\n            </div>\\\\\\\\n        </div>\\\\\\\\n        <div class="progress-text">{value}%</div>\\\\\\\\n    """, unsafe_allow_html=True)\\\\\\\\n\\\\\\\\ndef generate_insights(assistant, user_proxy, df_dict):\\\\\\\\n    insights_prompt = f"Analyze the demand scores for the following combinations and provide insights:\\\\\\\\\\\\\\\\n{df_dict}"\\\\\\\\n    user_proxy.initiate_chat(assistant, message=insights_prompt)\\\\\\\\n    return assistant.last_message()["content"]\\\\\\\\n\\\\\\\\ndef log_feedback(product_name, feedback):\\\\\\\\n    feedback_data = {"Product Name": product_name, "Feedback": feedback}\\\\\\\\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "user_feedback.log"})\\\\\\\\n    autogen.runtime_logging.log_event(name="user_feedback", event=feedback_data, source="demand_meter")\\\\\\\\n    autogen.runtime_logging.stop()\\\\\\\\n\\\\\\\\ndef log_error(section, error_message):\\\\\\\\n    error_data = {"Section": section, "Error": error_message}\\\\\\\\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "app_errors.log"})\\\\\\\\n    autogen.runtime_logging.log_event(name="app_error", event=error_data, source="omnivia_survey_platform")\\\\\\\\n    autogen.runtime_logging.stop()\\\\\\\\n    logger.error(f"Error in {section}: {error_message}")\\\\\\\\n\\\\\\\\n--- End of modules/utils.py ---\\\\\\\\n\\\\\\\\n\\\\\\\'}\\\', \\\'repo_document\\\': \\\'Repository Summary:\\\\n\\\\nThe GitHub repository brewedindices/omniviastreamlit provides a web application using the Streamlit framework. The project includes detailed setup instructions, development guidelines, and key features, making it a robust starting point for building modern web applications.\\\\n\\\\nKey Features:\\\\n- **Streamlit**: Framework for building interactive web applications in Python.\\\\n- **Python**: Programming language used for application logic.\\\\n- **Pandas**: Data manipulation and analysis library.\\\\n- **NumPy**: Library for numerical computations.\\\\n\\\\nInstructions:\\\\n1. **Clone the Repository**: `git clone https://github.com/brewedindices/omniviastreamlit`\\\\n2. **Setup Environment**: Follow the detailed setup instructions provided in the repository to configure the necessary dependencies and environment variables.\\\\n3. **Run the Application**: Use pip to install dependencies and start the application.\\\\n\\\\n\\\\nTable of Contents:\\\\nDirectory: .\\\\n  - .gitignore\\\\n  - replit.nix\\\\n  - config.toml\\\\n  - .breakpoints\\\\n  - pyproject.toml\\\\n  - poetry.lock\\\\n  - .replit\\\\n  - app.py\\\\n  - loading_screen.css\\\\n  - example.py\\\\nDirectory: modules\\\\n  - modules/dashboard.py\\\\n  - modules/visualizations.py\\\\n  - modules/narrative.py\\\\n  - modules/live_polling.py\\\\n  - modules/price_sensitivity.py\\\\n  - modules/old.py\\\\n  - modules/analytics.py\\\\n  - modules/__init__.py\\\\n  - modules/results.py\\\\n  - modules/personas.py\\\\n  - modules/questions.py\\\\n  - modules/utils.py\\\\n\\\\n\\\\n--- Directory: . ---\\\\n--- Start of .gitignore ---\\\\n# Byte-compiled / optimized / DLL files\\\\n__pycache__/\\\\n*.py[cod]\\\\n*$py.class\\\\n\\\\n# C extensions\\\\n*.so\\\\n\\\\n# Distribution / packaging\\\\n.Python\\\\nbuild/\\\\ndevelop-eggs/\\\\ndist/\\\\ndownloads/\\\\neggs/\\\\n.eggs/\\\\nlib/\\\\nlib64/\\\\nparts/\\\\nsdist/\\\\nvar/\\\\nwheels/\\\\nshare/python-wheels/\\\\n*.egg-info/\\\\n.installed.cfg\\\\n*.egg\\\\nMANIFEST\\\\n\\\\n# PyInstaller\\\\n#  Usually these files are written by a python script from a template\\\\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\\\\n*.manifest\\\\n*.spec\\\\n\\\\n# Installer logs\\\\npip-log.txt\\\\npip-delete-this-directory.txt\\\\n\\\\n# Unit test / coverage reports\\\\nhtmlcov/\\\\n.tox/\\\\n.nox/\\\\n.coverage\\\\n.coverage.*\\\\n.cache\\\\nnosetests.xml\\\\ncoverage.xml\\\\n*.cover\\\\n*.py,cover\\\\n.hypothesis/\\\\n.pytest_cache/\\\\ncover/\\\\n\\\\n# Translations\\\\n*.mo\\\\n*.pot\\\\n\\\\n# Django stuff:\\\\n*.log\\\\nlocal_settings.py\\\\ndb.sqlite3\\\\ndb.sqlite3-journal\\\\n\\\\n# Flask stuff:\\\\ninstance/\\\\n.webassets-cache\\\\n\\\\n# Scrapy stuff:\\\\n.scrapy\\\\n\\\\n# Sphinx documentation\\\\ndocs/_build/\\\\n\\\\n# PyBuilder\\\\n.pybuilder/\\\\ntarget/\\\\n\\\\n# Jupyter Notebook\\\\n.ipynb_checkpoints\\\\n\\\\n# IPython\\\\nprofile_default/\\\\nipython_config.py\\\\n\\\\n# pyenv\\\\n#   For a library or package, you might want to ignore these files since the code is\\\\n#   intended to run in multiple environments; otherwise, check them in:\\\\n# .python-version\\\\n\\\\n# pipenv\\\\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\\\\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\\\\n#   having no cross-platform support, pipenv may install dependencies that don\\\\\\\'t work, or not\\\\n#   install all needed dependencies.\\\\n#Pipfile.lock\\\\n\\\\n# poetry\\\\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\\\\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\\\\n#   commonly ignored for libraries.\\\\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\\\\n#poetry.lock\\\\n\\\\n# pdm\\\\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\\\\n#pdm.lock\\\\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\\\\n#   in version control.\\\\n#   https://pdm.fming.dev/#use-with-ide\\\\n.pdm.toml\\\\n\\\\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\\\\n__pypackages__/\\\\n\\\\n# Celery stuff\\\\ncelerybeat-schedule\\\\ncelerybeat.pid\\\\n\\\\n# SageMath parsed files\\\\n*.sage.py\\\\n\\\\n# Environments\\\\n.env\\\\n.venv\\\\nenv/\\\\nvenv/\\\\nENV/\\\\nenv.bak/\\\\nvenv.bak/\\\\n\\\\n# Spyder project settings\\\\n.spyderproject\\\\n.spyproject\\\\n\\\\n# Rope project settings\\\\n.ropeproject\\\\n\\\\n# mkdocs documentation\\\\n/site\\\\n\\\\n# mypy\\\\n.mypy_cache/\\\\n.dmypy.json\\\\ndmypy.json\\\\n\\\\n# Pyre type checker\\\\n.pyre/\\\\n\\\\n# pytype static type analyzer\\\\n.pytype/\\\\n\\\\n# Cython debug symbols\\\\ncython_debug/\\\\n\\\\n# PyCharm\\\\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\\\\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\\\\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\\\\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\\\\n#.idea/\\\\n--- End of .gitignore ---\\\\n\\\\n--- Start of replit.nix ---\\\\n{pkgs}: {\\\\n  deps = [\\\\n    pkgs.glibcLocales\\\\n  ];\\\\n}\\\\n\\\\n--- End of replit.nix ---\\\\n\\\\n--- Start of config.toml ---\\\\n[theme]\\\\nbase="dark"\\\\nprimaryColor="#FFC300"\\\\nbackgroundColor="#1E1E1E"\\\\nsecondaryBackgroundColor="#333333"\\\\ntextColor="#D4D4D4"\\\\nfont="sans serif"\\\\n\\\\n--- End of config.toml ---\\\\n\\\\n--- Start of .breakpoints ---\\\\n{\\\\n  "files": {}\\\\n}\\\\n--- End of .breakpoints ---\\\\n\\\\n--- Start of pyproject.toml ---\\\\n[tool.poetry]\\\\nname = "python-template"\\\\nversion = "0.1.0"\\\\ndescription = ""\\\\nauthors = ["Your Name <you@example.com>"]\\\\n\\\\n[tool.poetry.dependencies]\\\\npython = ">=3.10.0,<3.11"\\\\nstreamlit = "^1.27.2"\\\\nmodules = "^1.0.0"\\\\nrequests = "^2.32.3"\\\\nstreamlit-option-menu = "^0.3.13"\\\\npymongo = "^4.7.3"\\\\nnumpy = "^2.0.0"\\\\npandas = "^2.2.2"\\\\nplotly = "^5.22.0"\\\\n\\\\n[tool.pyright]\\\\n# https://github.com/microsoft/pyright/blob/main/docs/configuration.md\\\\nuseLibraryCodeForTypes = true\\\\nexclude = [".cache"]\\\\n\\\\n[tool.ruff]\\\\n# https://beta.ruff.rs/docs/configuration/\\\\nselect = [\\\\\\\'E\\\\\\\', \\\\\\\'W\\\\\\\', \\\\\\\'F\\\\\\\', \\\\\\\'I\\\\\\\', \\\\\\\'B\\\\\\\', \\\\\\\'C4\\\\\\\', \\\\\\\'ARG\\\\\\\', \\\\\\\'SIM\\\\\\\']\\\\nignore = [\\\\\\\'W291\\\\\\\', \\\\\\\'W292\\\\\\\', \\\\\\\'W293\\\\\\\']\\\\n\\\\n[build-system]\\\\nrequires = ["poetry-core>=1.0.0"]\\\\nbuild-backend = "poetry.core.masonry.api"\\\\n--- End of pyproject.toml ---\\\\n\\\\n--- Start of poetry.lock ---\\\\n# This file is automatically @generated by Poetry 1.5.4 and should not be changed by hand.\\\\n\\\\n[[package]]\\\\nname = "altair"\\\\nversion = "5.1.2"\\\\ndescription = "Vega-Altair: A declarative statistical visualization library for Python."\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "altair-5.1.2-py3-none-any.whl", hash = "sha256:7219708ec33c152e53145485040f428954ed15fd09b2a2d89e543e6d111dae7f"},\\\\n    {file = "altair-5.1.2.tar.gz", hash = "sha256:e5f52a71853a607c61ce93ad4a414b3d486cd0d46ac597a24ae8bd1ac99dd460"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\njinja2 = "*"\\\\njsonschema = ">=3.0"\\\\nnumpy = "*"\\\\npackaging = "*"\\\\npandas = ">=0.25"\\\\ntoolz = "*"\\\\ntyping-extensions = {version = ">=4.0.1", markers = "python_version < \\\\\\\\"3.11\\\\\\\\""}\\\\n\\\\n[package.extras]\\\\ndev = ["anywidget", "black (<24)", "hatch", "ipython", "m2r", "mypy", "pandas-stubs", "pyarrow (>=11)", "pytest", "pytest-cov", "ruff", "types-jsonschema", "types-setuptools", "vega-datasets", "vegafusion[embed] (>=1.4.0)", "vl-convert-python (>=0.14.0)"]\\\\ndoc = ["docutils", "geopandas", "jinja2", "myst-parser", "numpydoc", "pillow (>=9,<10)", "pydata-sphinx-theme", "scipy", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinxext-altair"]\\\\n\\\\n[[package]]\\\\nname = "attrs"\\\\nversion = "23.1.0"\\\\ndescription = "Classes Without Boilerplate"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "attrs-23.1.0-py3-none-any.whl", hash = "sha256:1f28b4522cdc2fb4256ac1a020c78acf9cba2c6b461ccd2c126f3aa8e8335d04"},\\\\n    {file = "attrs-23.1.0.tar.gz", hash = "sha256:6279836d581513a26f1bf235f9acd333bc9115683f14f7e8fae46c98fc50e015"},\\\\n]\\\\n\\\\n[package.extras]\\\\ncov = ["attrs[tests]", "coverage[toml] (>=5.3)"]\\\\ndev = ["attrs[docs,tests]", "pre-commit"]\\\\ndocs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]\\\\ntests = ["attrs[tests-no-zope]", "zope-interface"]\\\\ntests-no-zope = ["cloudpickle", "hypothesis", "mypy (>=1.1.1)", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins", "pytest-xdist[psutil]"]\\\\n\\\\n[[package]]\\\\nname = "blinker"\\\\nversion = "1.6.3"\\\\ndescription = "Fast, simple object-to-object and broadcast signaling"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "blinker-1.6.3-py3-none-any.whl", hash = "sha256:296320d6c28b006eb5e32d4712202dbcdcbf5dc482da298c2f44881c43884aaa"},\\\\n    {file = "blinker-1.6.3.tar.gz", hash = "sha256:152090d27c1c5c722ee7e48504b02d76502811ce02e1523553b4cf8c8b3d3a8d"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "cachetools"\\\\nversion = "5.3.1"\\\\ndescription = "Extensible memoizing collections and decorators"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "cachetools-5.3.1-py3-none-any.whl", hash = "sha256:95ef631eeaea14ba2e36f06437f36463aac3a096799e876ee55e5cdccb102590"},\\\\n    {file = "cachetools-5.3.1.tar.gz", hash = "sha256:dce83f2d9b4e1f732a8cd44af8e8fab2dbe46201467fc98b3ef8f269092bf62b"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "certifi"\\\\nversion = "2023.7.22"\\\\ndescription = "Python package for providing Mozilla\\\\\\\'s CA Bundle."\\\\noptional = false\\\\npython-versions = ">=3.6"\\\\nfiles = [\\\\n    {file = "certifi-2023.7.22-py3-none-any.whl", hash = "sha256:92d6037539857d8206b8f6ae472e8b77db8058fec5937a1ef3f54304089edbb9"},\\\\n    {file = "certifi-2023.7.22.tar.gz", hash = "sha256:539cc1d13202e33ca466e88b2807e29f4c13049d6d87031a3c110744495cb082"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "charset-normalizer"\\\\nversion = "3.3.0"\\\\ndescription = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."\\\\noptional = false\\\\npython-versions = ">=3.7.0"\\\\nfiles = [\\\\n    {file = "charset-normalizer-3.3.0.tar.gz", hash = "sha256:63563193aec44bce707e0c5ca64ff69fa72ed7cf34ce6e11d5127555756fd2f6"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:effe5406c9bd748a871dbcaf3ac69167c38d72db8c9baf3ff954c344f31c4cbe"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:4162918ef3098851fcd8a628bf9b6a98d10c380725df9e04caf5ca6dd48c847a"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0570d21da019941634a531444364f2482e8db0b3425fcd5ac0c36565a64142c8"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5707a746c6083a3a74b46b3a631d78d129edab06195a92a8ece755aac25a3f3d"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:278c296c6f96fa686d74eb449ea1697f3c03dc28b75f873b65b5201806346a69"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:a4b71f4d1765639372a3b32d2638197f5cd5221b19531f9245fcc9ee62d38f56"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f5969baeaea61c97efa706b9b107dcba02784b1601c74ac84f2a532ea079403e"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a3f93dab657839dfa61025056606600a11d0b696d79386f974e459a3fbc568ec"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:db756e48f9c5c607b5e33dd36b1d5872d0422e960145b08ab0ec7fd420e9d649"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:232ac332403e37e4a03d209a3f92ed9071f7d3dbda70e2a5e9cff1c4ba9f0678"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_ppc64le.whl", hash = "sha256:e5c1502d4ace69a179305abb3f0bb6141cbe4714bc9b31d427329a95acfc8bdd"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_s390x.whl", hash = "sha256:2502dd2a736c879c0f0d3e2161e74d9907231e25d35794584b1ca5284e43f596"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23e8565ab7ff33218530bc817922fae827420f143479b753104ab801145b1d5b"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win32.whl", hash = "sha256:1872d01ac8c618a8da634e232f24793883d6e456a66593135aeafe3784b0848d"},\\\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win_amd64.whl", hash = "sha256:557b21a44ceac6c6b9773bc65aa1b4cc3e248a5ad2f5b914b91579a32e22204d"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:d7eff0f27edc5afa9e405f7165f85a6d782d308f3b6b9d96016c010597958e63"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:6a685067d05e46641d5d1623d7c7fdf15a357546cbb2f71b0ebde91b175ffc3e"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:0d3d5b7db9ed8a2b11a774db2bbea7ba1884430a205dbd54a32d61d7c2a190fa"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2935ffc78db9645cb2086c2f8f4cfd23d9b73cc0dc80334bc30aac6f03f68f8c"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:9fe359b2e3a7729010060fbca442ca225280c16e923b37db0e955ac2a2b72a05"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:380c4bde80bce25c6e4f77b19386f5ec9db230df9f2f2ac1e5ad7af2caa70459"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0d1e3732768fecb052d90d62b220af62ead5748ac51ef61e7b32c266cac9293"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1b2919306936ac6efb3aed1fbf81039f7087ddadb3160882a57ee2ff74fd2382"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:f8888e31e3a85943743f8fc15e71536bda1c81d5aa36d014a3c0c44481d7db6e"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:82eb849f085624f6a607538ee7b83a6d8126df6d2f7d3b319cb837b289123078"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_ppc64le.whl", hash = "sha256:7b8b8bf1189b3ba9b8de5c8db4d541b406611a71a955bbbd7385bbc45fcb786c"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_s390x.whl", hash = "sha256:5adf257bd58c1b8632046bbe43ee38c04e1038e9d37de9c57a94d6bd6ce5da34"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:c350354efb159b8767a6244c166f66e67506e06c8924ed74669b2c70bc8735b1"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win32.whl", hash = "sha256:02af06682e3590ab952599fbadac535ede5d60d78848e555aa58d0c0abbde786"},\\\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win_amd64.whl", hash = "sha256:86d1f65ac145e2c9ed71d8ffb1905e9bba3a91ae29ba55b4c46ae6fc31d7c0d4"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:3b447982ad46348c02cb90d230b75ac34e9886273df3a93eec0539308a6296d7"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:abf0d9f45ea5fb95051c8bfe43cb40cda383772f7e5023a83cc481ca2604d74e"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:b09719a17a2301178fac4470d54b1680b18a5048b481cb8890e1ef820cb80455"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b3d9b48ee6e3967b7901c052b670c7dda6deb812c309439adaffdec55c6d7b78"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:edfe077ab09442d4ef3c52cb1f9dab89bff02f4524afc0acf2d46be17dc479f5"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3debd1150027933210c2fc321527c2299118aa929c2f5a0a80ab6953e3bd1908"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:86f63face3a527284f7bb8a9d4f78988e3c06823f7bea2bd6f0e0e9298ca0403"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:24817cb02cbef7cd499f7c9a2735286b4782bd47a5b3516a0e84c50eab44b98e"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:c71f16da1ed8949774ef79f4a0260d28b83b3a50c6576f8f4f0288d109777989"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:9cf3126b85822c4e53aa28c7ec9869b924d6fcfb76e77a45c44b83d91afd74f9"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_ppc64le.whl", hash = "sha256:b3b2316b25644b23b54a6f6401074cebcecd1244c0b8e80111c9a3f1c8e83d65"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_s390x.whl", hash = "sha256:03680bb39035fbcffe828eae9c3f8afc0428c91d38e7d61aa992ef7a59fb120e"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:4cc152c5dd831641e995764f9f0b6589519f6f5123258ccaca8c6d34572fefa8"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win32.whl", hash = "sha256:b8f3307af845803fb0b060ab76cf6dd3a13adc15b6b451f54281d25911eb92df"},\\\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win_amd64.whl", hash = "sha256:8eaf82f0eccd1505cf39a45a6bd0a8cf1c70dcfc30dba338207a969d91b965c0"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:dc45229747b67ffc441b3de2f3ae5e62877a282ea828a5bdb67883c4ee4a8810"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2f4a0033ce9a76e391542c182f0d48d084855b5fcba5010f707c8e8c34663d77"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ada214c6fa40f8d800e575de6b91a40d0548139e5dc457d2ebb61470abf50186"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b1121de0e9d6e6ca08289583d7491e7fcb18a439305b34a30b20d8215922d43c"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1063da2c85b95f2d1a430f1c33b55c9c17ffaf5e612e10aeaad641c55a9e2b9d"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:70f1d09c0d7748b73290b29219e854b3207aea922f839437870d8cc2168e31cc"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:250c9eb0f4600361dd80d46112213dff2286231d92d3e52af1e5a6083d10cad9"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:750b446b2ffce1739e8578576092179160f6d26bd5e23eb1789c4d64d5af7dc7"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_ppc64le.whl", hash = "sha256:fc52b79d83a3fe3a360902d3f5d79073a993597d48114c29485e9431092905d8"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_s390x.whl", hash = "sha256:588245972aca710b5b68802c8cad9edaa98589b1b42ad2b53accd6910dad3545"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:e39c7eb31e3f5b1f88caff88bcff1b7f8334975b46f6ac6e9fc725d829bc35d4"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win32.whl", hash = "sha256:abecce40dfebbfa6abf8e324e1860092eeca6f7375c8c4e655a8afb61af58f2c"},\\\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win_amd64.whl", hash = "sha256:24a91a981f185721542a0b7c92e9054b7ab4fea0508a795846bc5b0abf8118d4"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:67b8cc9574bb518ec76dc8e705d4c39ae78bb96237cb533edac149352c1f39fe"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:ac71b2977fb90c35d41c9453116e283fac47bb9096ad917b8819ca8b943abecd"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:3ae38d325b512f63f8da31f826e6cb6c367336f95e418137286ba362925c877e"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:542da1178c1c6af8873e143910e2269add130a299c9106eef2594e15dae5e482"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:30a85aed0b864ac88309b7d94be09f6046c834ef60762a8833b660139cfbad13"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aae32c93e0f64469f74ccc730a7cb21c7610af3a775157e50bbd38f816536b38"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:15b26ddf78d57f1d143bdf32e820fd8935d36abe8a25eb9ec0b5a71c82eb3895"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7f5d10bae5d78e4551b7be7a9b29643a95aded9d0f602aa2ba584f0388e7a557"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:249c6470a2b60935bafd1d1d13cd613f8cd8388d53461c67397ee6a0f5dce741"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:c5a74c359b2d47d26cdbbc7845e9662d6b08a1e915eb015d044729e92e7050b7"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_ppc64le.whl", hash = "sha256:b5bcf60a228acae568e9911f410f9d9e0d43197d030ae5799e20dca8df588287"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_s390x.whl", hash = "sha256:187d18082694a29005ba2944c882344b6748d5be69e3a89bf3cc9d878e548d5a"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:81bf654678e575403736b85ba3a7867e31c2c30a69bc57fe88e3ace52fb17b89"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win32.whl", hash = "sha256:85a32721ddde63c9df9ebb0d2045b9691d9750cb139c161c80e500d210f5e26e"},\\\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win_amd64.whl", hash = "sha256:468d2a840567b13a590e67dd276c570f8de00ed767ecc611994c301d0f8c014f"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:e0fc42822278451bc13a2e8626cf2218ba570f27856b536e00cfa53099724828"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:09c77f964f351a7369cc343911e0df63e762e42bac24cd7d18525961c81754f4"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:12ebea541c44fdc88ccb794a13fe861cc5e35d64ed689513a5c03d05b53b7c82"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:805dfea4ca10411a5296bcc75638017215a93ffb584c9e344731eef0dcfb026a"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:96c2b49eb6a72c0e4991d62406e365d87067ca14c1a729a870d22354e6f68115"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aaf7b34c5bc56b38c931a54f7952f1ff0ae77a2e82496583b247f7c969eb1479"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:619d1c96099be5823db34fe89e2582b336b5b074a7f47f819d6b3a57ff7bdb86"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a0ac5e7015a5920cfce654c06618ec40c33e12801711da6b4258af59a8eff00a"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:93aa7eef6ee71c629b51ef873991d6911b906d7312c6e8e99790c0f33c576f89"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7966951325782121e67c81299a031f4c115615e68046f79b85856b86ebffc4cd"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_ppc64le.whl", hash = "sha256:02673e456dc5ab13659f85196c534dc596d4ef260e4d86e856c3b2773ce09843"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_s390x.whl", hash = "sha256:c2af80fb58f0f24b3f3adcb9148e6203fa67dd3f61c4af146ecad033024dde43"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:153e7b6e724761741e0974fc4dcd406d35ba70b92bfe3fedcb497226c93b9da7"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win32.whl", hash = "sha256:d47ecf253780c90ee181d4d871cd655a789da937454045b17b5798da9393901a"},\\\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win_amd64.whl", hash = "sha256:d97d85fa63f315a8bdaba2af9a6a686e0eceab77b3089af45133252618e70884"},\\\\n    {file = "charset_normalizer-3.3.0-py3-none-any.whl", hash = "sha256:e46cd37076971c1040fc8c41273a8b3e2c624ce4f2be3f5dfcb7a430c1d3acc2"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "click"\\\\nversion = "8.1.7"\\\\ndescription = "Composable command line interface toolkit"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "click-8.1.7-py3-none-any.whl", hash = "sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28"},\\\\n    {file = "click-8.1.7.tar.gz", hash = "sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\ncolorama = {version = "*", markers = "platform_system == \\\\\\\\"Windows\\\\\\\\""}\\\\n\\\\n[[package]]\\\\nname = "colorama"\\\\nversion = "0.4.6"\\\\ndescription = "Cross-platform colored terminal text."\\\\noptional = false\\\\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"\\\\nfiles = [\\\\n    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},\\\\n    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "dnspython"\\\\nversion = "2.6.1"\\\\ndescription = "DNS toolkit"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "dnspython-2.6.1-py3-none-any.whl", hash = "sha256:5ef3b9680161f6fa89daf8ad451b5f1a33b18ae8a1c6778cdf4b43f08c0a6e50"},\\\\n    {file = "dnspython-2.6.1.tar.gz", hash = "sha256:e8f0f9c23a7b7cb99ded64e6c3a6f3e701d78f50c55e002b839dea7225cff7cc"},\\\\n]\\\\n\\\\n[package.extras]\\\\ndev = ["black (>=23.1.0)", "coverage (>=7.0)", "flake8 (>=7)", "mypy (>=1.8)", "pylint (>=3)", "pytest (>=7.4)", "pytest-cov (>=4.1.0)", "sphinx (>=7.2.0)", "twine (>=4.0.0)", "wheel (>=0.42.0)"]\\\\ndnssec = ["cryptography (>=41)"]\\\\ndoh = ["h2 (>=4.1.0)", "httpcore (>=1.0.0)", "httpx (>=0.26.0)"]\\\\ndoq = ["aioquic (>=0.9.25)"]\\\\nidna = ["idna (>=3.6)"]\\\\ntrio = ["trio (>=0.23)"]\\\\nwmi = ["wmi (>=1.5.1)"]\\\\n\\\\n[[package]]\\\\nname = "gitdb"\\\\nversion = "4.0.10"\\\\ndescription = "Git Object Database"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "gitdb-4.0.10-py3-none-any.whl", hash = "sha256:c286cf298426064079ed96a9e4a9d39e7f3e9bf15ba60701e95f5492f28415c7"},\\\\n    {file = "gitdb-4.0.10.tar.gz", hash = "sha256:6eb990b69df4e15bad899ea868dc46572c3f75339735663b81de79b06f17eb9a"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nsmmap = ">=3.0.1,<6"\\\\n\\\\n[[package]]\\\\nname = "gitpython"\\\\nversion = "3.1.37"\\\\ndescription = "GitPython is a Python library used to interact with Git repositories"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "GitPython-3.1.37-py3-none-any.whl", hash = "sha256:5f4c4187de49616d710a77e98ddf17b4782060a1788df441846bddefbb89ab33"},\\\\n    {file = "GitPython-3.1.37.tar.gz", hash = "sha256:f9b9ddc0761c125d5780eab2d64be4873fc6817c2899cbcb34b02344bdc7bc54"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\ngitdb = ">=4.0.1,<5"\\\\n\\\\n[package.extras]\\\\ntest = ["black", "coverage[toml]", "ddt (>=1.1.1,!=1.4.3)", "mypy", "pre-commit", "pytest", "pytest-cov", "pytest-sugar"]\\\\n\\\\n[[package]]\\\\nname = "idna"\\\\nversion = "3.4"\\\\ndescription = "Internationalized Domain Names in Applications (IDNA)"\\\\noptional = false\\\\npython-versions = ">=3.5"\\\\nfiles = [\\\\n    {file = "idna-3.4-py3-none-any.whl", hash = "sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2"},\\\\n    {file = "idna-3.4.tar.gz", hash = "sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "jinja2"\\\\nversion = "3.1.2"\\\\ndescription = "A very fast and expressive template engine."\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "Jinja2-3.1.2-py3-none-any.whl", hash = "sha256:6088930bfe239f0e6710546ab9c19c9ef35e29792895fed6e6e31a023a182a61"},\\\\n    {file = "Jinja2-3.1.2.tar.gz", hash = "sha256:31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nMarkupSafe = ">=2.0"\\\\n\\\\n[package.extras]\\\\ni18n = ["Babel (>=2.7)"]\\\\n\\\\n[[package]]\\\\nname = "jsonschema"\\\\nversion = "4.19.1"\\\\ndescription = "An implementation of JSON Schema validation for Python"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "jsonschema-4.19.1-py3-none-any.whl", hash = "sha256:cd5f1f9ed9444e554b38ba003af06c0a8c2868131e56bfbef0550fb450c0330e"},\\\\n    {file = "jsonschema-4.19.1.tar.gz", hash = "sha256:ec84cc37cfa703ef7cd4928db24f9cb31428a5d0fa77747b8b51a847458e0bbf"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nattrs = ">=22.2.0"\\\\njsonschema-specifications = ">=2023.03.6"\\\\nreferencing = ">=0.28.4"\\\\nrpds-py = ">=0.7.1"\\\\n\\\\n[package.extras]\\\\nformat = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]\\\\nformat-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]\\\\n\\\\n[[package]]\\\\nname = "jsonschema-specifications"\\\\nversion = "2023.7.1"\\\\ndescription = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "jsonschema_specifications-2023.7.1-py3-none-any.whl", hash = "sha256:05adf340b659828a004220a9613be00fa3f223f2b82002e273dee62fd50524b1"},\\\\n    {file = "jsonschema_specifications-2023.7.1.tar.gz", hash = "sha256:c91a50404e88a1f6ba40636778e2ee08f6e24c5613fe4c53ac24578a5a7f72bb"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nreferencing = ">=0.28.0"\\\\n\\\\n[[package]]\\\\nname = "markdown-it-py"\\\\nversion = "3.0.0"\\\\ndescription = "Python port of markdown-it. Markdown parsing, done right!"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "markdown-it-py-3.0.0.tar.gz", hash = "sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb"},\\\\n    {file = "markdown_it_py-3.0.0-py3-none-any.whl", hash = "sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nmdurl = ">=0.1,<1.0"\\\\n\\\\n[package.extras]\\\\nbenchmarking = ["psutil", "pytest", "pytest-benchmark"]\\\\ncode-style = ["pre-commit (>=3.0,<4.0)"]\\\\ncompare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]\\\\nlinkify = ["linkify-it-py (>=1,<3)"]\\\\nplugins = ["mdit-py-plugins"]\\\\nprofiling = ["gprof2dot"]\\\\nrtd = ["jupyter_sphinx", "mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx_book_theme"]\\\\ntesting = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]\\\\n\\\\n[[package]]\\\\nname = "markupsafe"\\\\nversion = "2.1.3"\\\\ndescription = "Safely add untrusted strings to HTML/XML markup."\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:cd0f502fe016460680cd20aaa5a76d241d6f35a1c3350c474bac1273803893fa"},\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e09031c87a1e51556fdcb46e5bd4f59dfb743061cf93c4d6831bf894f125eb57"},\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68e78619a61ecf91e76aa3e6e8e33fc4894a2bebe93410754bd28fce0a8a4f9f"},\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:65c1a9bcdadc6c28eecee2c119465aebff8f7a584dd719facdd9e825ec61ab52"},\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:525808b8019e36eb524b8c68acdd63a37e75714eac50e988180b169d64480a00"},\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:962f82a3086483f5e5f64dbad880d31038b698494799b097bc59c2edf392fce6"},\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:aa7bd130efab1c280bed0f45501b7c8795f9fdbeb02e965371bbef3523627779"},\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:c9c804664ebe8f83a211cace637506669e7890fec1b4195b505c214e50dd4eb7"},\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win32.whl", hash = "sha256:10bbfe99883db80bdbaff2dcf681dfc6533a614f700da1287707e8a5d78a8431"},\\\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win_amd64.whl", hash = "sha256:1577735524cdad32f9f694208aa75e422adba74f1baee7551620e43a3141f559"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:ad9e82fb8f09ade1c3e1b996a6337afac2b8b9e365f926f5a61aacc71adc5b3c"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:3c0fae6c3be832a0a0473ac912810b2877c8cb9d76ca48de1ed31e1c68386575"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b076b6226fb84157e3f7c971a47ff3a679d837cf338547532ab866c57930dbee"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:bfce63a9e7834b12b87c64d6b155fdd9b3b96191b6bd334bf37db7ff1fe457f2"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:338ae27d6b8745585f87218a3f23f1512dbf52c26c28e322dbe54bcede54ccb9"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:e4dd52d80b8c83fdce44e12478ad2e85c64ea965e75d66dbeafb0a3e77308fcc"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:df0be2b576a7abbf737b1575f048c23fb1d769f267ec4358296f31c2479db8f9"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:5bbe06f8eeafd38e5d0a4894ffec89378b6c6a625ff57e3028921f8ff59318ac"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win32.whl", hash = "sha256:dd15ff04ffd7e05ffcb7fe79f1b98041b8ea30ae9234aed2a9168b5797c3effb"},\\\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win_amd64.whl", hash = "sha256:134da1eca9ec0ae528110ccc9e48041e0828d79f24121a1a146161103c76e686"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:f698de3fd0c4e6972b92290a45bd9b1536bffe8c6759c62471efaa8acb4c37bc"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:aa57bd9cf8ae831a362185ee444e15a93ecb2e344c8e52e4d721ea3ab6ef1823"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:ffcc3f7c66b5f5b7931a5aa68fc9cecc51e685ef90282f4a82f0f5e9b704ad11"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47d4f1c5f80fc62fdd7777d0d40a2e9dda0a05883ab11374334f6c4de38adffd"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1f67c7038d560d92149c060157d623c542173016c4babc0c1913cca0564b9939"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:9aad3c1755095ce347e26488214ef77e0485a3c34a50c5a5e2471dff60b9dd9c"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:14ff806850827afd6b07a5f32bd917fb7f45b046ba40c57abdb636674a8b559c"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8f9293864fe09b8149f0cc42ce56e3f0e54de883a9de90cd427f191c346eb2e1"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win32.whl", hash = "sha256:715d3562f79d540f251b99ebd6d8baa547118974341db04f5ad06d5ea3eb8007"},\\\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win_amd64.whl", hash = "sha256:1b8dd8c3fd14349433c79fa8abeb573a55fc0fdd769133baac1f5e07abf54aeb"},\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:8e254ae696c88d98da6555f5ace2279cf7cd5b3f52be2b5cf97feafe883b58d2"},\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cb0932dc158471523c9637e807d9bfb93e06a95cbf010f1a38b98623b929ef2b"},\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9402b03f1a1b4dc4c19845e5c749e3ab82d5078d16a2a4c2cd2df62d57bb0707"},\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:ca379055a47383d02a5400cb0d110cef0a776fc644cda797db0c5696cfd7e18e"},\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:b7ff0f54cb4ff66dd38bebd335a38e2c22c41a8ee45aa608efc890ac3e3931bc"},\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:c011a4149cfbcf9f03994ec2edffcb8b1dc2d2aede7ca243746df97a5d41ce48"},\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:56d9f2ecac662ca1611d183feb03a3fa4406469dafe241673d521dd5ae92a155"},\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win32.whl", hash = "sha256:8758846a7e80910096950b67071243da3e5a20ed2546e6392603c096778d48e0"},\\\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win_amd64.whl", hash = "sha256:787003c0ddb00500e49a10f2844fac87aa6ce977b90b0feaaf9de23c22508b24"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:2ef12179d3a291be237280175b542c07a36e7f60718296278d8593d21ca937d4"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:2c1b19b3aaacc6e57b7e25710ff571c24d6c3613a45e905b1fde04d691b98ee0"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8afafd99945ead6e075b973fefa56379c5b5c53fd8937dad92c662da5d8fd5ee"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8c41976a29d078bb235fea9b2ecd3da465df42a562910f9022f1a03107bd02be"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d080e0a5eb2529460b30190fcfcc4199bd7f827663f858a226a81bc27beaa97e"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:69c0f17e9f5a7afdf2cc9fb2d1ce6aabdb3bafb7f38017c0b77862bcec2bbad8"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:504b320cd4b7eff6f968eddf81127112db685e81f7e36e75f9f84f0df46041c3"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:42de32b22b6b804f42c5d98be4f7e5e977ecdd9ee9b660fda1a3edf03b11792d"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win32.whl", hash = "sha256:ceb01949af7121f9fc39f7d27f91be8546f3fb112c608bc4029aef0bab86a2a5"},\\\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win_amd64.whl", hash = "sha256:1b40069d487e7edb2676d3fbdb2b0829ffa2cd63a2ec26c4938b2d34391b4ecc"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:8023faf4e01efadfa183e863fefde0046de576c6f14659e8782065bcece22198"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6b2b56950d93e41f33b4223ead100ea0fe11f8e6ee5f641eb753ce4b77a7042b"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9dcdfd0eaf283af041973bff14a2e143b8bd64e069f4c383416ecd79a81aab58"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:05fb21170423db021895e1ea1e1f3ab3adb85d1c2333cbc2310f2a26bc77272e"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:282c2cb35b5b673bbcadb33a585408104df04f14b2d9b01d4c345a3b92861c2c"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:ab4a0df41e7c16a1392727727e7998a467472d0ad65f3ad5e6e765015df08636"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7ef3cb2ebbf91e330e3bb937efada0edd9003683db6b57bb108c4001f37a02ea"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:0a4e4a1aff6c7ac4cd55792abf96c915634c2b97e3cc1c7129578aa68ebd754e"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win32.whl", hash = "sha256:fec21693218efe39aa7f8599346e90c705afa52c5b31ae019b2e57e8f6542bb2"},\\\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win_amd64.whl", hash = "sha256:3fd4abcb888d15a94f32b75d8fd18ee162ca0c064f35b11134be77050296d6ba"},\\\\n    {file = "MarkupSafe-2.1.3.tar.gz", hash = "sha256:af598ed32d6ae86f1b747b82783958b1a4ab8f617b06fe68795c7f026abbdcad"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "mdurl"\\\\nversion = "0.1.2"\\\\ndescription = "Markdown URL utilities"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},\\\\n    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "modules"\\\\nversion = "1.0.0"\\\\ndescription = "Simple test on modules"\\\\noptional = false\\\\npython-versions = "*"\\\\nfiles = [\\\\n    {file = "modules-1.0.0.tar.gz", hash = "sha256:5146b31b76e9899f95c19e3654c6aee2799694b912ca00faec6798725486934b"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "numpy"\\\\nversion = "2.0.0"\\\\ndescription = "Fundamental package for array computing in Python"\\\\noptional = false\\\\npython-versions = ">=3.9"\\\\nfiles = [\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:04494f6ec467ccb5369d1808570ae55f6ed9b5809d7f035059000a37b8d7e86f"},\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:2635dbd200c2d6faf2ef9a0d04f0ecc6b13b3cad54f7c67c61155138835515d2"},\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_arm64.whl", hash = "sha256:0a43f0974d501842866cc83471bdb0116ba0dffdbaac33ec05e6afed5b615238"},\\\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_x86_64.whl", hash = "sha256:8d83bb187fb647643bd56e1ae43f273c7f4dbcdf94550d7938cfc32566756514"},\\\\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:79e843d186c8fb1b102bef3e2bc35ef81160ffef3194646a7fdd6a73c6b97196"},\\\\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d7696c615765091cc5093f76fd1fa069870304beaccfd58b5dcc69e55ef49c1"},\\\\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:b4c76e3d4c56f145d41b7b6751255feefae92edbc9a61e1758a98204200f30fc"},\\\\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:acd3a644e4807e73b4e1867b769fbf1ce8c5d80e7caaef0d90dcdc640dfc9787"},\\\\n    {file = "numpy-2.0.0-cp310-cp310-win32.whl", hash = "sha256:cee6cc0584f71adefe2c908856ccc98702baf95ff80092e4ca46061538a2ba98"},\\\\n    {file = "numpy-2.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:ed08d2703b5972ec736451b818c2eb9da80d66c3e84aed1deeb0c345fefe461b"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:ad0c86f3455fbd0de6c31a3056eb822fc939f81b1618f10ff3406971893b62a5"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:e7f387600d424f91576af20518334df3d97bc76a300a755f9a8d6e4f5cadd289"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_arm64.whl", hash = "sha256:34f003cb88b1ba38cb9a9a4a3161c1604973d7f9d5552c38bc2f04f829536609"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_x86_64.whl", hash = "sha256:b6f6a8f45d0313db07d6d1d37bd0b112f887e1369758a5419c0370ba915b3871"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5f64641b42b2429f56ee08b4f427a4d2daf916ec59686061de751a55aafa22e4"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:a7039a136017eaa92c1848152827e1424701532ca8e8967fe480fe1569dae581"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:46e161722e0f619749d1cd892167039015b2c2817296104487cd03ed4a955995"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:0e50842b2295ba8414c8c1d9d957083d5dfe9e16828b37de883f51fc53c4016f"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-win32.whl", hash = "sha256:2ce46fd0b8a0c947ae047d222f7136fc4d55538741373107574271bc00e20e8f"},\\\\n    {file = "numpy-2.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:fbd6acc766814ea6443628f4e6751d0da6593dae29c08c0b2606164db026970c"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:354f373279768fa5a584bac997de6a6c9bc535c482592d7a813bb0c09be6c76f"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:4d2f62e55a4cd9c58c1d9a1c9edaedcd857a73cb6fda875bf79093f9d9086f85"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_arm64.whl", hash = "sha256:1e72728e7501a450288fc8e1f9ebc73d90cfd4671ebbd631f3e7857c39bd16f2"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_x86_64.whl", hash = "sha256:84554fc53daa8f6abf8e8a66e076aff6ece62de68523d9f665f32d2fc50fd66e"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c73aafd1afca80afecb22718f8700b40ac7cab927b8abab3c3e337d70e10e5a2"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:49d9f7d256fbc804391a7f72d4a617302b1afac1112fac19b6c6cec63fe7fe8a"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:0ec84b9ba0654f3b962802edc91424331f423dcf5d5f926676e0150789cb3d95"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:feff59f27338135776f6d4e2ec7aeeac5d5f7a08a83e80869121ef8164b74af9"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-win32.whl", hash = "sha256:c5a59996dc61835133b56a32ebe4ef3740ea5bc19b3983ac60cc32be5a665d54"},\\\\n    {file = "numpy-2.0.0-cp312-cp312-win_amd64.whl", hash = "sha256:a356364941fb0593bb899a1076b92dfa2029f6f5b8ba88a14fd0984aaf76d0df"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:e61155fae27570692ad1d327e81c6cf27d535a5d7ef97648a17d922224b216de"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:4554eb96f0fd263041baf16cf0881b3f5dafae7a59b1049acb9540c4d57bc8cb"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_arm64.whl", hash = "sha256:903703372d46bce88b6920a0cd86c3ad82dae2dbef157b5fc01b70ea1cfc430f"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_x86_64.whl", hash = "sha256:3e8e01233d57639b2e30966c63d36fcea099d17c53bf424d77f088b0f4babd86"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cde1753efe513705a0c6d28f5884e22bdc30438bf0085c5c486cdaff40cd67a"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:821eedb7165ead9eebdb569986968b541f9908979c2da8a4967ecac4439bae3d"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:9a1712c015831da583b21c5bfe15e8684137097969c6d22e8316ba66b5baabe4"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:9c27f0946a3536403efb0e1c28def1ae6730a72cd0d5878db38824855e3afc44"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-win32.whl", hash = "sha256:63b92c512d9dbcc37f9d81b123dec99fdb318ba38c8059afc78086fe73820275"},\\\\n    {file = "numpy-2.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:3f6bed7f840d44c08ebdb73b1825282b801799e325bcbdfa6bc5c370e5aecc65"},\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:9416a5c2e92ace094e9f0082c5fd473502c91651fb896bc17690d6fc475128d6"},\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_14_0_x86_64.whl", hash = "sha256:17067d097ed036636fa79f6a869ac26df7db1ba22039d962422506640314933a"},\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:38ecb5b0582cd125f67a629072fed6f83562d9dd04d7e03256c9829bdec027ad"},\\\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:cef04d068f5fb0518a77857953193b6bb94809a806bd0a14983a8f12ada060c9"},\\\\n    {file = "numpy-2.0.0.tar.gz", hash = "sha256:cf5d1c9e6837f8af9f92b6bd3e86d513cdc11f60fd62185cc49ec7d1aba34864"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "packaging"\\\\nversion = "23.2"\\\\ndescription = "Core utilities for Python packages"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "packaging-23.2-py3-none-any.whl", hash = "sha256:8c491190033a9af7e1d931d0b5dacc2ef47509b34dd0de67ed209b5203fc88c7"},\\\\n    {file = "packaging-23.2.tar.gz", hash = "sha256:048fb0e9405036518eaaf48a55953c750c11e1a1b68e0dd1a9d62ed0c092cfc5"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "pandas"\\\\nversion = "2.2.2"\\\\ndescription = "Powerful data structures for data analysis, time series, and statistics"\\\\noptional = false\\\\npython-versions = ">=3.9"\\\\nfiles = [\\\\n    {file = "pandas-2.2.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:90c6fca2acf139569e74e8781709dccb6fe25940488755716d1d354d6bc58bce"},\\\\n    {file = "pandas-2.2.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:c7adfc142dac335d8c1e0dcbd37eb8617eac386596eb9e1a1b77791cf2498238"},\\\\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4abfe0be0d7221be4f12552995e58723c7422c80a659da13ca382697de830c08"},\\\\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8635c16bf3d99040fdf3ca3db669a7250ddf49c55dc4aa8fe0ae0fa8d6dcc1f0"},\\\\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:40ae1dffb3967a52203105a077415a86044a2bea011b5f321c6aa64b379a3f51"},\\\\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:8e5a0b00e1e56a842f922e7fae8ae4077aee4af0acb5ae3622bd4b4c30aedf99"},\\\\n    {file = "pandas-2.2.2-cp310-cp310-win_amd64.whl", hash = "sha256:ddf818e4e6c7c6f4f7c8a12709696d193976b591cc7dc50588d3d1a6b5dc8772"},\\\\n    {file = "pandas-2.2.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:696039430f7a562b74fa45f540aca068ea85fa34c244d0deee539cb6d70aa288"},\\\\n    {file = "pandas-2.2.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:8e90497254aacacbc4ea6ae5e7a8cd75629d6ad2b30025a4a8b09aa4faf55151"},\\\\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:58b84b91b0b9f4bafac2a0ac55002280c094dfc6402402332c0913a59654ab2b"},\\\\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d2123dc9ad6a814bcdea0f099885276b31b24f7edf40f6cdbc0912672e22eee"},\\\\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:2925720037f06e89af896c70bca73459d7e6a4be96f9de79e2d440bd499fe0db"},\\\\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:0cace394b6ea70c01ca1595f839cf193df35d1575986e484ad35c4aeae7266c1"},\\\\n    {file = "pandas-2.2.2-cp311-cp311-win_amd64.whl", hash = "sha256:873d13d177501a28b2756375d59816c365e42ed8417b41665f346289adc68d24"},\\\\n    {file = "pandas-2.2.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:9dfde2a0ddef507a631dc9dc4af6a9489d5e2e740e226ad426a05cabfbd7c8ef"},\\\\n    {file = "pandas-2.2.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:e9b79011ff7a0f4b1d6da6a61aa1aa604fb312d6647de5bad20013682d1429ce"},\\\\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cb51fe389360f3b5a4d57dbd2848a5f033350336ca3b340d1c53a1fad33bcad"},\\\\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:eee3a87076c0756de40b05c5e9a6069c035ba43e8dd71c379e68cab2c20f16ad"},\\\\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:3e374f59e440d4ab45ca2fffde54b81ac3834cf5ae2cdfa69c90bc03bde04d76"},\\\\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:43498c0bdb43d55cb162cdc8c06fac328ccb5d2eabe3cadeb3529ae6f0517c32"},\\\\n    {file = "pandas-2.2.2-cp312-cp312-win_amd64.whl", hash = "sha256:d187d355ecec3629624fccb01d104da7d7f391db0311145817525281e2804d23"},\\\\n    {file = "pandas-2.2.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:0ca6377b8fca51815f382bd0b697a0814c8bda55115678cbc94c30aacbb6eff2"},\\\\n    {file = "pandas-2.2.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9057e6aa78a584bc93a13f0a9bf7e753a5e9770a30b4d758b8d5f2a62a9433cd"},\\\\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:001910ad31abc7bf06f49dcc903755d2f7f3a9186c0c040b827e522e9cef0863"},\\\\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:66b479b0bd07204e37583c191535505410daa8df638fd8e75ae1b383851fe921"},\\\\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:a77e9d1c386196879aa5eb712e77461aaee433e54c68cf253053a73b7e49c33a"},\\\\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:92fd6b027924a7e178ac202cfbe25e53368db90d56872d20ffae94b96c7acc57"},\\\\n    {file = "pandas-2.2.2-cp39-cp39-win_amd64.whl", hash = "sha256:640cef9aa381b60e296db324337a554aeeb883ead99dc8f6c18e81a93942f5f4"},\\\\n    {file = "pandas-2.2.2.tar.gz", hash = "sha256:9e79019aba43cb4fda9e4d983f8e88ca0373adbb697ae9c6c43093218de28b54"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nnumpy = {version = ">=1.22.4", markers = "python_version < \\\\\\\\"3.11\\\\\\\\""}\\\\npython-dateutil = ">=2.8.2"\\\\npytz = ">=2020.1"\\\\ntzdata = ">=2022.7"\\\\n\\\\n[package.extras]\\\\nall = ["PyQt5 (>=5.15.9)", "SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)", "beautifulsoup4 (>=4.11.2)", "bottleneck (>=1.3.6)", "dataframe-api-compat (>=0.1.7)", "fastparquet (>=2022.12.0)", "fsspec (>=2022.11.0)", "gcsfs (>=2022.11.0)", "html5lib (>=1.1)", "hypothesis (>=6.46.1)", "jinja2 (>=3.1.2)", "lxml (>=4.9.2)", "matplotlib (>=3.6.3)", "numba (>=0.56.4)", "numexpr (>=2.8.4)", "odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "pandas-gbq (>=0.19.0)", "psycopg2 (>=2.9.6)", "pyarrow (>=10.0.1)", "pymysql (>=1.0.2)", "pyreadstat (>=1.2.0)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "qtpy (>=2.3.0)", "s3fs (>=2022.11.0)", "scipy (>=1.10.0)", "tables (>=3.8.0)", "tabulate (>=0.9.0)", "xarray (>=2022.12.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)", "zstandard (>=0.19.0)"]\\\\naws = ["s3fs (>=2022.11.0)"]\\\\nclipboard = ["PyQt5 (>=5.15.9)", "qtpy (>=2.3.0)"]\\\\ncompression = ["zstandard (>=0.19.0)"]\\\\ncomputation = ["scipy (>=1.10.0)", "xarray (>=2022.12.0)"]\\\\nconsortium-standard = ["dataframe-api-compat (>=0.1.7)"]\\\\nexcel = ["odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)"]\\\\nfeather = ["pyarrow (>=10.0.1)"]\\\\nfss = ["fsspec (>=2022.11.0)"]\\\\ngcp = ["gcsfs (>=2022.11.0)", "pandas-gbq (>=0.19.0)"]\\\\nhdf5 = ["tables (>=3.8.0)"]\\\\nhtml = ["beautifulsoup4 (>=4.11.2)", "html5lib (>=1.1)", "lxml (>=4.9.2)"]\\\\nmysql = ["SQLAlchemy (>=2.0.0)", "pymysql (>=1.0.2)"]\\\\noutput-formatting = ["jinja2 (>=3.1.2)", "tabulate (>=0.9.0)"]\\\\nparquet = ["pyarrow (>=10.0.1)"]\\\\nperformance = ["bottleneck (>=1.3.6)", "numba (>=0.56.4)", "numexpr (>=2.8.4)"]\\\\nplot = ["matplotlib (>=3.6.3)"]\\\\npostgresql = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "psycopg2 (>=2.9.6)"]\\\\npyarrow = ["pyarrow (>=10.0.1)"]\\\\nspss = ["pyreadstat (>=1.2.0)"]\\\\nsql-other = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)"]\\\\ntest = ["hypothesis (>=6.46.1)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)"]\\\\nxml = ["lxml (>=4.9.2)"]\\\\n\\\\n[[package]]\\\\nname = "pillow"\\\\nversion = "10.0.1"\\\\ndescription = "Python Imaging Library (Fork)"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_10_10_x86_64.whl", hash = "sha256:8f06be50669087250f319b706decf69ca71fdecd829091a37cc89398ca4dc17a"},\\\\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:50bd5f1ebafe9362ad622072a1d2f5850ecfa44303531ff14353a4059113b12d"},\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e6a90167bcca1216606223a05e2cf991bb25b14695c518bc65639463d7db722d"},\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f11c9102c56ffb9ca87134bd025a43d2aba3f1155f508eff88f694b33a9c6d19"},\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:186f7e04248103482ea6354af6d5bcedb62941ee08f7f788a1c7707bc720c66f"},\\\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:0462b1496505a3462d0f35dc1c4d7b54069747d65d00ef48e736acda2c8cbdff"},\\\\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:d889b53ae2f030f756e61a7bff13684dcd77e9af8b10c6048fb2c559d6ed6eaf"},\\\\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:552912dbca585b74d75279a7570dd29fa43b6d93594abb494ebb31ac19ace6bd"},\\\\n    {file = "Pillow-10.0.1-cp310-cp310-win_amd64.whl", hash = "sha256:787bb0169d2385a798888e1122c980c6eff26bf941a8ea79747d35d8f9210ca0"},\\\\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_10_10_x86_64.whl", hash = "sha256:fd2a5403a75b54661182b75ec6132437a181209b901446ee5724b589af8edef1"},\\\\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:2d7e91b4379f7a76b31c2dda84ab9e20c6220488e50f7822e59dac36b0cd92b1"},\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:19e9adb3f22d4c416e7cd79b01375b17159d6990003633ff1d8377e21b7f1b21"},\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:93139acd8109edcdeffd85e3af8ae7d88b258b3a1e13a038f542b79b6d255c54"},\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:92a23b0431941a33242b1f0ce6c88a952e09feeea9af4e8be48236a68ffe2205"},\\\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:cbe68deb8580462ca0d9eb56a81912f59eb4542e1ef8f987405e35a0179f4ea2"},\\\\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:522ff4ac3aaf839242c6f4e5b406634bfea002469656ae8358644fc6c4856a3b"},\\\\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:84efb46e8d881bb06b35d1d541aa87f574b58e87f781cbba8d200daa835b42e1"},\\\\n    {file = "Pillow-10.0.1-cp311-cp311-win_amd64.whl", hash = "sha256:898f1d306298ff40dc1b9ca24824f0488f6f039bc0e25cfb549d3195ffa17088"},\\\\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_10_10_x86_64.whl", hash = "sha256:bcf1207e2f2385a576832af02702de104be71301c2696d0012b1b93fe34aaa5b"},\\\\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:5d6c9049c6274c1bb565021367431ad04481ebb54872edecfcd6088d27edd6ed"},\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:28444cb6ad49726127d6b340217f0627abc8732f1194fd5352dec5e6a0105635"},\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:de596695a75496deb3b499c8c4f8e60376e0516e1a774e7bc046f0f48cd620ad"},\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_aarch64.whl", hash = "sha256:2872f2d7846cf39b3dbff64bc1104cc48c76145854256451d33c5faa55c04d1a"},\\\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_x86_64.whl", hash = "sha256:4ce90f8a24e1c15465048959f1e94309dfef93af272633e8f37361b824532e91"},\\\\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:ee7810cf7c83fa227ba9125de6084e5e8b08c59038a7b2c9045ef4dde61663b4"},\\\\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:b1be1c872b9b5fcc229adeadbeb51422a9633abd847c0ff87dc4ef9bb184ae08"},\\\\n    {file = "Pillow-10.0.1-cp312-cp312-win_amd64.whl", hash = "sha256:98533fd7fa764e5f85eebe56c8e4094db912ccbe6fbf3a58778d543cadd0db08"},\\\\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_10_10_x86_64.whl", hash = "sha256:764d2c0daf9c4d40ad12fbc0abd5da3af7f8aa11daf87e4fa1b834000f4b6b0a"},\\\\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:fcb59711009b0168d6ee0bd8fb5eb259c4ab1717b2f538bbf36bacf207ef7a68"},\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:697a06bdcedd473b35e50a7e7506b1d8ceb832dc238a336bd6f4f5aa91a4b500"},\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9f665d1e6474af9f9da5e86c2a3a2d2d6204e04d5af9c06b9d42afa6ebde3f21"},\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:2fa6dd2661838c66f1a5473f3b49ab610c98a128fc08afbe81b91a1f0bf8c51d"},\\\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:3a04359f308ebee571a3127fdb1bd01f88ba6f6fb6d087f8dd2e0d9bff43f2a7"},\\\\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:723bd25051454cea9990203405fa6b74e043ea76d4968166dfd2569b0210886a"},\\\\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:71671503e3015da1b50bd18951e2f9daf5b6ffe36d16f1eb2c45711a301521a7"},\\\\n    {file = "Pillow-10.0.1-cp38-cp38-win_amd64.whl", hash = "sha256:44e7e4587392953e5e251190a964675f61e4dae88d1e6edbe9f36d6243547ff3"},\\\\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_10_10_x86_64.whl", hash = "sha256:3855447d98cced8670aaa63683808df905e956f00348732448b5a6df67ee5849"},\\\\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:ed2d9c0704f2dc4fa980b99d565c0c9a543fe5101c25b3d60488b8ba80f0cce1"},\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:f5bb289bb835f9fe1a1e9300d011eef4d69661bb9b34d5e196e5e82c4cb09b37"},\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3a0d3e54ab1df9df51b914b2233cf779a5a10dfd1ce339d0421748232cea9876"},\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:2cc6b86ece42a11f16f55fe8903595eff2b25e0358dec635d0a701ac9586588f"},\\\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:ca26ba5767888c84bf5a0c1a32f069e8204ce8c21d00a49c90dabeba00ce0145"},\\\\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:f0b4b06da13275bc02adfeb82643c4a6385bd08d26f03068c2796f60d125f6f2"},\\\\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:bc2e3069569ea9dbe88d6b8ea38f439a6aad8f6e7a6283a38edf61ddefb3a9bf"},\\\\n    {file = "Pillow-10.0.1-cp39-cp39-win_amd64.whl", hash = "sha256:8b451d6ead6e3500b6ce5c7916a43d8d8d25ad74b9102a629baccc0808c54971"},\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-macosx_10_10_x86_64.whl", hash = "sha256:32bec7423cdf25c9038fef614a853c9d25c07590e1a870ed471f47fb80b244db"},\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b7cf63d2c6928b51d35dfdbda6f2c1fddbe51a6bc4a9d4ee6ea0e11670dd981e"},\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:f6d3d4c905e26354e8f9d82548475c46d8e0889538cb0657aa9c6f0872a37aa4"},\\\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:847e8d1017c741c735d3cd1883fa7b03ded4f825a6e5fcb9378fd813edee995f"},\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-macosx_10_10_x86_64.whl", hash = "sha256:7f771e7219ff04b79e231d099c0a28ed83aa82af91fd5fa9fdb28f5b8d5addaf"},\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:459307cacdd4138edee3875bbe22a2492519e060660eaf378ba3b405d1c66317"},\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:b059ac2c4c7a97daafa7dc850b43b2d3667def858a4f112d1aa082e5c3d6cf7d"},\\\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:d6caf3cd38449ec3cd8a68b375e0c6fe4b6fd04edb6c9766b55ef84a6e8ddf2d"},\\\\n    {file = "Pillow-10.0.1.tar.gz", hash = "sha256:d72967b06be9300fed5cfbc8b5bafceec48bf7cdc7dab66b1d2549035287191d"},\\\\n]\\\\n\\\\n[package.extras]\\\\ndocs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-removed-in", "sphinxext-opengraph"]\\\\ntests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]\\\\n\\\\n[[package]]\\\\nname = "plotly"\\\\nversion = "5.22.0"\\\\ndescription = "An open-source, interactive data visualization library for Python"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "plotly-5.22.0-py3-none-any.whl", hash = "sha256:68fc1901f098daeb233cc3dd44ec9dc31fb3ca4f4e53189344199c43496ed006"},\\\\n    {file = "plotly-5.22.0.tar.gz", hash = "sha256:859fdadbd86b5770ae2466e542b761b247d1c6b49daed765b95bb8c7063e7469"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\npackaging = "*"\\\\ntenacity = ">=6.2.0"\\\\n\\\\n[[package]]\\\\nname = "protobuf"\\\\nversion = "4.24.4"\\\\ndescription = ""\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "protobuf-4.24.4-cp310-abi3-win32.whl", hash = "sha256:ec9912d5cb6714a5710e28e592ee1093d68c5ebfeda61983b3f40331da0b1ebb"},\\\\n    {file = "protobuf-4.24.4-cp310-abi3-win_amd64.whl", hash = "sha256:1badab72aa8a3a2b812eacfede5020472e16c6b2212d737cefd685884c191085"},\\\\n    {file = "protobuf-4.24.4-cp37-abi3-macosx_10_9_universal2.whl", hash = "sha256:8e61a27f362369c2f33248a0ff6896c20dcd47b5d48239cb9720134bef6082e4"},\\\\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_aarch64.whl", hash = "sha256:bffa46ad9612e6779d0e51ae586fde768339b791a50610d85eb162daeb23661e"},\\\\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_x86_64.whl", hash = "sha256:b493cb590960ff863743b9ff1452c413c2ee12b782f48beca77c8da3e2ffe9d9"},\\\\n    {file = "protobuf-4.24.4-cp37-cp37m-win32.whl", hash = "sha256:dbbed8a56e56cee8d9d522ce844a1379a72a70f453bde6243e3c86c30c2a3d46"},\\\\n    {file = "protobuf-4.24.4-cp37-cp37m-win_amd64.whl", hash = "sha256:6b7d2e1c753715dcfe9d284a25a52d67818dd43c4932574307daf836f0071e37"},\\\\n    {file = "protobuf-4.24.4-cp38-cp38-win32.whl", hash = "sha256:02212557a76cd99574775a81fefeba8738d0f668d6abd0c6b1d3adcc75503dbe"},\\\\n    {file = "protobuf-4.24.4-cp38-cp38-win_amd64.whl", hash = "sha256:2fa3886dfaae6b4c5ed2730d3bf47c7a38a72b3a1f0acb4d4caf68e6874b947b"},\\\\n    {file = "protobuf-4.24.4-cp39-cp39-win32.whl", hash = "sha256:b77272f3e28bb416e2071186cb39efd4abbf696d682cbb5dc731308ad37fa6dd"},\\\\n    {file = "protobuf-4.24.4-cp39-cp39-win_amd64.whl", hash = "sha256:9fee5e8aa20ef1b84123bb9232b3f4a5114d9897ed89b4b8142d81924e05d79b"},\\\\n    {file = "protobuf-4.24.4-py3-none-any.whl", hash = "sha256:80797ce7424f8c8d2f2547e2d42bfbb6c08230ce5832d6c099a37335c9c90a92"},\\\\n    {file = "protobuf-4.24.4.tar.gz", hash = "sha256:5a70731910cd9104762161719c3d883c960151eea077134458503723b60e3667"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "pyarrow"\\\\nversion = "13.0.0"\\\\ndescription = "Python library for Apache Arrow"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_10_14_x86_64.whl", hash = "sha256:1afcc2c33f31f6fb25c92d50a86b7a9f076d38acbcb6f9e74349636109550148"},\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:70fa38cdc66b2fc1349a082987f2b499d51d072faaa6b600f71931150de2e0e3"},\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cd57b13a6466822498238877892a9b287b0a58c2e81e4bdb0b596dbb151cbb73"},\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f8ce69f7bf01de2e2764e14df45b8404fc6f1a5ed9871e8e08a12169f87b7a26"},\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:588f0d2da6cf1b1680974d63be09a6530fd1bd825dc87f76e162404779a157dc"},\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:6241afd72b628787b4abea39e238e3ff9f34165273fad306c7acf780dd850956"},\\\\n    {file = "pyarrow-13.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:fda7857e35993673fcda603c07d43889fca60a5b254052a462653f8656c64f44"},\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_10_14_x86_64.whl", hash = "sha256:aac0ae0146a9bfa5e12d87dda89d9ef7c57a96210b899459fc2f785303dcbb67"},\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:d7759994217c86c161c6a8060509cfdf782b952163569606bb373828afdd82e8"},\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:868a073fd0ff6468ae7d869b5fc1f54de5c4255b37f44fb890385eb68b68f95d"},\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:51be67e29f3cfcde263a113c28e96aa04362ed8229cb7c6e5f5c719003659d33"},\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:d1b4e7176443d12610874bb84d0060bf080f000ea9ed7c84b2801df851320295"},\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:69b6f9a089d116a82c3ed819eea8fe67dae6105f0d81eaf0fdd5e60d0c6e0944"},\\\\n    {file = "pyarrow-13.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:ab1268db81aeb241200e321e220e7cd769762f386f92f61b898352dd27e402ce"},\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_10_14_x86_64.whl", hash = "sha256:ee7490f0f3f16a6c38f8c680949551053c8194e68de5046e6c288e396dccee80"},\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:e3ad79455c197a36eefbd90ad4aa832bece7f830a64396c15c61a0985e337287"},\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68fcd2dc1b7d9310b29a15949cdd0cb9bc34b6de767aff979ebf546020bf0ba0"},\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dc6fd330fd574c51d10638e63c0d00ab456498fc804c9d01f2a61b9264f2c5b2"},\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:e66442e084979a97bb66939e18f7b8709e4ac5f887e636aba29486ffbf373763"},\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:0f6eff839a9e40e9c5610d3ff8c5bdd2f10303408312caf4c8003285d0b49565"},\\\\n    {file = "pyarrow-13.0.0-cp38-cp38-win_amd64.whl", hash = "sha256:8b30a27f1cddf5c6efcb67e598d7823a1e253d743d92ac32ec1eb4b6a1417867"},\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_10_14_x86_64.whl", hash = "sha256:09552dad5cf3de2dc0aba1c7c4b470754c69bd821f5faafc3d774bedc3b04bb7"},\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:3896ae6c205d73ad192d2fc1489cd0edfab9f12867c85b4c277af4d37383c18c"},\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6647444b21cb5e68b593b970b2a9a07748dd74ea457c7dadaa15fd469c48ada1"},\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47663efc9c395e31d09c6aacfa860f4473815ad6804311c5433f7085415d62a7"},\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:b9ba6b6d34bd2563345488cf444510588ea42ad5613df3b3509f48eb80250afd"},\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:d00d374a5625beeb448a7fa23060df79adb596074beb3ddc1838adb647b6ef09"},\\\\n    {file = "pyarrow-13.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:c51afd87c35c8331b56f796eff954b9c7f8d4b7fef5903daf4e05fcf017d23a8"},\\\\n    {file = "pyarrow-13.0.0.tar.gz", hash = "sha256:83333726e83ed44b0ac94d8d7a21bbdee4a05029c3b1e8db58a863eec8fd8a33"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nnumpy = ">=1.16.6"\\\\n\\\\n[[package]]\\\\nname = "pydeck"\\\\nversion = "0.8.0"\\\\ndescription = "Widget for deck.gl maps"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "pydeck-0.8.0-py2.py3-none-any.whl", hash = "sha256:a8fa7757c6f24bba033af39db3147cb020eef44012ba7e60d954de187f9ed4d5"},\\\\n    {file = "pydeck-0.8.0.tar.gz", hash = "sha256:07edde833f7cfcef6749124351195aa7dcd24663d4909fd7898dbd0b6fbc01ec"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\njinja2 = ">=2.10.1"\\\\nnumpy = ">=1.16.4"\\\\n\\\\n[package.extras]\\\\ncarto = ["pydeck-carto"]\\\\njupyter = ["ipykernel (>=5.1.2)", "ipython (>=5.8.0)", "ipywidgets (>=7,<8)", "traitlets (>=4.3.2)"]\\\\n\\\\n[[package]]\\\\nname = "pygments"\\\\nversion = "2.16.1"\\\\ndescription = "Pygments is a syntax highlighting package written in Python."\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "Pygments-2.16.1-py3-none-any.whl", hash = "sha256:13fc09fa63bc8d8671a6d247e1eb303c4b343eaee81d861f3404db2935653692"},\\\\n    {file = "Pygments-2.16.1.tar.gz", hash = "sha256:1daff0494820c69bc8941e407aa20f577374ee88364ee10a98fdbe0aece96e29"},\\\\n]\\\\n\\\\n[package.extras]\\\\nplugins = ["importlib-metadata"]\\\\n\\\\n[[package]]\\\\nname = "pymongo"\\\\nversion = "4.7.3"\\\\ndescription = "Python driver for MongoDB <http://www.mongodb.org>"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e9580b4537b3cc5d412070caabd1dabdf73fdce249793598792bac5782ecf2eb"},\\\\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:517243b2b189c98004570dd8fc0e89b1a48363d5578b3b99212fa2098b2ea4b8"},\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:23b1e9dabd61da1c7deb54d888f952f030e9e35046cebe89309b28223345b3d9"},\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:03e0f9901ad66c6fb7da0d303461377524d61dab93a4e4e5af44164c5bb4db76"},\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9a870824aa54453aee030bac08c77ebcf2fe8999400f0c2a065bebcbcd46b7f8"},\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dfd7b3d3f4261bddbb74a332d87581bc523353e62bb9da4027cc7340f6fcbebc"},\\\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4d719a643ea6da46d215a3ba51dac805a773b611c641319558d8576cbe31cef8"},\\\\n    {file = "pymongo-4.7.3-cp310-cp310-win32.whl", hash = "sha256:d8b1e06f361f3c66ee694cb44326e1a2e4f93bc9c3a4849ae8547889fca71154"},\\\\n    {file = "pymongo-4.7.3-cp310-cp310-win_amd64.whl", hash = "sha256:c450ab2f9397e2d5caa7fddeb4feb30bf719c47c13ae02c0bbb3b71bf4099c1c"},\\\\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:79cc6459209e885ba097779eaa0fe7f2fa049db39ab43b1731cf8d065a4650e8"},\\\\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:6e2287f1e2cc35e73cd74a4867e398a97962c5578a3991c730ef78d276ca8e46"},\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:413506bd48d8c31ee100645192171e4773550d7cb940b594d5175ac29e329ea1"},\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1cc1febf17646d52b7561caa762f60bdfe2cbdf3f3e70772f62eb624269f9c05"},\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:8dfcf18a49955d50a16c92b39230bd0668ffc9c164ccdfe9d28805182b48fa72"},\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:89872041196c008caddf905eb59d3dc2d292ae6b0282f1138418e76f3abd3ad6"},\\\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d3ed97b89de62ea927b672ad524de0d23f3a6b4a01c8d10e3d224abec973fbc3"},\\\\n    {file = "pymongo-4.7.3-cp311-cp311-win32.whl", hash = "sha256:d2f52b38151e946011d888a8441d3d75715c663fc5b41a7ade595e924e12a90a"},\\\\n    {file = "pymongo-4.7.3-cp311-cp311-win_amd64.whl", hash = "sha256:4a4cc91c28e81c0ce03d3c278e399311b0af44665668a91828aec16527082676"},\\\\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:cb30c8a78f5ebaca98640943447b6a0afcb146f40b415757c9047bf4a40d07b4"},\\\\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:9cf2069f5d37c398186453589486ea98bb0312214c439f7d320593b61880dc05"},\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3564f423958fced8a8c90940fd2f543c27adbcd6c7c6ed6715d847053f6200a0"},\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:7a8af8a38fa6951fff73e6ff955a6188f829b29fed7c5a1b739a306b4aa56fe8"},\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3a0e81c8dba6d825272867d487f18764cfed3c736d71d7d4ff5b79642acbed42"},\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:88fc1d146feabac4385ea8ddb1323e584922922641303c8bf392fe1c36803463"},\\\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4225100b2c5d1f7393d7c5d256ceb8b20766830eecf869f8ae232776347625a6"},\\\\n    {file = "pymongo-4.7.3-cp312-cp312-win32.whl", hash = "sha256:5f3569ed119bf99c0f39ac9962fb5591eff02ca210fe80bb5178d7a1171c1b1e"},\\\\n    {file = "pymongo-4.7.3-cp312-cp312-win_amd64.whl", hash = "sha256:eb383c54c0c8ba27e7712b954fcf2a0905fee82a929d277e2e94ad3a5ba3c7db"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:a46cffe91912570151617d866a25d07b9539433a32231ca7e7cf809b6ba1745f"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4c3cba427dac50944c050c96d958c5e643c33a457acee03bae27c8990c5b9c16"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:a7a5fd893edbeb7fa982f8d44b6dd0186b6cd86c89e23f6ef95049ff72bffe46"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c168a2fadc8b19071d0a9a4f85fe38f3029fe22163db04b4d5c046041c0b14bd"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2c59c2c9e70f63a7f18a31e367898248c39c068c639b0579623776f637e8f482"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d08165fd82c89d372e82904c3268bd8fe5de44f92a00e97bb1db1785154397d9"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:397fed21afec4fdaecf72f9c4344b692e489756030a9c6d864393e00c7e80491"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:f903075f8625e2d228f1b9b9a0cf1385f1c41e93c03fd7536c91780a0fb2e98f"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-win32.whl", hash = "sha256:8ed1132f58c38add6b6138b771d0477a3833023c015c455d9a6e26f367f9eb5c"},\\\\n    {file = "pymongo-4.7.3-cp37-cp37m-win_amd64.whl", hash = "sha256:8d00a5d8fc1043a4f641cbb321da766699393f1b6f87c70fae8089d61c9c9c54"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:9377b868c38700c7557aac1bc4baae29f47f1d279cc76b60436e547fd643318c"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:da4a6a7b4f45329bb135aa5096823637bd5f760b44d6224f98190ee367b6b5dd"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:487e2f9277f8a63ac89335ec4f1699ae0d96ebd06d239480d69ed25473a71b2c"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6db3d608d541a444c84f0bfc7bad80b0b897e0f4afa580a53f9a944065d9b633"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e90af2ad3a8a7c295f4d09a2fbcb9a350c76d6865f787c07fe843b79c6e821d1"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8e28feb18dc559d50ededba27f9054c79f80c4edd70a826cecfe68f3266807b3"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:f21ecddcba2d9132d5aebd8e959de8d318c29892d0718420447baf2b9bccbb19"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:26140fbb3f6a9a74bd73ed46d0b1f43d5702e87a6e453a31b24fad9c19df9358"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:94baa5fc7f7d22c3ce2ac7bd92f7e03ba7a6875f2480e3b97a400163d6eaafc9"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-win32.whl", hash = "sha256:92dd247727dd83d1903e495acc743ebd757f030177df289e3ba4ef8a8c561fad"},\\\\n    {file = "pymongo-4.7.3-cp38-cp38-win_amd64.whl", hash = "sha256:1c90c848a5e45475731c35097f43026b88ef14a771dfd08f20b67adc160a3f79"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:f598be401b416319a535c386ac84f51df38663f7a9d1071922bda4d491564422"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:35ba90477fae61c65def6e7d09e8040edfdd3b7fd47c3c258b4edded60c4d625"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9aa8735955c70892634d7e61b0ede9b1eefffd3cd09ccabee0ffcf1bdfe62254"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:82a97d8f7f138586d9d0a0cff804a045cdbbfcfc1cd6bba542b151e284fbbec5"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:de3b9db558930efab5eaef4db46dcad8bf61ac3ddfd5751b3e5ac6084a25e366"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0e149217ef62812d3c2401cf0e2852b0c57fd155297ecc4dcd67172c4eca402"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:b3a8a1ef4a824f5feb793b3231526d0045eadb5eb01080e38435dfc40a26c3e5"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d14e5e89a4be1f10efc3d9dcb13eb7a3b2334599cb6bb5d06c6a9281b79c8e22"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:c6bfa29f032fd4fd7b129520f8cdb51ab71d88c2ba0567cccd05d325f963acb5"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-win32.whl", hash = "sha256:1421d0bd2ce629405f5157bd1aaa9b83f12d53a207cf68a43334f4e4ee312b66"},\\\\n    {file = "pymongo-4.7.3-cp39-cp39-win_amd64.whl", hash = "sha256:f7ee974f8b9370a998919c55b1050889f43815ab588890212023fecbc0402a6d"},\\\\n    {file = "pymongo-4.7.3.tar.gz", hash = "sha256:6354a66b228f2cd399be7429685fb68e07f19110a3679782ecb4fdb68da03831"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\ndnspython = ">=1.16.0,<3.0.0"\\\\n\\\\n[package.extras]\\\\naws = ["pymongo-auth-aws (>=1.1.0,<2.0.0)"]\\\\nencryption = ["certifi", "pymongo-auth-aws (>=1.1.0,<2.0.0)", "pymongocrypt (>=1.6.0,<2.0.0)"]\\\\ngssapi = ["pykerberos", "winkerberos (>=0.5.0)"]\\\\nocsp = ["certifi", "cryptography (>=2.5)", "pyopenssl (>=17.2.0)", "requests (<3.0.0)", "service-identity (>=18.1.0)"]\\\\nsnappy = ["python-snappy"]\\\\ntest = ["pytest (>=7)"]\\\\nzstd = ["zstandard"]\\\\n\\\\n[[package]]\\\\nname = "python-dateutil"\\\\nversion = "2.8.2"\\\\ndescription = "Extensions to the standard Python datetime module"\\\\noptional = false\\\\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"\\\\nfiles = [\\\\n    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},\\\\n    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nsix = ">=1.5"\\\\n\\\\n[[package]]\\\\nname = "pytz"\\\\nversion = "2023.3.post1"\\\\ndescription = "World timezone definitions, modern and historical"\\\\noptional = false\\\\npython-versions = "*"\\\\nfiles = [\\\\n    {file = "pytz-2023.3.post1-py2.py3-none-any.whl", hash = "sha256:ce42d816b81b68506614c11e8937d3aa9e41007ceb50bfdcb0749b921bf646c7"},\\\\n    {file = "pytz-2023.3.post1.tar.gz", hash = "sha256:7b4fddbeb94a1eba4b557da24f19fdf9db575192544270a9101d8509f9f43d7b"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "referencing"\\\\nversion = "0.30.2"\\\\ndescription = "JSON Referencing + Python"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "referencing-0.30.2-py3-none-any.whl", hash = "sha256:449b6669b6121a9e96a7f9e410b245d471e8d48964c67113ce9afe50c8dd7bdf"},\\\\n    {file = "referencing-0.30.2.tar.gz", hash = "sha256:794ad8003c65938edcdbc027f1933215e0d0ccc0291e3ce20a4d87432b59efc0"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nattrs = ">=22.2.0"\\\\nrpds-py = ">=0.7.0"\\\\n\\\\n[[package]]\\\\nname = "requests"\\\\nversion = "2.32.3"\\\\ndescription = "Python HTTP for Humans."\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "requests-2.32.3-py3-none-any.whl", hash = "sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6"},\\\\n    {file = "requests-2.32.3.tar.gz", hash = "sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\ncertifi = ">=2017.4.17"\\\\ncharset-normalizer = ">=2,<4"\\\\nidna = ">=2.5,<4"\\\\nurllib3 = ">=1.21.1,<3"\\\\n\\\\n[package.extras]\\\\nsocks = ["PySocks (>=1.5.6,!=1.5.7)"]\\\\nuse-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]\\\\n\\\\n[[package]]\\\\nname = "rich"\\\\nversion = "13.6.0"\\\\ndescription = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"\\\\noptional = false\\\\npython-versions = ">=3.7.0"\\\\nfiles = [\\\\n    {file = "rich-13.6.0-py3-none-any.whl", hash = "sha256:2b38e2fe9ca72c9a00170a1a2d20c63c790d0e10ef1fe35eba76e1e7b1d7d245"},\\\\n    {file = "rich-13.6.0.tar.gz", hash = "sha256:5c14d22737e6d5084ef4771b62d5d4363165b403455a30a1c8ca39dc7b644bef"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nmarkdown-it-py = ">=2.2.0"\\\\npygments = ">=2.13.0,<3.0.0"\\\\n\\\\n[package.extras]\\\\njupyter = ["ipywidgets (>=7.5.1,<9)"]\\\\n\\\\n[[package]]\\\\nname = "rpds-py"\\\\nversion = "0.10.6"\\\\ndescription = "Python bindings to Rust\\\\\\\'s persistent data structures (rpds)"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_10_7_x86_64.whl", hash = "sha256:6bdc11f9623870d75692cc33c59804b5a18d7b8a4b79ef0b00b773a27397d1f6"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:26857f0f44f0e791f4a266595a7a09d21f6b589580ee0585f330aaccccb836e3"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7f5e15c953ace2e8dde9824bdab4bec50adb91a5663df08d7d994240ae6fa31"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:61fa268da6e2e1cd350739bb61011121fa550aa2545762e3dc02ea177ee4de35"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c48f3fbc3e92c7dd6681a258d22f23adc2eb183c8cb1557d2fcc5a024e80b094"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c0503c5b681566e8b722fe8c4c47cce5c7a51f6935d5c7012c4aefe952a35eed"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:734c41f9f57cc28658d98270d3436dba65bed0cfc730d115b290e970150c540d"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:a5d7ed104d158c0042a6a73799cf0eb576dfd5fc1ace9c47996e52320c37cb7c"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:e3df0bc35e746cce42579826b89579d13fd27c3d5319a6afca9893a9b784ff1b"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:73e0a78a9b843b8c2128028864901f55190401ba38aae685350cf69b98d9f7c9"},\\\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:5ed505ec6305abd2c2c9586a7b04fbd4baf42d4d684a9c12ec6110deefe2a063"},\\\\n    {file = "rpds_py-0.10.6-cp310-none-win32.whl", hash = "sha256:d97dd44683802000277bbf142fd9f6b271746b4846d0acaf0cefa6b2eaf2a7ad"},\\\\n    {file = "rpds_py-0.10.6-cp310-none-win_amd64.whl", hash = "sha256:b455492cab07107bfe8711e20cd920cc96003e0da3c1f91297235b1603d2aca7"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_10_7_x86_64.whl", hash = "sha256:e8cdd52744f680346ff8c1ecdad5f4d11117e1724d4f4e1874f3a67598821069"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:66414dafe4326bca200e165c2e789976cab2587ec71beb80f59f4796b786a238"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cc435d059f926fdc5b05822b1be4ff2a3a040f3ae0a7bbbe672babb468944722"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:8e7f2219cb72474571974d29a191714d822e58be1eb171f229732bc6fdedf0ac"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:3953c6926a63f8ea5514644b7afb42659b505ece4183fdaaa8f61d978754349e"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:2bb2e4826be25e72013916eecd3d30f66fd076110de09f0e750163b416500721"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:7bf347b495b197992efc81a7408e9a83b931b2f056728529956a4d0858608b80"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:102eac53bb0bf0f9a275b438e6cf6904904908562a1463a6fc3323cf47d7a532"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:40f93086eef235623aa14dbddef1b9fb4b22b99454cb39a8d2e04c994fb9868c"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:e22260a4741a0e7a206e175232867b48a16e0401ef5bce3c67ca5b9705879066"},\\\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:f4e56860a5af16a0fcfa070a0a20c42fbb2012eed1eb5ceeddcc7f8079214281"},\\\\n    {file = "rpds_py-0.10.6-cp311-none-win32.whl", hash = "sha256:0774a46b38e70fdde0c6ded8d6d73115a7c39d7839a164cc833f170bbf539116"},\\\\n    {file = "rpds_py-0.10.6-cp311-none-win_amd64.whl", hash = "sha256:4a5ee600477b918ab345209eddafde9f91c0acd931f3776369585a1c55b04c57"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_10_7_x86_64.whl", hash = "sha256:5ee97c683eaface61d38ec9a489e353d36444cdebb128a27fe486a291647aff6"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:0713631d6e2d6c316c2f7b9320a34f44abb644fc487b77161d1724d883662e31"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b5a53f5998b4bbff1cb2e967e66ab2addc67326a274567697379dd1e326bded7"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6a555ae3d2e61118a9d3e549737bb4a56ff0cec88a22bd1dfcad5b4e04759175"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:945eb4b6bb8144909b203a88a35e0a03d22b57aefb06c9b26c6e16d72e5eb0f0"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:52c215eb46307c25f9fd2771cac8135d14b11a92ae48d17968eda5aa9aaf5071"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c1b3cd23d905589cb205710b3988fc8f46d4a198cf12862887b09d7aaa6bf9b9"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:64ccc28683666672d7c166ed465c09cee36e306c156e787acef3c0c62f90da5a"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:516a611a2de12fbea70c78271e558f725c660ce38e0006f75139ba337d56b1f6"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:9ff93d3aedef11f9c4540cf347f8bb135dd9323a2fc705633d83210d464c579d"},\\\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:d858532212f0650be12b6042ff4378dc2efbb7792a286bee4489eaa7ba010586"},\\\\n    {file = "rpds_py-0.10.6-cp312-none-win32.whl", hash = "sha256:3c4eff26eddac49d52697a98ea01b0246e44ca82ab09354e94aae8823e8bda02"},\\\\n    {file = "rpds_py-0.10.6-cp312-none-win_amd64.whl", hash = "sha256:150eec465dbc9cbca943c8e557a21afdcf9bab8aaabf386c44b794c2f94143d2"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_10_7_x86_64.whl", hash = "sha256:cf693eb4a08eccc1a1b636e4392322582db2a47470d52e824b25eca7a3977b53"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4134aa2342f9b2ab6c33d5c172e40f9ef802c61bb9ca30d21782f6e035ed0043"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e782379c2028a3611285a795b89b99a52722946d19fc06f002f8b53e3ea26ea9"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2f6da6d842195fddc1cd34c3da8a40f6e99e4a113918faa5e60bf132f917c247"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:b4a9fe992887ac68256c930a2011255bae0bf5ec837475bc6f7edd7c8dfa254e"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b788276a3c114e9f51e257f2a6f544c32c02dab4aa7a5816b96444e3f9ffc336"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:caa1afc70a02645809c744eefb7d6ee8fef7e2fad170ffdeacca267fd2674f13"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bddd4f91eede9ca5275e70479ed3656e76c8cdaaa1b354e544cbcf94c6fc8ac4"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:775049dfa63fb58293990fc59473e659fcafd953bba1d00fc5f0631a8fd61977"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_i686.whl", hash = "sha256:c6c45a2d2b68c51fe3d9352733fe048291e483376c94f7723458cfd7b473136b"},\\\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:0699ab6b8c98df998c3eacf51a3b25864ca93dab157abe358af46dc95ecd9801"},\\\\n    {file = "rpds_py-0.10.6-cp38-none-win32.whl", hash = "sha256:ebdab79f42c5961682654b851f3f0fc68e6cc7cd8727c2ac4ffff955154123c1"},\\\\n    {file = "rpds_py-0.10.6-cp38-none-win_amd64.whl", hash = "sha256:24656dc36f866c33856baa3ab309da0b6a60f37d25d14be916bd3e79d9f3afcf"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_10_7_x86_64.whl", hash = "sha256:0898173249141ee99ffcd45e3829abe7bcee47d941af7434ccbf97717df020e5"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9e9184fa6c52a74a5521e3e87badbf9692549c0fcced47443585876fcc47e469"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5752b761902cd15073a527b51de76bbae63d938dc7c5c4ad1e7d8df10e765138"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:99a57006b4ec39dbfb3ed67e5b27192792ffb0553206a107e4aadb39c5004cd5"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:09586f51a215d17efdb3a5f090d7cbf1633b7f3708f60a044757a5d48a83b393"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e225a6a14ecf44499aadea165299092ab0cba918bb9ccd9304eab1138844490b"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b2039f8d545f20c4e52713eea51a275e62153ee96c8035a32b2abb772b6fc9e5"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:34ad87a831940521d462ac11f1774edf867c34172010f5390b2f06b85dcc6014"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:dcdc88b6b01015da066da3fb76545e8bb9a6880a5ebf89e0f0b2e3ca557b3ab7"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:25860ed5c4e7f5e10c496ea78af46ae8d8468e0be745bd233bab9ca99bfd2647"},\\\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:7854a207ef77319ec457c1eb79c361b48807d252d94348305db4f4b62f40f7f3"},\\\\n    {file = "rpds_py-0.10.6-cp39-none-win32.whl", hash = "sha256:e6fcc026a3f27c1282c7ed24b7fcac82cdd70a0e84cc848c0841a3ab1e3dea2d"},\\\\n    {file = "rpds_py-0.10.6-cp39-none-win_amd64.whl", hash = "sha256:e98c4c07ee4c4b3acf787e91b27688409d918212dfd34c872201273fdd5a0e18"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_10_7_x86_64.whl", hash = "sha256:68fe9199184c18d997d2e4293b34327c0009a78599ce703e15cd9a0f47349bba"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:3339eca941568ed52d9ad0f1b8eb9fe0958fa245381747cecf2e9a78a5539c42"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a360cfd0881d36c6dc271992ce1eda65dba5e9368575663de993eeb4523d895f"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:031f76fc87644a234883b51145e43985aa2d0c19b063e91d44379cd2786144f8"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1f36a9d751f86455dc5278517e8b65580eeee37d61606183897f122c9e51cef3"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:052a832078943d2b2627aea0d19381f607fe331cc0eb5df01991268253af8417"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:023574366002bf1bd751ebaf3e580aef4a468b3d3c216d2f3f7e16fdabd885ed"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:defa2c0c68734f4a82028c26bcc85e6b92cced99866af118cd6a89b734ad8e0d"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:879fb24304ead6b62dbe5034e7b644b71def53c70e19363f3c3be2705c17a3b4"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_i686.whl", hash = "sha256:53c43e10d398e365da2d4cc0bcaf0854b79b4c50ee9689652cdc72948e86f487"},\\\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:3777cc9dea0e6c464e4b24760664bd8831738cc582c1d8aacf1c3f546bef3f65"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_10_7_x86_64.whl", hash = "sha256:40578a6469e5d1df71b006936ce95804edb5df47b520c69cf5af264d462f2cbb"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_11_0_arm64.whl", hash = "sha256:cf71343646756a072b85f228d35b1d7407da1669a3de3cf47f8bbafe0c8183a4"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:10f32b53f424fc75ff7b713b2edb286fdbfc94bf16317890260a81c2c00385dc"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:81de24a1c51cfb32e1fbf018ab0bdbc79c04c035986526f76c33e3f9e0f3356c"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ac17044876e64a8ea20ab132080ddc73b895b4abe9976e263b0e30ee5be7b9c2"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5e8a78bd4879bff82daef48c14d5d4057f6856149094848c3ed0ecaf49f5aec2"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:78ca33811e1d95cac8c2e49cb86c0fb71f4d8409d8cbea0cb495b6dbddb30a55"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:c63c3ef43f0b3fb00571cff6c3967cc261c0ebd14a0a134a12e83bdb8f49f21f"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:7fde6d0e00b2fd0dbbb40c0eeec463ef147819f23725eda58105ba9ca48744f4"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_i686.whl", hash = "sha256:79edd779cfc46b2e15b0830eecd8b4b93f1a96649bcb502453df471a54ce7977"},\\\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:9164ec8010327ab9af931d7ccd12ab8d8b5dc2f4c6a16cbdd9d087861eaaefa1"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_10_7_x86_64.whl", hash = "sha256:d29ddefeab1791e3c751e0189d5f4b3dbc0bbe033b06e9c333dca1f99e1d523e"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:30adb75ecd7c2a52f5e76af50644b3e0b5ba036321c390b8e7ec1bb2a16dd43c"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:dd609fafdcdde6e67a139898196698af37438b035b25ad63704fd9097d9a3482"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6eef672de005736a6efd565577101277db6057f65640a813de6c2707dc69f396"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6cf4393c7b41abbf07c88eb83e8af5013606b1cdb7f6bc96b1b3536b53a574b8"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:ad857f42831e5b8d41a32437f88d86ead6c191455a3499c4b6d15e007936d4cf"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1d7360573f1e046cb3b0dceeb8864025aa78d98be4bb69f067ec1c40a9e2d9df"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d08f63561c8a695afec4975fae445245386d645e3e446e6f260e81663bfd2e38"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:f0f17f2ce0f3529177a5fff5525204fad7b43dd437d017dd0317f2746773443d"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_i686.whl", hash = "sha256:442626328600bde1d09dc3bb00434f5374948838ce75c41a52152615689f9403"},\\\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:e9616f5bd2595f7f4a04b67039d890348ab826e943a9bfdbe4938d0eba606971"},\\\\n    {file = "rpds_py-0.10.6.tar.gz", hash = "sha256:4ce5a708d65a8dbf3748d2474b580d606b1b9f91b5c6ab2a316e0b0cf7a4ba50"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "six"\\\\nversion = "1.16.0"\\\\ndescription = "Python 2 and 3 compatibility utilities"\\\\noptional = false\\\\npython-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"\\\\nfiles = [\\\\n    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},\\\\n    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "smmap"\\\\nversion = "5.0.1"\\\\ndescription = "A pure Python implementation of a sliding window memory map manager"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "smmap-5.0.1-py3-none-any.whl", hash = "sha256:e6d8668fa5f93e706934a62d7b4db19c8d9eb8cf2adbb75ef1b675aa332b69da"},\\\\n    {file = "smmap-5.0.1.tar.gz", hash = "sha256:dceeb6c0028fdb6734471eb07c0cd2aae706ccaecab45965ee83f11c8d3b1f62"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "streamlit"\\\\nversion = "1.36.0"\\\\ndescription = "A faster way to build and share data apps"\\\\noptional = false\\\\npython-versions = "!=3.9.7,>=3.8"\\\\nfiles = [\\\\n    {file = "streamlit-1.36.0-py2.py3-none-any.whl", hash = "sha256:3399a33ea5faa26c05dd433d142eefe68ade67e9189a9e1d47a1731ae30a1c42"},\\\\n    {file = "streamlit-1.36.0.tar.gz", hash = "sha256:a12af9f0eb61ab5832f438336257b1ec20eb29d8e0e0c6b40a79116ba939bc9c"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\naltair = ">=4.0,<6"\\\\nblinker = ">=1.0.0,<2"\\\\ncachetools = ">=4.0,<6"\\\\nclick = ">=7.0,<9"\\\\ngitpython = ">=3.0.7,<3.1.19 || >3.1.19,<4"\\\\nnumpy = ">=1.20,<3"\\\\npackaging = ">=20,<25"\\\\npandas = ">=1.3.0,<3"\\\\npillow = ">=7.1.0,<11"\\\\nprotobuf = ">=3.20,<6"\\\\npyarrow = ">=7.0"\\\\npydeck = ">=0.8.0b4,<1"\\\\nrequests = ">=2.27,<3"\\\\nrich = ">=10.14.0,<14"\\\\ntenacity = ">=8.1.0,<9"\\\\ntoml = ">=0.10.1,<2"\\\\ntornado = ">=6.0.3,<7"\\\\ntyping-extensions = ">=4.3.0,<5"\\\\nwatchdog = {version = ">=2.1.5,<5", markers = "platform_system != \\\\\\\\"Darwin\\\\\\\\""}\\\\n\\\\n[package.extras]\\\\nsnowflake = ["snowflake-connector-python (>=2.8.0)", "snowflake-snowpark-python (>=0.9.0)"]\\\\n\\\\n[[package]]\\\\nname = "streamlit-option-menu"\\\\nversion = "0.3.13"\\\\ndescription = "streamlit-option-menu is a simple Streamlit component that allows users to select a single item from a list of options in a menu."\\\\noptional = false\\\\npython-versions = ">=3.6"\\\\nfiles = [\\\\n    {file = "streamlit-option-menu-0.3.13.tar.gz", hash = "sha256:a0fb4eb52bdc5060b0cbf08ef75fc27c78126e13cdcdde1ec7beea36c0cc3880"},\\\\n    {file = "streamlit_option_menu-0.3.13-py3-none-any.whl", hash = "sha256:7e7e4f8770bc444ea4e51b27d3f6dfbda87e369b686421137f323d5b9ad13c25"},\\\\n]\\\\n\\\\n[package.dependencies]\\\\nstreamlit = ">=0.63"\\\\n\\\\n[[package]]\\\\nname = "tenacity"\\\\nversion = "8.2.3"\\\\ndescription = "Retry code until it succeeds"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "tenacity-8.2.3-py3-none-any.whl", hash = "sha256:ce510e327a630c9e1beaf17d42e6ffacc88185044ad85cf74c0a8887c6a0f88c"},\\\\n    {file = "tenacity-8.2.3.tar.gz", hash = "sha256:5398ef0d78e63f40007c1fb4c0bff96e1911394d2fa8d194f77619c05ff6cc8a"},\\\\n]\\\\n\\\\n[package.extras]\\\\ndoc = ["reno", "sphinx", "tornado (>=4.5)"]\\\\n\\\\n[[package]]\\\\nname = "toml"\\\\nversion = "0.10.2"\\\\ndescription = "Python Library for Tom\\\\\\\'s Obvious, Minimal Language"\\\\noptional = false\\\\npython-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"\\\\nfiles = [\\\\n    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},\\\\n    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "toolz"\\\\nversion = "0.12.0"\\\\ndescription = "List processing tools and functional utilities"\\\\noptional = false\\\\npython-versions = ">=3.5"\\\\nfiles = [\\\\n    {file = "toolz-0.12.0-py3-none-any.whl", hash = "sha256:2059bd4148deb1884bb0eb770a3cde70e7f954cfbbdc2285f1f2de01fd21eb6f"},\\\\n    {file = "toolz-0.12.0.tar.gz", hash = "sha256:88c570861c440ee3f2f6037c4654613228ff40c93a6c25e0eba70d17282c6194"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "tornado"\\\\nversion = "6.3.3"\\\\ndescription = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."\\\\noptional = false\\\\npython-versions = ">= 3.8"\\\\nfiles = [\\\\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_universal2.whl", hash = "sha256:502fba735c84450974fec147340016ad928d29f1e91f49be168c0a4c18181e1d"},\\\\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_x86_64.whl", hash = "sha256:805d507b1f588320c26f7f097108eb4023bbaa984d63176d1652e184ba24270a"},\\\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1bd19ca6c16882e4d37368e0152f99c099bad93e0950ce55e71daed74045908f"},\\\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7ac51f42808cca9b3613f51ffe2a965c8525cb1b00b7b2d56828b8045354f76a"},\\\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:71a8db65160a3c55d61839b7302a9a400074c9c753040455494e2af74e2501f2"},\\\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_aarch64.whl", hash = "sha256:ceb917a50cd35882b57600709dd5421a418c29ddc852da8bcdab1f0db33406b0"},\\\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_i686.whl", hash = "sha256:7d01abc57ea0dbb51ddfed477dfe22719d376119844e33c661d873bf9c0e4a16"},\\\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_x86_64.whl", hash = "sha256:9dc4444c0defcd3929d5c1eb5706cbe1b116e762ff3e0deca8b715d14bf6ec17"},\\\\n    {file = "tornado-6.3.3-cp38-abi3-win32.whl", hash = "sha256:65ceca9500383fbdf33a98c0087cb975b2ef3bfb874cb35b8de8740cf7f41bd3"},\\\\n    {file = "tornado-6.3.3-cp38-abi3-win_amd64.whl", hash = "sha256:22d3c2fa10b5793da13c807e6fc38ff49a4f6e1e3868b0a6f4164768bb8e20f5"},\\\\n    {file = "tornado-6.3.3.tar.gz", hash = "sha256:e7d8db41c0181c80d76c982aacc442c0783a2c54d6400fe028954201a2e032fe"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "typing-extensions"\\\\nversion = "4.8.0"\\\\ndescription = "Backported and Experimental Type Hints for Python 3.8+"\\\\noptional = false\\\\npython-versions = ">=3.8"\\\\nfiles = [\\\\n    {file = "typing_extensions-4.8.0-py3-none-any.whl", hash = "sha256:8f92fc8806f9a6b641eaa5318da32b44d401efaac0f6678c9bc448ba3605faa0"},\\\\n    {file = "typing_extensions-4.8.0.tar.gz", hash = "sha256:df8e4339e9cb77357558cbdbceca33c303714cf861d1eef15e1070055ae8b7ef"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "tzdata"\\\\nversion = "2023.3"\\\\ndescription = "Provider of IANA time zone data"\\\\noptional = false\\\\npython-versions = ">=2"\\\\nfiles = [\\\\n    {file = "tzdata-2023.3-py2.py3-none-any.whl", hash = "sha256:7e65763eef3120314099b6939b5546db7adce1e7d6f2e179e3df563c70511eda"},\\\\n    {file = "tzdata-2023.3.tar.gz", hash = "sha256:11ef1e08e54acb0d4f95bdb1be05da659673de4acbd21bf9c69e94cc5e907a3a"},\\\\n]\\\\n\\\\n[[package]]\\\\nname = "urllib3"\\\\nversion = "2.0.6"\\\\ndescription = "HTTP library with thread-safe connection pooling, file post, and more."\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "urllib3-2.0.6-py3-none-any.whl", hash = "sha256:7a7c7003b000adf9e7ca2a377c9688bbc54ed41b985789ed576570342a375cd2"},\\\\n    {file = "urllib3-2.0.6.tar.gz", hash = "sha256:b19e1a85d206b56d7df1d5e683df4a7725252a964e3993648dd0fb5a1c157564"},\\\\n]\\\\n\\\\n[package.extras]\\\\nbrotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]\\\\nsecure = ["certifi", "cryptography (>=1.9)", "idna (>=2.0.0)", "pyopenssl (>=17.1.0)", "urllib3-secure-extra"]\\\\nsocks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]\\\\nzstd = ["zstandard (>=0.18.0)"]\\\\n\\\\n[[package]]\\\\nname = "watchdog"\\\\nversion = "3.0.0"\\\\ndescription = "Filesystem events monitoring"\\\\noptional = false\\\\npython-versions = ">=3.7"\\\\nfiles = [\\\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:336adfc6f5cc4e037d52db31194f7581ff744b67382eb6021c868322e32eef41"},\\\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:a70a8dcde91be523c35b2bf96196edc5730edb347e374c7de7cd20c43ed95397"},\\\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:adfdeab2da79ea2f76f87eb42a3ab1966a5313e5a69a0213a3cc06ef692b0e96"},\\\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:2b57a1e730af3156d13b7fdddfc23dea6487fceca29fc75c5a868beed29177ae"},\\\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:7ade88d0d778b1b222adebcc0927428f883db07017618a5e684fd03b83342bd9"},\\\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:7e447d172af52ad204d19982739aa2346245cc5ba6f579d16dac4bfec226d2e7"},\\\\n    {file = "watchdog-3.0.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:9fac43a7466eb73e64a9940ac9ed6369baa39b3bf221ae23493a9ec4d0022674"},\\\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:8ae9cda41fa114e28faf86cb137d751a17ffd0316d1c34ccf2235e8a84365c7f"},\\\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:25f70b4aa53bd743729c7475d7ec41093a580528b100e9a8c5b5efe8899592fc"},\\\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4f94069eb16657d2c6faada4624c39464f65c05606af50bb7902e036e3219be3"},\\\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:7c5f84b5194c24dd573fa6472685b2a27cc5a17fe5f7b6fd40345378ca6812e3"},\\\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:3aa7f6a12e831ddfe78cdd4f8996af9cf334fd6346531b16cec61c3b3c0d8da0"},\\\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:233b5817932685d39a7896b1090353fc8efc1ef99c9c054e46c8002561252fb8"},\\\\n    {file = "watchdog-3.0.0-pp37-pypy37_pp73-macosx_10_9_x86_64.whl", hash = "sha256:13bbbb462ee42ec3c5723e1205be8ced776f05b100e4737518c67c8325cf6100"},\\\\n    {file = "watchdog-3.0.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl", hash = "sha256:8f3ceecd20d71067c7fd4c9e832d4e22584318983cabc013dbf3f70ea95de346"},\\\\n    {file = "watchdog-3.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:c9d8c8ec7efb887333cf71e328e39cffbf771d8f8f95d308ea4125bf5f90ba64"},\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_aarch64.whl", hash = "sha256:0e06ab8858a76e1219e68c7573dfeba9dd1c0219476c5a44d5333b01d7e1743a"},\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_armv7l.whl", hash = "sha256:d00e6be486affb5781468457b21a6cbe848c33ef43f9ea4a73b4882e5f188a44"},\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_i686.whl", hash = "sha256:c07253088265c363d1ddf4b3cdb808d59a0468ecd017770ed716991620b8f77a"},\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64.whl", hash = "sha256:5113334cf8cf0ac8cd45e1f8309a603291b614191c9add34d33075727a967709"},\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64le.whl", hash = "sha256:51f90f73b4697bac9c9a78394c3acbbd331ccd3655c11be1a15ae6fe289a8c83"},\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_s390x.whl", hash = "sha256:ba07e92756c97e3aca0912b5cbc4e5ad802f4557212788e72a72a47ff376950d"},\\\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_x86_64.whl", hash = "sha256:d429c2430c93b7903914e4db9a966c7f2b068dd2ebdd2fa9b9ce094c7d459f33"},\\\\n    {file = "watchdog-3.0.0-py3-none-win32.whl", hash = "sha256:3ed7c71a9dccfe838c2f0b6314ed0d9b22e77d268c67e015450a29036a81f60f"},\\\\n    {file = "watchdog-3.0.0-py3-none-win_amd64.whl", hash = "sha256:4c9956d27be0bb08fc5f30d9d0179a855436e655f046d288e2bcc11adfae893c"},\\\\n    {file = "watchdog-3.0.0-py3-none-win_ia64.whl", hash = "sha256:5d9f3a10e02d7371cd929b5d8f11e87d4bad890212ed3901f9b4d68767bee759"},\\\\n    {file = "watchdog-3.0.0.tar.gz", hash = "sha256:4d98a320595da7a7c5a18fc48cb633c2e73cda78f93cac2ef42d42bf609a33f9"},\\\\n]\\\\n\\\\n[package.extras]\\\\nwatchmedo = ["PyYAML (>=3.10)"]\\\\n\\\\n[metadata]\\\\nlock-version = "2.0"\\\\npython-versions = ">=3.10.0,<3.11"\\\\ncontent-hash = "19326ad4cba6cf84c5b09afbd1b8f3eb811da4d2c1161a64d6d0e0f8e45f9c04"\\\\n\\\\n--- End of poetry.lock ---\\\\n\\\\n--- Start of .replit ---\\\\nentrypoint = "main.py"\\\\nrun = ["streamlit", "run", "app.py", "--server.headless", "true"]\\\\n\\\\nmodules = ["python-3.10:v18-20230807-322e88b"]\\\\n\\\\nhidden = [".pythonlibs"]\\\\n\\\\n[nix]\\\\nchannel = "stable-23_05"\\\\n\\\\n[deployment]\\\\nrun = ["streamlit", "run", "--server.address", "0.0.0.0", "--server.headless", "true", "--server.enableCORS=false", "--server.enableWebsocketCompression=false", "--server.runOnSave=false", "app.py"]\\\\nignorePorts = false\\\\ndeploymentTarget = "gce"\\\\n\\\\n[[ports]]\\\\nlocalPort = 8501\\\\nexternalPort = 80\\\\n\\\\n[[ports]]\\\\nlocalPort = 8502\\\\nexternalPort = 3000\\\\n\\\\n--- End of .replit ---\\\\n\\\\n--- Start of app.py ---\\\\n# app.py\\\\nimport streamlit as st\\\\n\\\\n# --- Streamlit Page Configuration ---\\\\nst.set_page_config(\\\\n    page_title="Omnivia Survey Platform",\\\\n    layout="wide",\\\\n    initial_sidebar_state="expanded",\\\\n    page_icon=":bar_chart:"\\\\n)\\\\n\\\\nfrom modules import personas, questions, results, analytics, utils, dashboard, price_sensitivity, live_polling\\\\nfrom PIL import Image\\\\nfrom streamlit_option_menu import option_menu\\\\nimport json\\\\nimport requests\\\\nfrom pymongo import MongoClient\\\\nimport logging\\\\n\\\\n# Configure logging\\\\nlogging.basicConfig(level=logging.DEBUG)\\\\n\\\\n# --- Load Brand Assets ---\\\\ndef load_brand_assets():\\\\n    logo_path = "logo.png"  # Replace with your logo path\\\\n    primary_color = "#FF6F61"\\\\n    try:\\\\n        logo = Image.open(logo_path)\\\\n        return logo, primary_color\\\\n    except FileNotFoundError:\\\\n        logging.error("Logo file not found.")\\\\n        return None, primary_color\\\\n\\\\nlogo_image, primary_color = load_brand_assets()\\\\n\\\\n# --- Main App Logic ---\\\\ndef main():\\\\n    with st.container():\\\\n        if logo_image:\\\\n            st.image(logo_image, use_column_width=True)\\\\n        st.title("Omnivia Survey Platform")\\\\n\\\\n        # --- Navigation ---\\\\n        selected = option_menu(\\\\n            menu_title=None,\\\\n            options=["Demand Meter", "Price Sensitivity", "Live Polling"],\\\\n            icons=["bar-chart", "graph-up-arrow", "chat-dots"],\\\\n            menu_icon="cast",\\\\n            default_index=0,\\\\n            styles={\\\\n                "container": {"padding": "5!important", "background-color": "#2A2A2A"},\\\\n                "icon": {"color": "white"},\\\\n                "nav-link": {"font-size": "16px", "text-align": "left", "margin": "0px", "--hover-color": "#D65A50"},\\\\n                "nav-link-selected": {"background-color": "#D65A50"},\\\\n            }\\\\n        )\\\\n\\\\n        # --- App Sections ---\\\\n        try:\\\\n            if selected == "Demand Meter":\\\\n                dashboard.run_dashboard()  # Call the module to run Demand Meter\\\\n            elif selected == "Price Sensitivity":\\\\n                price_sensitivity.run_price_sensitivity()  # Call the module to run Price Sensitivity\\\\n            elif selected == "Live Polling":\\\\n                live_polling.run_live_polling()  # Call the module to run Live Polling\\\\n        except Exception as e:\\\\n            st.error(f"Error running {selected}: {str(e)}")\\\\n            logging.error(f"Error running {selected}: {str(e)}")\\\\n            utils.log_error(selected, str(e))\\\\n\\\\nif __name__ == "__main__":\\\\n    main()\\\\n\\\\n--- End of app.py ---\\\\n\\\\n--- Start of loading_screen.css ---\\\\n/* loading_screen.css */\\\\nbody {\\\\n  background-color: #000;\\\\n  color: #0f0;\\\\n  font-family: \\\\\\\'Courier New\\\\\\\', Courier, monospace;\\\\n}\\\\n\\\\n.loading-text {\\\\n  font-size: 24px;\\\\n  text-align: center;\\\\n  padding-top: 20%;\\\\n}\\\\n\\\\n.loading-text::after {\\\\n  content: \\\\\\\'\\\\\\\';\\\\n  display: inline-block;\\\\n  width: 1em;\\\\n  height: 1em;\\\\n  border-radius: 50%;\\\\n  background: #0f0;\\\\n  margin-left: 10px;\\\\n  animation: blink 1s infinite;\\\\n}\\\\n\\\\n@keyframes blink {\\\\n  0%, 50%, 100% {\\\\n    opacity: 1;\\\\n  }\\\\n  25%, 75% {\\\\n    opacity: 0;\\\\n  }\\\\n}\\\\n\\\\n--- End of loading_screen.css ---\\\\n\\\\n--- Start of example.py ---\\\\nimport streamlit as st\\\\nimport pandas as pd\\\\nimport numpy as np\\\\nimport plotly.express as px\\\\n\\\\n# Set page configuration\\\\nst.set_page_config(\\\\n    page_title="Executive Report",\\\\n    layout="wide",\\\\n    initial_sidebar_state="expanded",\\\\n)\\\\n\\\\n# Navigation Tabs\\\\ntabs = [\\\\\\\'Overview\\\\\\\', \\\\\\\'Price & Performance\\\\\\\', \\\\\\\'Portfolio & Management\\\\\\\', \\\\\\\'Fees & Minimums\\\\\\\', \\\\\\\'Distributions\\\\\\\', \\\\\\\'News & Reviews\\\\\\\']\\\\ntab = st.sidebar.radio("Navigation", tabs)\\\\n\\\\n# Dummy data\\\\ndef generate_dummy_data():\\\\n    dates = pd.date_range(start="2023-01-01", periods=100, freq="D")\\\\n    values = np.random.randn(100).cumsum()\\\\n    return pd.DataFrame({"Date": dates, "Value": values})\\\\n\\\\n# Header\\\\nst.title("Executive Report")\\\\nst.markdown("""\\\\nA comprehensive report highlighting key financial metrics, market trends, and potential risks for \\\\n**PSS World Medical, Inc. (PSSI)**.\\\\n""")\\\\n\\\\n# Main content based on selected tab\\\\nif tab == "Overview":\\\\n    st.header("Company Overview")\\\\n    st.markdown("""\\\\n    **PSS World Medical, Inc. (PSSI)**\\\\n\\\\n    - **Sector**: Healthcare\\\\n    - **Industry**: Medical Distribution\\\\n    - **Market Cap**: $2.3B\\\\n    """)\\\\n    st.image("https://via.placeholder.com/600x400", caption="Company Headquarters", use_column_width=True)\\\\n    st.subheader("Key Highlights")\\\\n    st.markdown("""\\\\n    - Strong market position\\\\n    - Consistent revenue growth\\\\n    - Expanding product lines\\\\n    """)\\\\n\\\\nelif tab == "Price & Performance":\\\\n    st.header("Price & Performance")\\\\n\\\\n    st.subheader("Current Prices")\\\\n    current_prices = {\\\\n        "Price as of 02/27/2018": "$254.07",\\\\n        "Change": "-$3.23 (-1.26%)",\\\\n        "SEC Yield": "1.67%",\\\\n        "52-week high 01/26/2018": "$265.42",\\\\n        "52-week low 04/13/2017": "$215.11",\\\\n        "Range": "$50.31 (23.39%)"\\\\n    }\\\\n    st.table(pd.DataFrame.from_dict(current_prices, orient=\\\\\\\'index\\\\\\\', columns=[\\\\\\\'Value\\\\\\\']).reset_index().rename(columns={"index": "Metric"}))\\\\n\\\\n    st.subheader("Historical Prices")\\\\n    historical_prices = pd.DataFrame({\\\\n        "Date": ["02/22/2018", "02/23/2018", "02/26/2018", "02/27/2018", "02/28/2018"],\\\\n        "Price": ["$250.26", "$254.29", "$257.30", "$254.07", "$251.27"]\\\\n    })\\\\n    st.table(historical_prices)\\\\n\\\\n    st.subheader("Performance")\\\\n    data = generate_dummy_data()\\\\n    fig = px.line(data, x="Date", y="Value", title="Performance Over Time", labels={"Date": "Date", "Value": "Value"})\\\\n    fig.update_layout(height=400)\\\\n    st.plotly_chart(fig)\\\\n\\\\n    st.subheader("Average Annual Returns")\\\\n    annual_returns = pd.DataFrame({\\\\n        "Metric": ["500 Index Fund Inv", "S&P 500 Index"],\\\\n        "1 Year": ["16.94%", "17.01%"],\\\\n        "3 Year": ["11.00%", "11.14%"],\\\\n        "5 Year": ["14.57%", "14.73%"],\\\\n        "10 Year": ["9.60%", "9.73%"],\\\\n        "Since Inception": ["11.12%", "-"]\\\\n    })\\\\n    st.table(annual_returns)\\\\n\\\\n    st.subheader("After-tax Returns")\\\\n    after_tax_returns = pd.DataFrame({\\\\n        "Metric": ["500 Index Fund Inv", "Returns after taxes on distributions", "Returns after taxes on distributions and sale of fund shares"],\\\\n        "1 Year": ["21.67%", "12.64%", "20.44%"],\\\\n        "3 Year": ["11.26%", "8.71%", "9.70%"],\\\\n        "5 Year": ["15.62%", "12.51%", "14.24%"],\\\\n        "10 Year": ["8.37%", "6.75%", "7.61%"],\\\\n        "Since Inception": ["11.11%", "-", "-"]\\\\n    })\\\\n    st.table(after_tax_returns)\\\\n\\\\nelif tab == "Portfolio & Management":\\\\n    st.header("Portfolio & Management")\\\\n    st.markdown("Details about the portfolio and management team go here.")\\\\n\\\\nelif tab == "Fees & Minimums":\\\\n    st.header("Fees & Minimums")\\\\n    st.markdown("Details about the fees and minimums go here.")\\\\n\\\\nelif tab == "Distributions":\\\\n    st.header("Distributions")\\\\n    st.markdown("Details about the distributions go here.")\\\\n\\\\nelif tab == "News & Reviews":\\\\n    st.header("News & Reviews")\\\\n    st.markdown("Details about the latest news and reviews go here.")\\\\n\\\\n# Custom CSS for styling\\\\nst.markdown("""\\\\n    <style>\\\\n    .report-container { max-width: 1200px; margin: 0 auto; }\\\\n    .header { background-color: #f0f2f6; padding: 20px; border-radius: 5px; margin-bottom: 20px; text-align: center; }\\\\n    .header h1 { font-size: 2.5em; margin-bottom: 0; }\\\\n    .header p { font-size: 1.2em; color: #666; }\\\\n    .main { background-color: #fff; padding: 20px; border-radius: 5px; margin-bottom: 20px; }\\\\n    .section-title { font-size: 1.8em; margin-bottom: 20px; border-bottom: 2px solid #e0e0e0; padding-bottom: 10px; }\\\\n    .metric-box { text-align: center; background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\\\\n    .metric-box h2 { font-size: 1.5em; margin: 0; }\\\\n    .metric-box p { font-size: 1.2em; color: #666; margin: 0; }\\\\n    .visual-card { background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\\\\n    </style>\\\\n""", unsafe_allow_html=True)\\\\n\\\\n--- End of example.py ---\\\\n\\\\n\\\\n--- Directory: modules ---\\\\n--- Start of modules/dashboard.py ---\\\\nimport streamlit as st\\\\nimport pandas as pd\\\\nimport plotly.express as px\\\\nimport plotly.graph_objs as go\\\\nfrom itertools import product\\\\nfrom modules import utils, narrative  # Ensure you have the utils and narrative modules defined\\\\nimport logging\\\\nfrom openai import OpenAI\\\\nimport os\\\\n\\\\n# Configure logging\\\\nlogging.basicConfig(level=logging.INFO)\\\\n\\\\n# Custom CSS for better visuals and modern look\\\\nst.markdown("""\\\\n    <style>\\\\n        body {\\\\n            font-family: \\\\\\\'Segoe UI\\\\\\\', Tahoma, Geneva, Verdana, sans-serif;\\\\n            background-color: #1E1E1E;\\\\n            color: #D4D4D4;\\\\n        }\\\\n        .report-title {\\\\n            font-size: 2.5rem;\\\\n            color: #FFC300;\\\\n            margin-top: 20px;\\\\n            margin-bottom: 20px;\\\\n        }\\\\n        .section-header {\\\\n            font-size: 1.8rem;\\\\n            color: #FFD700;\\\\n            margin-top: 20px;\\\\n            margin-bottom: 10px;\\\\n        }\\\\n        .key-insights {\\\\n            font-size: 1.2rem;\\\\n            color: #E0E0E0;\\\\n            background-color: #333333;\\\\n            padding: 20px;\\\\n            border-radius: 10px;\\\\n            margin-top: 20px;\\\\n        }\\\\n        .metric {\\\\n            font-size: 1.5rem;\\\\n            font-weight: bold;\\\\n            color: #FFD700;\\\\n            margin: 10px 0;\\\\n        }\\\\n        .sidebar .sidebar-content {\\\\n            background-color: #333333;\\\\n            padding: 20px;\\\\n            border-radius: 10px;\\\\n        }\\\\n        .sidebar .sidebar-content input, .sidebar .sidebar-content select {\\\\n            background-color: #444444;\\\\n            color: #D4D4D4;\\\\n            border: none;\\\\n            border-radius: 5px;\\\\n            padding: 10px;\\\\n        }\\\\n        .sidebar .sidebar-content button {\\\\n            background-color: #FFC300;\\\\n            color: #1E1E1E;\\\\n            border: none;\\\\n            border-radius: 5px;\\\\n            padding: 10px 20px;\\\\n            margin-top: 10px;\\\\n        }\\\\n    </style>\\\\n""", unsafe_allow_html=True)\\\\n\\\\n# Initialize OpenAI client\\\\nopenai_client = OpenAI()\\\\nopenai_client.api_key = os.getenv(\\\\\\\'OPENAI_API_KEY\\\\\\\')\\\\nif not openai_client.api_key:\\\\n    st.error("OpenAI API key is missing. Please set the OPENAI_API_KEY environment variable.")\\\\n\\\\n# Function to generate narrative summary using OpenAI GPT\\\\ndef generate_narrative_summary(df):\\\\n    prompt = f"Generate an executive summary for the following data:\\\\\\\\n{df.to_string(index=False)}"\\\\n\\\\n    try:\\\\n        response = openai_client.chat.completions.create(\\\\n            model="gpt-3.5-turbo",\\\\n            messages=[\\\\n                {"role": "system", "content": "You are a helpful assistant."},\\\\n                {"role": "user", "content": prompt}\\\\n            ],\\\\n            max_tokens=200\\\\n        )\\\\n\\\\n        # Check if the response has a \\\\\\\'choices\\\\\\\' field and if it\\\\\\\'s not empty\\\\n        if response.choices:\\\\n            summary = response.choices[0].message.content.strip()\\\\n            return summary\\\\n        else:\\\\n            st.warning("OpenAI response did not contain a summary. Please try again later.")\\\\n            return ""  # Return an empty string if there\\\\\\\'s no summary\\\\n\\\\n    except Exception as e:\\\\n        logging.error(f"Error generating narrative summary: {str(e)}")\\\\n        st.error(f"Error generating narrative summary. Please try again later.")\\\\n        return "" \\\\n\\\\n# Function to generate predictive analytics \\\\ndef generate_predictive_analytics(df):\\\\n    df[\\\\\\\'Predicted_Demand_Score\\\\\\\'] = df[\\\\\\\'Demand Score\\\\\\\'] * 1.05  # Mock prediction logic\\\\n    return df[[\\\\\\\'Feature\\\\\\\', \\\\\\\'Tagline\\\\\\\', \\\\\\\'Price\\\\\\\', \\\\\\\'Predicted_Demand_Score\\\\\\\']]\\\\n\\\\n# Function to personalize dashboard based on user preferences\\\\ndef personalized_insights(user_preferences):\\\\n    insights = f"Personalized insights based on preferences: {user_preferences}"\\\\n    return insights\\\\n\\\\n# Function to set up alerts and notifications\\\\ndef setup_alerts():\\\\n    st.sidebar.header("Alerts and Notifications")\\\\n    st.sidebar.text_input("Enter Alert Criteria", key="alert_criteria")\\\\n    if st.sidebar.button("Set Alert"):\\\\n        st.sidebar.success("Alert set successfully!")\\\\n\\\\n# Run the main dashboard application\\\\ndef run_dashboard():\\\\n    try:\\\\n        st.markdown("<h1 class=\\\\\\\'report-title\\\\\\\'>Executive Dashboard - AI-Powered Demand Insights</h1>", unsafe_allow_html=True)\\\\n\\\\n        st.sidebar.markdown("<div class=\\\\\\\'sidebar-content\\\\\\\'>", unsafe_allow_html=True)\\\\n        product_name = st.sidebar.text_input("Product Name:", placeholder="Enter the product name")\\\\n        product_features = st.sidebar.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\\\\n        tagline_options = st.sidebar.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\\\\n        price_options_str = st.sidebar.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\\\\n\\\\n        try:\\\\n            price_options = [float(x.strip()) for x in price_options_str.split(\\\\\\\',\\\\\\\')] if price_options_str else []\\\\n            price_error = False\\\\n        except ValueError:\\\\n            price_error = True\\\\n            price_options = []\\\\n            st.sidebar.warning("Invalid price options. Please enter comma-separated numbers.")\\\\n\\\\n        st.sidebar.markdown("<h3 class=\\\\\\\'section-header\\\\\\\'>Simulation Configuration</h3>", unsafe_allow_html=True)\\\\n        num_bots = st.sidebar.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\\\\n        male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\\\\n        income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\\\\n        interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\\\n        interests_list = [i.strip() for i in interests.split(",")] if interests else []\\\\n\\\\n        if interests_list:\\\\n            st.sidebar.markdown("<h3 class=\\\\\\\'section-header\\\\\\\'>Interests:</h3>", unsafe_allow_html=True)\\\\n            st.sidebar.markdown(" ".join([f\\\\\\\'<span style="background-color: #FFD700; color: #1E1E1E; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\\\\\\\' for interest in interests_list]), unsafe_allow_html=True)\\\\n\\\\n        # Initialize df outside the conditional block\\\\n        df = pd.DataFrame() \\\\n\\\\n        if st.sidebar.button("Calculate Demand") and not price_error:\\\\n            if not all([product_name, product_features, tagline_options, price_options]):\\\\n                st.warning("Please fill in all product details.")\\\\n            else:\\\\n                features = [x.strip() for x in product_features.split(\\\\\\\',\\\\\\\')]\\\\n                taglines = [x.strip() for x in tagline_options.split(\\\\\\\',\\\\\\\')]\\\\n                st.write(f"**Product Name:** {product_name}")\\\\n                st.write(f"**Features:** {features}")\\\\n                st.write(f"**Taglines:** {taglines}")\\\\n                st.write(f"**Prices:** {price_options}")\\\\n                st.write(f"**Number of Bots:** {num_bots}")\\\\n                combinations = list(product(features, taglines, price_options))\\\\n                st.write(f"**Combinations:** {combinations}")\\\\n\\\\n                progress_placeholder = st.empty()\\\\n                try:\\\\n                    df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\\\\n                except Exception as e:\\\\n                    st.error(f"Error during simulation: {str(e)}")\\\\n                    logging.error(f"Error during simulation: {str(e)}")\\\\n                    utils.log_error("Demand Meter", str(e))\\\\n\\\\n                if not df.empty:\\\\n                    required_columns = [\\\\\\\'Feature\\\\\\\', \\\\\\\'Tagline\\\\\\\', \\\\\\\'Price\\\\\\\', \\\\\\\'Demand Score\\\\\\\']\\\\n                    if not all(col in df.columns for col in required_columns):\\\\n                        st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\\\\n                        return\\\\n\\\\n                    st.markdown("<h2 class=\\\\\\\'section-header\\\\\\\'>Executive Summary</h2>", unsafe_allow_html=True)\\\\n                    summary = generate_narrative_summary(df)\\\\n                    st.markdown(f"<div class=\\\\\\\'key-insights\\\\\\\'>{summary}</div>", unsafe_allow_html=True)\\\\n\\\\n                    st.markdown("<h2 class=\\\\\\\'section-header\\\\\\\'>Detailed Analysis</h2>", unsafe_allow_html=True)\\\\n                    fig = px.scatter(df, x=\\\\\\\'Price\\\\\\\', y=\\\\\\\'Demand Score\\\\\\\', color=\\\\\\\'Feature\\\\\\\', hover_data=[\\\\\\\'Tagline\\\\\\\'])\\\\n                    st.plotly_chart(fig, use_container_width=True)\\\\n\\\\n                    heatmap_data = df.pivot_table(index="Feature", columns="Tagline", values="Demand Score")\\\\n                    fig = go.Figure(data=go.Heatmap(z=heatmap_data.values, x=heatmap_data.columns, y=heatmap_data.index))\\\\n                    st.plotly_chart(fig, use_container_width=True)\\\\n\\\\n                    # User Feedback\\\\n                    st.markdown("<h2 class=\\\\\\\'section-header\\\\\\\'>User Feedback</h2>", unsafe_allow_html=True)\\\\n                    feedback = st.text_area("Enter your feedback here:")\\\\n                    if st.button("Submit Feedback"):\\\\n                        utils.log_feedback(product_name, feedback)\\\\n                        st.success("Thank you for your feedback!")\\\\n\\\\n        # Predictive Analytics (Now uses df even if not calculated)\\\\n        st.markdown("<h2 class=\\\\\\\'section-header\\\\\\\'>Predictive Analytics</h2>", unsafe_allow_html=True)\\\\n        if not df.empty:  # Check if df is populated\\\\n            predictions = generate_predictive_analytics(df)\\\\n            st.write(predictions)\\\\n        else:\\\\n            st.info("Please run a simulation to view predictive analytics.")\\\\n\\\\n        # Personalized Insights (Now uses df even if not calculated)\\\\n        st.markdown("<h2 class=\\\\\\\'section-header\\\\\\\'>Personalized Insights</h2>", unsafe_allow_html=True)\\\\n        user_preferences = st.text_input("Enter your preferences (comma-separated):", placeholder="Preference1, Preference2")\\\\n        if user_preferences and not df.empty:  # Check for both preferences and data\\\\n            insights = personalized_insights(user_preferences)\\\\n            st.write(insights)\\\\n        else:\\\\n            st.info("Please run a simulation to view personalized insights.")\\\\n\\\\n        # Set up Alerts\\\\n        setup_alerts()\\\\n\\\\n    except Exception as e:\\\\n        logging.error(f"Error in run_dashboard: {str(e)}")\\\\n        st.error(f"Error in run_dashboard: {str(e)}")\\\\n\\\\nif __name__ == "__main__":\\\\n    run_dashboard()\\\\n--- End of modules/dashboard.py ---\\\\n\\\\n--- Start of modules/visualizations.py ---\\\\nimport streamlit as st\\\\nimport seaborn as sns\\\\nimport matplotlib.pyplot as plt\\\\n\\\\ndef plot_demand_distribution(df):\\\\n    st.write("### Demand Score Distribution")\\\\n    fig, ax = plt.subplots(figsize=(10, 6))\\\\n    sns.histplot(df[\\\\\\\'Demand Score\\\\\\\'], bins=20, kde=True, ax=ax)\\\\n    st.pyplot(fig)\\\\n\\\\ndef plot_demand_heatmap(df):\\\\n    st.write("### Demand Score Heatmap")\\\\n    try:\\\\n        heatmap_data = df.pivot_table(values=\\\\\\\'Demand Score\\\\\\\', index=\\\\\\\'Feature\\\\\\\', columns=\\\\\\\'Tagline\\\\\\\', aggfunc=\\\\\\\'mean\\\\\\\')\\\\n        fig, ax = plt.subplots(figsize=(12, 8))\\\\n        sns.heatmap(heatmap_data, annot=True, cmap="YlGnBu", ax=ax)\\\\n        st.pyplot(fig)\\\\n    except Exception as e:\\\\n        st.error(f"Error creating heatmap: {str(e)}")\\\\n\\\\n--- End of modules/visualizations.py ---\\\\n\\\\n--- Start of modules/narrative.py ---\\\\nimport streamlit as st\\\\n\\\\ndef generate_summary(df):\\\\n    st.markdown("<div class=\\\\\\\'key-insights\\\\\\\'>", unsafe_allow_html=True)\\\\n    best_combination = df.loc[df[\\\\\\\'Demand Score\\\\\\\'].idxmax()]\\\\n    st.markdown(f"<p class=\\\\\\\'metric\\\\\\\'>Best Combination: Feature - {best_combination[\\\\\\\'Feature\\\\\\\']}, Tagline - {best_combination[\\\\\\\'Tagline\\\\\\\']}, Price - ${best_combination[\\\\\\\'Price\\\\\\\']}</p>", unsafe_allow_html=True)\\\\n    st.markdown(f"<p class=\\\\\\\'metric\\\\\\\'>Highest Demand Score: {best_combination[\\\\\\\'Demand Score\\\\\\\']:.1f}</p>", unsafe_allow_html=True)\\\\n\\\\n    if df[\\\\\\\'Demand Score\\\\\\\'].min() < 70:\\\\n        st.markdown("<p>Suggestions for Improvement:</p>", unsafe_allow_html=True)\\\\n        st.markdown("<ul><li>Consider revising features, taglines, or prices to boost demand.</li></ul>", unsafe_allow_html=True)\\\\n    st.markdown("</div>", unsafe_allow_html=True)\\\\n\\\\n--- End of modules/narrative.py ---\\\\n\\\\n--- Start of modules/live_polling.py ---\\\\nimport streamlit as st\\\\nimport pandas as pd\\\\nimport random\\\\nimport concurrent.futures\\\\nimport math\\\\nfrom modules import utils, results, analytics\\\\nimport time  # Ensure the time module is imported\\\\n\\\\ndef run_live_polling():\\\\n    """Runs the Live Polling section of the app."""\\\\n    st.subheader("Live Polling")\\\\n    st.write("**Real-time Results and Interactive Visualizations**")\\\\n\\\\n    # --- Live Polling Input ---\\\\n    st.sidebar.subheader("Create Survey")\\\\n    survey_question = st.sidebar.text_input("Enter your survey question:", "")\\\\n    options = {f"option_{chr(65+i)}": st.sidebar.text_input(f"Enter option {chr(65+i)}:", "") for i in range(4)}\\\\n    followups = [st.sidebar.text_input(f"Enter follow-up question {i+1}:", "") for i in range(2)]\\\\n\\\\n    # --- Live Polling Logic and Display ---\\\\n    votes = {key: 0 for key in options.keys()}\\\\n    if st.button("Start Poll"):\\\\n        if not survey_question or not any(options.values()):\\\\n            st.warning("Please enter a question and options.")\\\\n        else:\\\\n            selected_option = st.selectbox("Choose your option:", options.values())\\\\n            if st.button("Vote"):\\\\n                votes[selected_option] += 1\\\\n\\\\n            st.write(f"**Poll Results:**")\\\\n            for option, count in votes.items():\\\\n                st.write(f"- {option}: {count} votes")\\\\n\\\\n            # Simple timer (You\\\\\\\'ll likely replace this with real-time updates)\\\\n            start_time = time.time()\\\\n            while time.time() - start_time < 10: # 10 seconds for example\\\\n                st.write(f"Time remaining: {10 - int(time.time() - start_time)} seconds")\\\\n                st.experimental_rerun()\\\\n\\\\n    # --- Live Polling Input (Demographics) ---\\\\n    st.sidebar.subheader("Specify Demographics")\\\\n    male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\\\\n    female_percentage = 100 - male_percentage\\\\n    income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\\\\n\\\\n    # Interest badges\\\\n    interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\\\n    interests_list = interests.split(",") if interests else []\\\\n\\\\n    if interests_list:\\\\n        st.sidebar.markdown("### Interests:")\\\\n        for interest in interests_list:\\\\n            st.sidebar.markdown(\\\\n                f"""<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest.strip()}</span>""",\\\\n                unsafe_allow_html=True\\\\n            )\\\\n\\\\n    num_bots = st.sidebar.number_input("Enter number of bots:", min_value=1, max_value=1000, value=100)\\\\n\\\\n    # Start button\\\\n    start_button = st.sidebar.button("Start Survey Simulation")\\\\n\\\\n    # Simulation settings\\\\n    MAX_CONCURRENT_THREADS = 25\\\\n    batch_size = 25\\\\n    num_batches = math.ceil(num_bots / batch_size)\\\\n\\\\n    # Survey simulation logic\\\\n    if start_button:\\\\n        bot_data = utils.generate_survey_data(int(num_bots), male_percentage, income_range, interests_list)\\\\n\\\\n        # Sentiment Analysis\\\\n        sentiment_results = analytics.analyze_sentiment([data[\\\\\\\'persona\\\\\\\'] for data in bot_data.values()])\\\\n        st.write("### Sentiment Analysis")\\\\n        sentiment_df = pd.DataFrame(sentiment_results)\\\\n        st.dataframe(sentiment_df)\\\\n\\\\n        # Display Results\\\\n        results.display_survey_results(bot_data)\\\\n--- End of modules/live_polling.py ---\\\\n\\\\n--- Start of modules/price_sensitivity.py ---\\\\nimport streamlit as st\\\\nimport pandas as pd\\\\nimport json\\\\n\\\\ndef run_price_sensitivity():\\\\n    """Runs the Price Sensitivity section of the app."""\\\\n    st.subheader("Price Sensitivity")\\\\n    st.write("**Analyze the impact of different prices on demand**")\\\\n\\\\n    # --- Price Sensitivity Analysis ---\\\\n    price_points_str = st.text_input("Enter Price Points (comma-separated):")\\\\n\\\\n    # Validate and parse price points\\\\n    try:\\\\n        price_points = [float(x.strip()) for x in price_points_str.split(\\\\\\\',\\\\\\\')] if price_points_str else []\\\\n        price_error = False\\\\n    except ValueError:\\\\n        price_error = True\\\\n        price_points = []\\\\n\\\\n    if price_error:\\\\n        st.warning("Invalid price points. Please enter comma-separated numbers.")\\\\n\\\\n    if st.button("Run Price Sensitivity Analysis") and not price_error:\\\\n        if not price_points:\\\\n            st.warning("Please enter price points.")\\\\n        else:\\\\n            st.write(f"**Price Points:** {price_points}")\\\\n\\\\n            # Simulate retrieving responses from a database\\\\n            responses = []  # Replace with actual database call\\\\n            if responses:\\\\n                # Placeholder for actual price sensitivity analysis\\\\n                st.write("**Analysis Results:**")\\\\n                for point in price_points:\\\\n                    st.write(f"At ${point}, the demand is...")  # Placeholder for actual logic\\\\n\\\\n                # Example of Van Westendorp Price Sensitivity Analysis\\\\n                st.write("**Van Westendorp Price Sensitivity Analysis:**")\\\\n                optimal_price_range = (min(price_points), max(price_points))  # Placeholder for actual analysis\\\\n                st.write(f"Optimal Price Range: {optimal_price_range}")\\\\n\\\\n                # Example of Gabor-Granger Price Sensitivity Analysis\\\\n                st.write("**Gabor-Granger Price Sensitivity Analysis:**")\\\\n                demand_at_price = {point: random.randint(50, 100) for point in price_points}  # Placeholder\\\\n                st.write(f"Demand at Different Price Points: {demand_at_price}")\\\\n\\\\n                # Chart for Gabor-Granger Results\\\\n                option = {\\\\n                    "title": {"text": "Gabor-Granger Price Sensitivity", "left": "center"},\\\\n                    "xAxis": {"type": "category", "data": price_points},\\\\n                    "yAxis": {"type": "value"},\\\\n                    "series": [\\\\n                        {"data": list(demand_at_price.values()), "type": "bar", "showBackground": True, "backgroundStyle": {"color": \\\\\\\'rgba(180, 180, 180, 0.2)\\\\\\\'}}\\\\n                    ]\\\\n                }\\\\n                st.echarts(options=json.dumps(option), height="400px")\\\\n\\\\n--- End of modules/price_sensitivity.py ---\\\\n\\\\n--- Start of modules/old.py ---\\\\nimport streamlit as st\\\\nimport pandas as pd\\\\nfrom itertools import product\\\\nfrom modules import utils, visualizations, narrative\\\\nfrom autogen import AssistantAgent, UserProxyAgent\\\\n\\\\ndef run_dashboard():\\\\n    st.title("Executive Dashboard - AI-Powered Demand Insights")\\\\n\\\\n    product_name = st.text_input("Product Name:", placeholder="Enter the product name")\\\\n    product_features = st.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\\\\n    tagline_options = st.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\\\\n    price_options_str = st.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\\\\n\\\\n    try:\\\\n        price_options = [float(x.strip()) for x in price_options_str.split(\\\\\\\',\\\\\\\')] if price_options_str else []\\\\n        price_error = False\\\\n    except ValueError:\\\\n        price_error = True\\\\n        price_options = []\\\\n        st.warning("Invalid price options. Please enter comma-separated numbers.")\\\\n\\\\n    st.header("Simulation Configuration")\\\\n    num_bots = st.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\\\\n    male_percentage = st.slider("Male Percentage", 0, 100, 50)\\\\n    income_range = st.slider("Income Range (in thousands)", 0, 500, (50, 150))\\\\n    interests = st.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\\\n    interests_list = [i.strip() for i in interests.split(",")] if interests else []\\\\n\\\\n    if interests_list:\\\\n        st.markdown("### Interests:")\\\\n        st.markdown(" ".join([f\\\\\\\'<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\\\\\\\' for interest in interests_list]), unsafe_allow_html=True)\\\\n\\\\n    if st.button("Calculate Demand") and not price_error:\\\\n        if not all([product_name, product_features, tagline_options, price_options]):\\\\n            st.warning("Please fill in all product details.")\\\\n        else:\\\\n            features = [x.strip() for x in product_features.split(\\\\\\\',\\\\\\\')]\\\\n            taglines = [x.strip() for x in tagline_options.split(\\\\\\\',\\\\\\\')]\\\\n            st.write(f"**Product Name:** {product_name}")\\\\n            st.write(f"**Features:** {features}")\\\\n            st.write(f"**Taglines:** {taglines}")\\\\n            st.write(f"**Prices:** {price_options}")\\\\n            st.write(f"**Number of Bots:** {num_bots}")\\\\n            combinations = list(product(features, taglines, price_options))\\\\n            st.write(f"**Combinations:** {combinations}")\\\\n\\\\n            progress_placeholder = st.empty()\\\\n            try:\\\\n                df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\\\\n            except Exception as e:\\\\n                st.error(f"Error during simulation: {str(e)}")\\\\n                utils.log_error("Demand Meter", str(e))\\\\n                return\\\\n\\\\n            if df.empty:\\\\n                st.error("No valid data was generated. Please check your inputs and try again.")\\\\n                return\\\\n\\\\n            required_columns = [\\\\\\\'Feature\\\\\\\', \\\\\\\'Tagline\\\\\\\', \\\\\\\'Price\\\\\\\', \\\\\\\'Demand Score\\\\\\\']\\\\n            if not all(col in df.columns for col in required_columns):\\\\n                st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\\\\n                return\\\\n\\\\n            st.header("Executive Summary")\\\\n            narrative.generate_summary(df)\\\\n\\\\n            st.header("Detailed Analysis")\\\\n            visualizations.plot_demand_distribution(df)\\\\n            visualizations.plot_demand_heatmap(df)\\\\n\\\\n            st.header("User Feedback")\\\\n            feedback = st.text_area("Enter your feedback here:")\\\\n            if st.button("Submit Feedback"):\\\\n                utils.log_feedback(product_name, feedback)\\\\n                st.success("Thank you for your feedback!")\\\\n\\\\n            st.header("Automated Insights")\\\\n            config_list = [{"model": "gpt-3.5-turbo"}]\\\\n            assistant = AssistantAgent(name="Assistant", llm_config={"config_list": config_list})\\\\n            user_proxy = UserProxyAgent(name="User_proxy", code_execution_config={"work_dir": "coding"})\\\\n            try:\\\\n                insights = utils.generate_insights(assistant, user_proxy, df.to_dict(orient=\\\\\\\'records\\\\\\\'))\\\\n                st.write(insights)\\\\n            except Exception as e:\\\\n                st.error(f"Failed to generate insights: {e}")\\\\n\\\\nif __name__ == "__main__":\\\\n    run_dashboard()\\\\n\\\\n--- End of modules/old.py ---\\\\n\\\\n--- Start of modules/analytics.py ---\\\\nimport pandas as pd\\\\nimport random\\\\n\\\\ndef van_westendorp_analysis(price_points, responses):\\\\n    """Performs Van Westendorp price sensitivity analysis."""\\\\n    too_expensive = []\\\\n    too_cheap = []\\\\n    just_right = []\\\\n    too_expensive_data = []\\\\n    too_cheap_data = []\\\\n    just_right_data = []\\\\n    for response in responses:\\\\n        for i, price in enumerate(price_points):\\\\n            if response == "Too expensive":\\\\n                too_expensive_data.append(price)\\\\n                too_expensive.append(i)\\\\n            elif response == "Too cheap":\\\\n                too_cheap_data.append(price)\\\\n                too_cheap.append(i)\\\\n            elif response == "Just right":\\\\n                just_right_data.append(price)\\\\n                just_right.append(i)\\\\n\\\\n    # Calculate Optimal Price Range\\\\n    too_expensive_avg = sum(too_expensive_data) / len(too_expensive_data) if too_expensive_data else 0\\\\n    too_cheap_avg = sum(too_cheap_data) / len(too_cheap_data) if too_cheap_data else 0\\\\n    just_right_avg = sum(just_right_data) / len(just_right_data) if just_right_data else 0\\\\n\\\\n    optimal_price_range = (too_cheap_avg, too_expensive_avg)\\\\n    return optimal_price_range, too_expensive, too_cheap, just_right\\\\n\\\\ndef gabor_granger_analysis(price_points, responses):\\\\n    """Performs Gabor-Granger price sensitivity analysis."""\\\\n    demand_at_price = {}\\\\n    for i, price in enumerate(price_points):\\\\n        demand_at_price[price] = responses.count(i)\\\\n    return demand_at_price\\\\n\\\\ndef analyze_sentiment(responses):\\\\n    """Performs sentiment analysis on survey responses."""\\\\n    sentiments = []\\\\n    for response in responses:\\\\n        if isinstance(response, str):\\\\n            prompt = f"""Analyze the sentiment of the following text:\\\\n            "{response}"\\\\n            Provide the sentiment as "positive", "negative", or "neutral".\\\\n            """\\\\n            sentiment = llm(prompt)\\\\n            sentiments.append({"Response": response, "Sentiment": sentiment})\\\\n    return sentiments\\\\n--- End of modules/analytics.py ---\\\\n\\\\n--- Start of modules/__init__.py ---\\\\n\\\\n--- End of modules/__init__.py ---\\\\n\\\\n--- Start of modules/results.py ---\\\\nimport streamlit as st\\\\nimport pandas as pd\\\\nimport random\\\\n\\\\ndef display_survey_results(bot_data):\\\\n    """Displays the survey results in a structured format."""\\\\n    df = pd.DataFrame(bot_data)\\\\n    response_tally = df[\\\\\\\'response\\\\\\\'].value_counts()\\\\n    st.write("### Survey Results")\\\\n    st.bar_chart(response_tally)\\\\n\\\\n    # Key Insights\\\\n    st.write("### Key Insights")\\\\n    most_popular = response_tally.idxmax()\\\\n    st.write(f"**Most popular option**: {most_popular} ({options[f\\\\\\\'option_{most_popular.lower()}\\\\\\\']})")\\\\n    st.write(f"**Average score for \\\\\\\'{followups[0]}\\\\\\\'**: {df[\\\\\\\'followups\\\\\\\'].apply(lambda x: x[0]).mean():.2f}/10")\\\\n    st.write(f"**Most common response to \\\\\\\'{followups[1]}\\\\\\\'**: {df[\\\\\\\'followups\\\\\\\'].apply(lambda x: x[1]).mode()[0]}")\\\\n\\\\n    # Sample Personas\\\\n    st.write("### Sample Personas")\\\\n    for i, (bot, data) in enumerate(random.sample(list(bot_data.items()), 5)):\\\\n        with st.expander(f"Persona {i+1}"):\\\\n            st.write(data[\\\\\\\'persona\\\\\\\'])\\\\n            st.write(f"Response: {data[\\\\\\\'response\\\\\\\']}")\\\\n--- End of modules/results.py ---\\\\n\\\\n--- Start of modules/personas.py ---\\\\nimport os\\\\nimport random\\\\nfrom langchain_community.llms import OpenAI\\\\n\\\\n# --- OpenAI API ---\\\\nllm = OpenAI(temperature=0.7)\\\\n\\\\ndef generate_persona(income_range, interests):\\\\n    """Generates a persona based on income and a list of interests."""\\\\n    prompt = f"""Create a persona with the following elements:\\\\n    1. Identity: Name, occupation, background\\\\n    2. Characteristics: Personality traits, communication style, beliefs, values\\\\n    3. Knowledge and expertise: Specific areas of knowledge or expertise\\\\n    4. Experiences: Relevant past experiences, achievements, or challenges\\\\n    5. Motivations: Goals, desires, or driving forces\\\\n    6. Emotional and relational aspects: Emotional state, level of empathy, approach to relationships\\\\n    7. Context: Specific setting or situation\\\\n\\\\n    The persona should have an income between ${income_range[0]}k and ${income_range[1]}k. \\\\n\\\\n    {random.choice([\\\\\\\'They like \\\\\\\', \\\\\\\'They might like \\\\\\\', \\\\\\\'They dont really care for \\\\\\\'])} {random.sample(interests, random.randint(0, len(interests)))}\\\\n\\\\n    Provide the information in a structured format.\\\\n    """\\\\n\\\\n    response = llm(prompt)\\\\n    return response.strip()\\\\n--- End of modules/personas.py ---\\\\n\\\\n--- Start of modules/questions.py ---\\\\nimport os\\\\nimport streamlit as st\\\\nfrom pymongo import MongoClient\\\\n\\\\n# --- MongoDB Connection ---\\\\nclient = MongoClient(os.environ["MONGODB_URI"])\\\\ndb = client.get_database("Omnivia")\\\\nresponses_collection = db.get_collection("responses")\\\\n\\\\ndef create_survey_question():\\\\n    """Creates a survey question section with question type selection and conditional logic."""\\\\n    st.subheader("Create Survey Question")\\\\n    question_type = st.selectbox("Select Question Type", ["Multiple Choice", "Text", "Rating Scale", "Dropdown"])\\\\n    question_text = st.text_input("Enter Question Text:")\\\\n\\\\n    options = []\\\\n    if question_type in ["Multiple Choice", "Dropdown"]:\\\\n        num_options = st.number_input("Number of Options", min_value=2, max_value=10, value=4)\\\\n        for i in range(int(num_options)):\\\\n            options.append(st.text_input(f"Option {i+1}:"))\\\\n\\\\n    # Conditional Logic (Dynamically Show/Hide Questions)\\\\n    condition_enabled = st.checkbox("Enable Conditional Logic")\\\\n    if condition_enabled:\\\\n        target_question = st.selectbox("Target Question", options, index=0)\\\\n        condition_value = st.text_input("Condition Value (e.g., Option A)")\\\\n        st.write(f"**Conditional Logic:**  If the answer to the previous question is \\\\\\\'{condition_value}\\\\\\\', then the following question will be shown:")\\\\n        # ... (Implement logic to show/hide questions dynamically) ...\\\\n\\\\n    # Store the created question in the database\\\\n    if st.button("Add Question"):\\\\n        question_data = {\\\\n            "type": question_type,\\\\n            "text": question_text,\\\\n            "options": options if options else None,\\\\n            "condition": {\\\\n                "enabled": condition_enabled,\\\\n                "target_question": target_question if condition_enabled else None,\\\\n                "value": condition_value if condition_enabled else None\\\\n            }\\\\n        }\\\\n        responses_collection.insert_one(question_data)  # Insert the question to the MongoDB collection\\\\n        st.success("Question added successfully.")\\\\n--- End of modules/questions.py ---\\\\n\\\\n--- Start of modules/utils.py ---\\\\nimport random\\\\nimport pandas as pd\\\\nimport logging\\\\nimport autogen\\\\n\\\\n# Setup logging\\\\nlogging.basicConfig(level=logging.INFO, format=\\\\\\\'%(asctime)s %(levelname)s:%(message)s\\\\\\\')\\\\nlogger = logging.getLogger(__name__)\\\\n\\\\nfile_handler = logging.FileHandler(\\\\\\\'app_debug.log\\\\\\\')\\\\nfile_handler.setLevel(logging.DEBUG)\\\\nfile_handler.setFormatter(logging.Formatter(\\\\\\\'%(asctime)s %(levelname)s:%(message)s\\\\\\\'))\\\\n\\\\nlogger.addHandler(file_handler)\\\\n\\\\ndef generate_survey_data(num_bots, male_percentage, income_range, interests_list):\\\\n    try:\\\\n        data = [{\\\\\\\'gender\\\\\\\': \\\\\\\'male\\\\\\\' if random.random() < male_percentage / 100 else \\\\\\\'female\\\\\\\',\\\\n                 \\\\\\\'income\\\\\\\': random.randint(income_range[0], income_range[1]) * 1000,\\\\n                 \\\\\\\'interests\\\\\\\': random.sample(interests_list, k=min(len(interests_list), 3))}\\\\n                for _ in range(num_bots)]\\\\n        logger.info(f"Generated survey data: {data[:5]}...")  # Log a sample of generated data\\\\n        return data\\\\n    except Exception as e:\\\\n        logger.error(f"Error generating survey data: {str(e)}")\\\\n        raise\\\\n\\\\ndef simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index):\\\\n    try:\\\\n        logger.info(f"Starting simulation for feature: {feature}, tagline: {tagline}, price: {price}")\\\\n        bot_data = generate_survey_data(num_bots, male_percentage, income_range, interests_list)\\\\n        demand_score = sum(random.randint(60, 90) for _ in bot_data) / len(bot_data)\\\\n        response_data = {\\\\n            "Feature": feature,\\\\n            "Tagline": tagline,\\\\n            "Price": float(price),\\\\n            "Demand Score": demand_score\\\\n        }\\\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation.log"})\\\\n        autogen.runtime_logging.log_event(name="demand_simulation", event=response_data, source="demand_meter")\\\\n        autogen.runtime_logging.stop()\\\\n        progress.progress((current_index + 1) / total_combinations)\\\\n        logger.info(f"Simulation successful for feature: {feature}, tagline: {tagline}, price: {price}")\\\\n        return response_data\\\\n    except Exception as e:\\\\n        error_data = {"Feature": feature, "Tagline": tagline, "Price": price, "Error": str(e)}\\\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation_errors.log"})\\\\n        autogen.runtime_logging.log_event(name="demand_simulation_error", event=error_data, source="demand_meter")\\\\n        autogen.runtime_logging.stop()\\\\n        logger.error(f"Error in simulate_demand for feature: {feature}, tagline: {tagline}, price: {price} - {str(e)}")\\\\n        return None\\\\n\\\\ndef process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress):\\\\n    results = []\\\\n    total_combinations = len(combinations)\\\\n    for current_index, (feature, tagline, price) in enumerate(combinations):\\\\n        result = simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index)\\\\n        if result:\\\\n            results.append(result)\\\\n        progress.progress((current_index + 1) / total_combinations)\\\\n    if not results:\\\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "process_simulation_errors.log"})\\\\n        autogen.runtime_logging.log_event(name="process_simulation_error", event={"Error": "No valid results returned"}, source="demand_meter")\\\\n        autogen.runtime_logging.stop()\\\\n        logger.warning("No valid results returned in process_simulation.")\\\\n    return pd.DataFrame(results)\\\\n\\\\ndef update_progress(progress, value):\\\\n    blocks = int(value / 5)\\\\n    blocks_html = "".join(["<div class=\\\\\\\'progress-block\\\\\\\'></div>" for _ in range(blocks)])\\\\n    progress.markdown(f"""\\\\n        <div class="progress-container">\\\\n            <div class="progress-bar" style="width:{value}%;">\\\\n                <div class="progress-blocks">{blocks_html}</div>\\\\n            </div>\\\\n        </div>\\\\n        <div class="progress-text">{value}%</div>\\\\n    """, unsafe_allow_html=True)\\\\n\\\\ndef generate_insights(assistant, user_proxy, df_dict):\\\\n    insights_prompt = f"Analyze the demand scores for the following combinations and provide insights:\\\\\\\\n{df_dict}"\\\\n    user_proxy.initiate_chat(assistant, message=insights_prompt)\\\\n    return assistant.last_message()["content"]\\\\n\\\\ndef log_feedback(product_name, feedback):\\\\n    feedback_data = {"Product Name": product_name, "Feedback": feedback}\\\\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "user_feedback.log"})\\\\n    autogen.runtime_logging.log_event(name="user_feedback", event=feedback_data, source="demand_meter")\\\\n    autogen.runtime_logging.stop()\\\\n\\\\ndef log_error(section, error_message):\\\\n    error_data = {"Section": section, "Error": error_message}\\\\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "app_errors.log"})\\\\n    autogen.runtime_logging.log_event(name="app_error", event=error_data, source="omnivia_survey_platform")\\\\n    autogen.runtime_logging.stop()\\\\n    logger.error(f"Error in {section}: {error_message}")\\\\n\\\\n--- End of modules/utils.py ---\\\\n\\\\n\\\'}\', \'repo_document\': \'Repository Summary:\\n\\nThe GitHub repository brewedindices/omniviastreamlit provides a web application using the Streamlit framework. The project includes detailed setup instructions, development guidelines, and key features, making it a robust starting point for building modern web applications.\\n\\nKey Features:\\n- **Streamlit**: Framework for building interactive web applications in Python.\\n- **Python**: Programming language used for application logic.\\n- **Pandas**: Data manipulation and analysis library.\\n- **NumPy**: Library for numerical computations.\\n\\nInstructions:\\n1. **Clone the Repository**: `git clone https://github.com/brewedindices/omniviastreamlit`\\n2. **Setup Environment**: Follow the detailed setup instructions provided in the repository to configure the necessary dependencies and environment variables.\\n3. **Run the Application**: Use pip to install dependencies and start the application.\\n\\n\\nTable of Contents:\\nDirectory: .\\n  - .gitignore\\n  - replit.nix\\n  - config.toml\\n  - .breakpoints\\n  - pyproject.toml\\n  - poetry.lock\\n  - .replit\\n  - app.py\\n  - loading_screen.css\\n  - example.py\\nDirectory: modules\\n  - modules/dashboard.py\\n  - modules/visualizations.py\\n  - modules/narrative.py\\n  - modules/live_polling.py\\n  - modules/price_sensitivity.py\\n  - modules/old.py\\n  - modules/analytics.py\\n  - modules/__init__.py\\n  - modules/results.py\\n  - modules/personas.py\\n  - modules/questions.py\\n  - modules/utils.py\\n\\n\\n--- Directory: . ---\\n--- Start of .gitignore ---\\n# Byte-compiled / optimized / DLL files\\n__pycache__/\\n*.py[cod]\\n*$py.class\\n\\n# C extensions\\n*.so\\n\\n# Distribution / packaging\\n.Python\\nbuild/\\ndevelop-eggs/\\ndist/\\ndownloads/\\neggs/\\n.eggs/\\nlib/\\nlib64/\\nparts/\\nsdist/\\nvar/\\nwheels/\\nshare/python-wheels/\\n*.egg-info/\\n.installed.cfg\\n*.egg\\nMANIFEST\\n\\n# PyInstaller\\n#  Usually these files are written by a python script from a template\\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\\n*.manifest\\n*.spec\\n\\n# Installer logs\\npip-log.txt\\npip-delete-this-directory.txt\\n\\n# Unit test / coverage reports\\nhtmlcov/\\n.tox/\\n.nox/\\n.coverage\\n.coverage.*\\n.cache\\nnosetests.xml\\ncoverage.xml\\n*.cover\\n*.py,cover\\n.hypothesis/\\n.pytest_cache/\\ncover/\\n\\n# Translations\\n*.mo\\n*.pot\\n\\n# Django stuff:\\n*.log\\nlocal_settings.py\\ndb.sqlite3\\ndb.sqlite3-journal\\n\\n# Flask stuff:\\ninstance/\\n.webassets-cache\\n\\n# Scrapy stuff:\\n.scrapy\\n\\n# Sphinx documentation\\ndocs/_build/\\n\\n# PyBuilder\\n.pybuilder/\\ntarget/\\n\\n# Jupyter Notebook\\n.ipynb_checkpoints\\n\\n# IPython\\nprofile_default/\\nipython_config.py\\n\\n# pyenv\\n#   For a library or package, you might want to ignore these files since the code is\\n#   intended to run in multiple environments; otherwise, check them in:\\n# .python-version\\n\\n# pipenv\\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\\n#   having no cross-platform support, pipenv may install dependencies that don\\\'t work, or not\\n#   install all needed dependencies.\\n#Pipfile.lock\\n\\n# poetry\\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\\n#   commonly ignored for libraries.\\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\\n#poetry.lock\\n\\n# pdm\\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\\n#pdm.lock\\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\\n#   in version control.\\n#   https://pdm.fming.dev/#use-with-ide\\n.pdm.toml\\n\\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\\n__pypackages__/\\n\\n# Celery stuff\\ncelerybeat-schedule\\ncelerybeat.pid\\n\\n# SageMath parsed files\\n*.sage.py\\n\\n# Environments\\n.env\\n.venv\\nenv/\\nvenv/\\nENV/\\nenv.bak/\\nvenv.bak/\\n\\n# Spyder project settings\\n.spyderproject\\n.spyproject\\n\\n# Rope project settings\\n.ropeproject\\n\\n# mkdocs documentation\\n/site\\n\\n# mypy\\n.mypy_cache/\\n.dmypy.json\\ndmypy.json\\n\\n# Pyre type checker\\n.pyre/\\n\\n# pytype static type analyzer\\n.pytype/\\n\\n# Cython debug symbols\\ncython_debug/\\n\\n# PyCharm\\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\\n#.idea/\\n--- End of .gitignore ---\\n\\n--- Start of replit.nix ---\\n{pkgs}: {\\n  deps = [\\n    pkgs.glibcLocales\\n  ];\\n}\\n\\n--- End of replit.nix ---\\n\\n--- Start of config.toml ---\\n[theme]\\nbase="dark"\\nprimaryColor="#FFC300"\\nbackgroundColor="#1E1E1E"\\nsecondaryBackgroundColor="#333333"\\ntextColor="#D4D4D4"\\nfont="sans serif"\\n\\n--- End of config.toml ---\\n\\n--- Start of .breakpoints ---\\n{\\n  "files": {}\\n}\\n--- End of .breakpoints ---\\n\\n--- Start of pyproject.toml ---\\n[tool.poetry]\\nname = "python-template"\\nversion = "0.1.0"\\ndescription = ""\\nauthors = ["Your Name <you@example.com>"]\\n\\n[tool.poetry.dependencies]\\npython = ">=3.10.0,<3.11"\\nstreamlit = "^1.27.2"\\nmodules = "^1.0.0"\\nrequests = "^2.32.3"\\nstreamlit-option-menu = "^0.3.13"\\npymongo = "^4.7.3"\\nnumpy = "^2.0.0"\\npandas = "^2.2.2"\\nplotly = "^5.22.0"\\n\\n[tool.pyright]\\n# https://github.com/microsoft/pyright/blob/main/docs/configuration.md\\nuseLibraryCodeForTypes = true\\nexclude = [".cache"]\\n\\n[tool.ruff]\\n# https://beta.ruff.rs/docs/configuration/\\nselect = [\\\'E\\\', \\\'W\\\', \\\'F\\\', \\\'I\\\', \\\'B\\\', \\\'C4\\\', \\\'ARG\\\', \\\'SIM\\\']\\nignore = [\\\'W291\\\', \\\'W292\\\', \\\'W293\\\']\\n\\n[build-system]\\nrequires = ["poetry-core>=1.0.0"]\\nbuild-backend = "poetry.core.masonry.api"\\n--- End of pyproject.toml ---\\n\\n--- Start of poetry.lock ---\\n# This file is automatically @generated by Poetry 1.5.4 and should not be changed by hand.\\n\\n[[package]]\\nname = "altair"\\nversion = "5.1.2"\\ndescription = "Vega-Altair: A declarative statistical visualization library for Python."\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "altair-5.1.2-py3-none-any.whl", hash = "sha256:7219708ec33c152e53145485040f428954ed15fd09b2a2d89e543e6d111dae7f"},\\n    {file = "altair-5.1.2.tar.gz", hash = "sha256:e5f52a71853a607c61ce93ad4a414b3d486cd0d46ac597a24ae8bd1ac99dd460"},\\n]\\n\\n[package.dependencies]\\njinja2 = "*"\\njsonschema = ">=3.0"\\nnumpy = "*"\\npackaging = "*"\\npandas = ">=0.25"\\ntoolz = "*"\\ntyping-extensions = {version = ">=4.0.1", markers = "python_version < \\\\"3.11\\\\""}\\n\\n[package.extras]\\ndev = ["anywidget", "black (<24)", "hatch", "ipython", "m2r", "mypy", "pandas-stubs", "pyarrow (>=11)", "pytest", "pytest-cov", "ruff", "types-jsonschema", "types-setuptools", "vega-datasets", "vegafusion[embed] (>=1.4.0)", "vl-convert-python (>=0.14.0)"]\\ndoc = ["docutils", "geopandas", "jinja2", "myst-parser", "numpydoc", "pillow (>=9,<10)", "pydata-sphinx-theme", "scipy", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinxext-altair"]\\n\\n[[package]]\\nname = "attrs"\\nversion = "23.1.0"\\ndescription = "Classes Without Boilerplate"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "attrs-23.1.0-py3-none-any.whl", hash = "sha256:1f28b4522cdc2fb4256ac1a020c78acf9cba2c6b461ccd2c126f3aa8e8335d04"},\\n    {file = "attrs-23.1.0.tar.gz", hash = "sha256:6279836d581513a26f1bf235f9acd333bc9115683f14f7e8fae46c98fc50e015"},\\n]\\n\\n[package.extras]\\ncov = ["attrs[tests]", "coverage[toml] (>=5.3)"]\\ndev = ["attrs[docs,tests]", "pre-commit"]\\ndocs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]\\ntests = ["attrs[tests-no-zope]", "zope-interface"]\\ntests-no-zope = ["cloudpickle", "hypothesis", "mypy (>=1.1.1)", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins", "pytest-xdist[psutil]"]\\n\\n[[package]]\\nname = "blinker"\\nversion = "1.6.3"\\ndescription = "Fast, simple object-to-object and broadcast signaling"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "blinker-1.6.3-py3-none-any.whl", hash = "sha256:296320d6c28b006eb5e32d4712202dbcdcbf5dc482da298c2f44881c43884aaa"},\\n    {file = "blinker-1.6.3.tar.gz", hash = "sha256:152090d27c1c5c722ee7e48504b02d76502811ce02e1523553b4cf8c8b3d3a8d"},\\n]\\n\\n[[package]]\\nname = "cachetools"\\nversion = "5.3.1"\\ndescription = "Extensible memoizing collections and decorators"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "cachetools-5.3.1-py3-none-any.whl", hash = "sha256:95ef631eeaea14ba2e36f06437f36463aac3a096799e876ee55e5cdccb102590"},\\n    {file = "cachetools-5.3.1.tar.gz", hash = "sha256:dce83f2d9b4e1f732a8cd44af8e8fab2dbe46201467fc98b3ef8f269092bf62b"},\\n]\\n\\n[[package]]\\nname = "certifi"\\nversion = "2023.7.22"\\ndescription = "Python package for providing Mozilla\\\'s CA Bundle."\\noptional = false\\npython-versions = ">=3.6"\\nfiles = [\\n    {file = "certifi-2023.7.22-py3-none-any.whl", hash = "sha256:92d6037539857d8206b8f6ae472e8b77db8058fec5937a1ef3f54304089edbb9"},\\n    {file = "certifi-2023.7.22.tar.gz", hash = "sha256:539cc1d13202e33ca466e88b2807e29f4c13049d6d87031a3c110744495cb082"},\\n]\\n\\n[[package]]\\nname = "charset-normalizer"\\nversion = "3.3.0"\\ndescription = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."\\noptional = false\\npython-versions = ">=3.7.0"\\nfiles = [\\n    {file = "charset-normalizer-3.3.0.tar.gz", hash = "sha256:63563193aec44bce707e0c5ca64ff69fa72ed7cf34ce6e11d5127555756fd2f6"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:effe5406c9bd748a871dbcaf3ac69167c38d72db8c9baf3ff954c344f31c4cbe"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:4162918ef3098851fcd8a628bf9b6a98d10c380725df9e04caf5ca6dd48c847a"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0570d21da019941634a531444364f2482e8db0b3425fcd5ac0c36565a64142c8"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5707a746c6083a3a74b46b3a631d78d129edab06195a92a8ece755aac25a3f3d"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:278c296c6f96fa686d74eb449ea1697f3c03dc28b75f873b65b5201806346a69"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:a4b71f4d1765639372a3b32d2638197f5cd5221b19531f9245fcc9ee62d38f56"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f5969baeaea61c97efa706b9b107dcba02784b1601c74ac84f2a532ea079403e"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a3f93dab657839dfa61025056606600a11d0b696d79386f974e459a3fbc568ec"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:db756e48f9c5c607b5e33dd36b1d5872d0422e960145b08ab0ec7fd420e9d649"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:232ac332403e37e4a03d209a3f92ed9071f7d3dbda70e2a5e9cff1c4ba9f0678"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_ppc64le.whl", hash = "sha256:e5c1502d4ace69a179305abb3f0bb6141cbe4714bc9b31d427329a95acfc8bdd"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_s390x.whl", hash = "sha256:2502dd2a736c879c0f0d3e2161e74d9907231e25d35794584b1ca5284e43f596"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23e8565ab7ff33218530bc817922fae827420f143479b753104ab801145b1d5b"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win32.whl", hash = "sha256:1872d01ac8c618a8da634e232f24793883d6e456a66593135aeafe3784b0848d"},\\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win_amd64.whl", hash = "sha256:557b21a44ceac6c6b9773bc65aa1b4cc3e248a5ad2f5b914b91579a32e22204d"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:d7eff0f27edc5afa9e405f7165f85a6d782d308f3b6b9d96016c010597958e63"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:6a685067d05e46641d5d1623d7c7fdf15a357546cbb2f71b0ebde91b175ffc3e"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:0d3d5b7db9ed8a2b11a774db2bbea7ba1884430a205dbd54a32d61d7c2a190fa"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2935ffc78db9645cb2086c2f8f4cfd23d9b73cc0dc80334bc30aac6f03f68f8c"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:9fe359b2e3a7729010060fbca442ca225280c16e923b37db0e955ac2a2b72a05"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:380c4bde80bce25c6e4f77b19386f5ec9db230df9f2f2ac1e5ad7af2caa70459"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0d1e3732768fecb052d90d62b220af62ead5748ac51ef61e7b32c266cac9293"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1b2919306936ac6efb3aed1fbf81039f7087ddadb3160882a57ee2ff74fd2382"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:f8888e31e3a85943743f8fc15e71536bda1c81d5aa36d014a3c0c44481d7db6e"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:82eb849f085624f6a607538ee7b83a6d8126df6d2f7d3b319cb837b289123078"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_ppc64le.whl", hash = "sha256:7b8b8bf1189b3ba9b8de5c8db4d541b406611a71a955bbbd7385bbc45fcb786c"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_s390x.whl", hash = "sha256:5adf257bd58c1b8632046bbe43ee38c04e1038e9d37de9c57a94d6bd6ce5da34"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:c350354efb159b8767a6244c166f66e67506e06c8924ed74669b2c70bc8735b1"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win32.whl", hash = "sha256:02af06682e3590ab952599fbadac535ede5d60d78848e555aa58d0c0abbde786"},\\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win_amd64.whl", hash = "sha256:86d1f65ac145e2c9ed71d8ffb1905e9bba3a91ae29ba55b4c46ae6fc31d7c0d4"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:3b447982ad46348c02cb90d230b75ac34e9886273df3a93eec0539308a6296d7"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:abf0d9f45ea5fb95051c8bfe43cb40cda383772f7e5023a83cc481ca2604d74e"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:b09719a17a2301178fac4470d54b1680b18a5048b481cb8890e1ef820cb80455"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b3d9b48ee6e3967b7901c052b670c7dda6deb812c309439adaffdec55c6d7b78"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:edfe077ab09442d4ef3c52cb1f9dab89bff02f4524afc0acf2d46be17dc479f5"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3debd1150027933210c2fc321527c2299118aa929c2f5a0a80ab6953e3bd1908"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:86f63face3a527284f7bb8a9d4f78988e3c06823f7bea2bd6f0e0e9298ca0403"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:24817cb02cbef7cd499f7c9a2735286b4782bd47a5b3516a0e84c50eab44b98e"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:c71f16da1ed8949774ef79f4a0260d28b83b3a50c6576f8f4f0288d109777989"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:9cf3126b85822c4e53aa28c7ec9869b924d6fcfb76e77a45c44b83d91afd74f9"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_ppc64le.whl", hash = "sha256:b3b2316b25644b23b54a6f6401074cebcecd1244c0b8e80111c9a3f1c8e83d65"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_s390x.whl", hash = "sha256:03680bb39035fbcffe828eae9c3f8afc0428c91d38e7d61aa992ef7a59fb120e"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:4cc152c5dd831641e995764f9f0b6589519f6f5123258ccaca8c6d34572fefa8"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win32.whl", hash = "sha256:b8f3307af845803fb0b060ab76cf6dd3a13adc15b6b451f54281d25911eb92df"},\\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win_amd64.whl", hash = "sha256:8eaf82f0eccd1505cf39a45a6bd0a8cf1c70dcfc30dba338207a969d91b965c0"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:dc45229747b67ffc441b3de2f3ae5e62877a282ea828a5bdb67883c4ee4a8810"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2f4a0033ce9a76e391542c182f0d48d084855b5fcba5010f707c8e8c34663d77"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ada214c6fa40f8d800e575de6b91a40d0548139e5dc457d2ebb61470abf50186"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b1121de0e9d6e6ca08289583d7491e7fcb18a439305b34a30b20d8215922d43c"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1063da2c85b95f2d1a430f1c33b55c9c17ffaf5e612e10aeaad641c55a9e2b9d"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:70f1d09c0d7748b73290b29219e854b3207aea922f839437870d8cc2168e31cc"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:250c9eb0f4600361dd80d46112213dff2286231d92d3e52af1e5a6083d10cad9"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:750b446b2ffce1739e8578576092179160f6d26bd5e23eb1789c4d64d5af7dc7"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_ppc64le.whl", hash = "sha256:fc52b79d83a3fe3a360902d3f5d79073a993597d48114c29485e9431092905d8"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_s390x.whl", hash = "sha256:588245972aca710b5b68802c8cad9edaa98589b1b42ad2b53accd6910dad3545"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:e39c7eb31e3f5b1f88caff88bcff1b7f8334975b46f6ac6e9fc725d829bc35d4"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win32.whl", hash = "sha256:abecce40dfebbfa6abf8e324e1860092eeca6f7375c8c4e655a8afb61af58f2c"},\\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win_amd64.whl", hash = "sha256:24a91a981f185721542a0b7c92e9054b7ab4fea0508a795846bc5b0abf8118d4"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:67b8cc9574bb518ec76dc8e705d4c39ae78bb96237cb533edac149352c1f39fe"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:ac71b2977fb90c35d41c9453116e283fac47bb9096ad917b8819ca8b943abecd"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:3ae38d325b512f63f8da31f826e6cb6c367336f95e418137286ba362925c877e"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:542da1178c1c6af8873e143910e2269add130a299c9106eef2594e15dae5e482"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:30a85aed0b864ac88309b7d94be09f6046c834ef60762a8833b660139cfbad13"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aae32c93e0f64469f74ccc730a7cb21c7610af3a775157e50bbd38f816536b38"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:15b26ddf78d57f1d143bdf32e820fd8935d36abe8a25eb9ec0b5a71c82eb3895"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7f5d10bae5d78e4551b7be7a9b29643a95aded9d0f602aa2ba584f0388e7a557"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:249c6470a2b60935bafd1d1d13cd613f8cd8388d53461c67397ee6a0f5dce741"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:c5a74c359b2d47d26cdbbc7845e9662d6b08a1e915eb015d044729e92e7050b7"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_ppc64le.whl", hash = "sha256:b5bcf60a228acae568e9911f410f9d9e0d43197d030ae5799e20dca8df588287"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_s390x.whl", hash = "sha256:187d18082694a29005ba2944c882344b6748d5be69e3a89bf3cc9d878e548d5a"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:81bf654678e575403736b85ba3a7867e31c2c30a69bc57fe88e3ace52fb17b89"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win32.whl", hash = "sha256:85a32721ddde63c9df9ebb0d2045b9691d9750cb139c161c80e500d210f5e26e"},\\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win_amd64.whl", hash = "sha256:468d2a840567b13a590e67dd276c570f8de00ed767ecc611994c301d0f8c014f"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:e0fc42822278451bc13a2e8626cf2218ba570f27856b536e00cfa53099724828"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:09c77f964f351a7369cc343911e0df63e762e42bac24cd7d18525961c81754f4"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:12ebea541c44fdc88ccb794a13fe861cc5e35d64ed689513a5c03d05b53b7c82"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:805dfea4ca10411a5296bcc75638017215a93ffb584c9e344731eef0dcfb026a"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:96c2b49eb6a72c0e4991d62406e365d87067ca14c1a729a870d22354e6f68115"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aaf7b34c5bc56b38c931a54f7952f1ff0ae77a2e82496583b247f7c969eb1479"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:619d1c96099be5823db34fe89e2582b336b5b074a7f47f819d6b3a57ff7bdb86"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a0ac5e7015a5920cfce654c06618ec40c33e12801711da6b4258af59a8eff00a"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:93aa7eef6ee71c629b51ef873991d6911b906d7312c6e8e99790c0f33c576f89"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7966951325782121e67c81299a031f4c115615e68046f79b85856b86ebffc4cd"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_ppc64le.whl", hash = "sha256:02673e456dc5ab13659f85196c534dc596d4ef260e4d86e856c3b2773ce09843"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_s390x.whl", hash = "sha256:c2af80fb58f0f24b3f3adcb9148e6203fa67dd3f61c4af146ecad033024dde43"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:153e7b6e724761741e0974fc4dcd406d35ba70b92bfe3fedcb497226c93b9da7"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win32.whl", hash = "sha256:d47ecf253780c90ee181d4d871cd655a789da937454045b17b5798da9393901a"},\\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win_amd64.whl", hash = "sha256:d97d85fa63f315a8bdaba2af9a6a686e0eceab77b3089af45133252618e70884"},\\n    {file = "charset_normalizer-3.3.0-py3-none-any.whl", hash = "sha256:e46cd37076971c1040fc8c41273a8b3e2c624ce4f2be3f5dfcb7a430c1d3acc2"},\\n]\\n\\n[[package]]\\nname = "click"\\nversion = "8.1.7"\\ndescription = "Composable command line interface toolkit"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "click-8.1.7-py3-none-any.whl", hash = "sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28"},\\n    {file = "click-8.1.7.tar.gz", hash = "sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de"},\\n]\\n\\n[package.dependencies]\\ncolorama = {version = "*", markers = "platform_system == \\\\"Windows\\\\""}\\n\\n[[package]]\\nname = "colorama"\\nversion = "0.4.6"\\ndescription = "Cross-platform colored terminal text."\\noptional = false\\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"\\nfiles = [\\n    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},\\n    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},\\n]\\n\\n[[package]]\\nname = "dnspython"\\nversion = "2.6.1"\\ndescription = "DNS toolkit"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "dnspython-2.6.1-py3-none-any.whl", hash = "sha256:5ef3b9680161f6fa89daf8ad451b5f1a33b18ae8a1c6778cdf4b43f08c0a6e50"},\\n    {file = "dnspython-2.6.1.tar.gz", hash = "sha256:e8f0f9c23a7b7cb99ded64e6c3a6f3e701d78f50c55e002b839dea7225cff7cc"},\\n]\\n\\n[package.extras]\\ndev = ["black (>=23.1.0)", "coverage (>=7.0)", "flake8 (>=7)", "mypy (>=1.8)", "pylint (>=3)", "pytest (>=7.4)", "pytest-cov (>=4.1.0)", "sphinx (>=7.2.0)", "twine (>=4.0.0)", "wheel (>=0.42.0)"]\\ndnssec = ["cryptography (>=41)"]\\ndoh = ["h2 (>=4.1.0)", "httpcore (>=1.0.0)", "httpx (>=0.26.0)"]\\ndoq = ["aioquic (>=0.9.25)"]\\nidna = ["idna (>=3.6)"]\\ntrio = ["trio (>=0.23)"]\\nwmi = ["wmi (>=1.5.1)"]\\n\\n[[package]]\\nname = "gitdb"\\nversion = "4.0.10"\\ndescription = "Git Object Database"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "gitdb-4.0.10-py3-none-any.whl", hash = "sha256:c286cf298426064079ed96a9e4a9d39e7f3e9bf15ba60701e95f5492f28415c7"},\\n    {file = "gitdb-4.0.10.tar.gz", hash = "sha256:6eb990b69df4e15bad899ea868dc46572c3f75339735663b81de79b06f17eb9a"},\\n]\\n\\n[package.dependencies]\\nsmmap = ">=3.0.1,<6"\\n\\n[[package]]\\nname = "gitpython"\\nversion = "3.1.37"\\ndescription = "GitPython is a Python library used to interact with Git repositories"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "GitPython-3.1.37-py3-none-any.whl", hash = "sha256:5f4c4187de49616d710a77e98ddf17b4782060a1788df441846bddefbb89ab33"},\\n    {file = "GitPython-3.1.37.tar.gz", hash = "sha256:f9b9ddc0761c125d5780eab2d64be4873fc6817c2899cbcb34b02344bdc7bc54"},\\n]\\n\\n[package.dependencies]\\ngitdb = ">=4.0.1,<5"\\n\\n[package.extras]\\ntest = ["black", "coverage[toml]", "ddt (>=1.1.1,!=1.4.3)", "mypy", "pre-commit", "pytest", "pytest-cov", "pytest-sugar"]\\n\\n[[package]]\\nname = "idna"\\nversion = "3.4"\\ndescription = "Internationalized Domain Names in Applications (IDNA)"\\noptional = false\\npython-versions = ">=3.5"\\nfiles = [\\n    {file = "idna-3.4-py3-none-any.whl", hash = "sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2"},\\n    {file = "idna-3.4.tar.gz", hash = "sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4"},\\n]\\n\\n[[package]]\\nname = "jinja2"\\nversion = "3.1.2"\\ndescription = "A very fast and expressive template engine."\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "Jinja2-3.1.2-py3-none-any.whl", hash = "sha256:6088930bfe239f0e6710546ab9c19c9ef35e29792895fed6e6e31a023a182a61"},\\n    {file = "Jinja2-3.1.2.tar.gz", hash = "sha256:31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852"},\\n]\\n\\n[package.dependencies]\\nMarkupSafe = ">=2.0"\\n\\n[package.extras]\\ni18n = ["Babel (>=2.7)"]\\n\\n[[package]]\\nname = "jsonschema"\\nversion = "4.19.1"\\ndescription = "An implementation of JSON Schema validation for Python"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "jsonschema-4.19.1-py3-none-any.whl", hash = "sha256:cd5f1f9ed9444e554b38ba003af06c0a8c2868131e56bfbef0550fb450c0330e"},\\n    {file = "jsonschema-4.19.1.tar.gz", hash = "sha256:ec84cc37cfa703ef7cd4928db24f9cb31428a5d0fa77747b8b51a847458e0bbf"},\\n]\\n\\n[package.dependencies]\\nattrs = ">=22.2.0"\\njsonschema-specifications = ">=2023.03.6"\\nreferencing = ">=0.28.4"\\nrpds-py = ">=0.7.1"\\n\\n[package.extras]\\nformat = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]\\nformat-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]\\n\\n[[package]]\\nname = "jsonschema-specifications"\\nversion = "2023.7.1"\\ndescription = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "jsonschema_specifications-2023.7.1-py3-none-any.whl", hash = "sha256:05adf340b659828a004220a9613be00fa3f223f2b82002e273dee62fd50524b1"},\\n    {file = "jsonschema_specifications-2023.7.1.tar.gz", hash = "sha256:c91a50404e88a1f6ba40636778e2ee08f6e24c5613fe4c53ac24578a5a7f72bb"},\\n]\\n\\n[package.dependencies]\\nreferencing = ">=0.28.0"\\n\\n[[package]]\\nname = "markdown-it-py"\\nversion = "3.0.0"\\ndescription = "Python port of markdown-it. Markdown parsing, done right!"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "markdown-it-py-3.0.0.tar.gz", hash = "sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb"},\\n    {file = "markdown_it_py-3.0.0-py3-none-any.whl", hash = "sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1"},\\n]\\n\\n[package.dependencies]\\nmdurl = ">=0.1,<1.0"\\n\\n[package.extras]\\nbenchmarking = ["psutil", "pytest", "pytest-benchmark"]\\ncode-style = ["pre-commit (>=3.0,<4.0)"]\\ncompare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]\\nlinkify = ["linkify-it-py (>=1,<3)"]\\nplugins = ["mdit-py-plugins"]\\nprofiling = ["gprof2dot"]\\nrtd = ["jupyter_sphinx", "mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx_book_theme"]\\ntesting = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]\\n\\n[[package]]\\nname = "markupsafe"\\nversion = "2.1.3"\\ndescription = "Safely add untrusted strings to HTML/XML markup."\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:cd0f502fe016460680cd20aaa5a76d241d6f35a1c3350c474bac1273803893fa"},\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e09031c87a1e51556fdcb46e5bd4f59dfb743061cf93c4d6831bf894f125eb57"},\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68e78619a61ecf91e76aa3e6e8e33fc4894a2bebe93410754bd28fce0a8a4f9f"},\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:65c1a9bcdadc6c28eecee2c119465aebff8f7a584dd719facdd9e825ec61ab52"},\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:525808b8019e36eb524b8c68acdd63a37e75714eac50e988180b169d64480a00"},\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:962f82a3086483f5e5f64dbad880d31038b698494799b097bc59c2edf392fce6"},\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:aa7bd130efab1c280bed0f45501b7c8795f9fdbeb02e965371bbef3523627779"},\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:c9c804664ebe8f83a211cace637506669e7890fec1b4195b505c214e50dd4eb7"},\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win32.whl", hash = "sha256:10bbfe99883db80bdbaff2dcf681dfc6533a614f700da1287707e8a5d78a8431"},\\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win_amd64.whl", hash = "sha256:1577735524cdad32f9f694208aa75e422adba74f1baee7551620e43a3141f559"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:ad9e82fb8f09ade1c3e1b996a6337afac2b8b9e365f926f5a61aacc71adc5b3c"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:3c0fae6c3be832a0a0473ac912810b2877c8cb9d76ca48de1ed31e1c68386575"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b076b6226fb84157e3f7c971a47ff3a679d837cf338547532ab866c57930dbee"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:bfce63a9e7834b12b87c64d6b155fdd9b3b96191b6bd334bf37db7ff1fe457f2"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:338ae27d6b8745585f87218a3f23f1512dbf52c26c28e322dbe54bcede54ccb9"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:e4dd52d80b8c83fdce44e12478ad2e85c64ea965e75d66dbeafb0a3e77308fcc"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:df0be2b576a7abbf737b1575f048c23fb1d769f267ec4358296f31c2479db8f9"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:5bbe06f8eeafd38e5d0a4894ffec89378b6c6a625ff57e3028921f8ff59318ac"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win32.whl", hash = "sha256:dd15ff04ffd7e05ffcb7fe79f1b98041b8ea30ae9234aed2a9168b5797c3effb"},\\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win_amd64.whl", hash = "sha256:134da1eca9ec0ae528110ccc9e48041e0828d79f24121a1a146161103c76e686"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:f698de3fd0c4e6972b92290a45bd9b1536bffe8c6759c62471efaa8acb4c37bc"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:aa57bd9cf8ae831a362185ee444e15a93ecb2e344c8e52e4d721ea3ab6ef1823"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:ffcc3f7c66b5f5b7931a5aa68fc9cecc51e685ef90282f4a82f0f5e9b704ad11"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47d4f1c5f80fc62fdd7777d0d40a2e9dda0a05883ab11374334f6c4de38adffd"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1f67c7038d560d92149c060157d623c542173016c4babc0c1913cca0564b9939"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:9aad3c1755095ce347e26488214ef77e0485a3c34a50c5a5e2471dff60b9dd9c"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:14ff806850827afd6b07a5f32bd917fb7f45b046ba40c57abdb636674a8b559c"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8f9293864fe09b8149f0cc42ce56e3f0e54de883a9de90cd427f191c346eb2e1"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win32.whl", hash = "sha256:715d3562f79d540f251b99ebd6d8baa547118974341db04f5ad06d5ea3eb8007"},\\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win_amd64.whl", hash = "sha256:1b8dd8c3fd14349433c79fa8abeb573a55fc0fdd769133baac1f5e07abf54aeb"},\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:8e254ae696c88d98da6555f5ace2279cf7cd5b3f52be2b5cf97feafe883b58d2"},\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cb0932dc158471523c9637e807d9bfb93e06a95cbf010f1a38b98623b929ef2b"},\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9402b03f1a1b4dc4c19845e5c749e3ab82d5078d16a2a4c2cd2df62d57bb0707"},\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:ca379055a47383d02a5400cb0d110cef0a776fc644cda797db0c5696cfd7e18e"},\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:b7ff0f54cb4ff66dd38bebd335a38e2c22c41a8ee45aa608efc890ac3e3931bc"},\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:c011a4149cfbcf9f03994ec2edffcb8b1dc2d2aede7ca243746df97a5d41ce48"},\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:56d9f2ecac662ca1611d183feb03a3fa4406469dafe241673d521dd5ae92a155"},\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win32.whl", hash = "sha256:8758846a7e80910096950b67071243da3e5a20ed2546e6392603c096778d48e0"},\\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win_amd64.whl", hash = "sha256:787003c0ddb00500e49a10f2844fac87aa6ce977b90b0feaaf9de23c22508b24"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:2ef12179d3a291be237280175b542c07a36e7f60718296278d8593d21ca937d4"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:2c1b19b3aaacc6e57b7e25710ff571c24d6c3613a45e905b1fde04d691b98ee0"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8afafd99945ead6e075b973fefa56379c5b5c53fd8937dad92c662da5d8fd5ee"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8c41976a29d078bb235fea9b2ecd3da465df42a562910f9022f1a03107bd02be"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d080e0a5eb2529460b30190fcfcc4199bd7f827663f858a226a81bc27beaa97e"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:69c0f17e9f5a7afdf2cc9fb2d1ce6aabdb3bafb7f38017c0b77862bcec2bbad8"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:504b320cd4b7eff6f968eddf81127112db685e81f7e36e75f9f84f0df46041c3"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:42de32b22b6b804f42c5d98be4f7e5e977ecdd9ee9b660fda1a3edf03b11792d"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win32.whl", hash = "sha256:ceb01949af7121f9fc39f7d27f91be8546f3fb112c608bc4029aef0bab86a2a5"},\\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win_amd64.whl", hash = "sha256:1b40069d487e7edb2676d3fbdb2b0829ffa2cd63a2ec26c4938b2d34391b4ecc"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:8023faf4e01efadfa183e863fefde0046de576c6f14659e8782065bcece22198"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6b2b56950d93e41f33b4223ead100ea0fe11f8e6ee5f641eb753ce4b77a7042b"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9dcdfd0eaf283af041973bff14a2e143b8bd64e069f4c383416ecd79a81aab58"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:05fb21170423db021895e1ea1e1f3ab3adb85d1c2333cbc2310f2a26bc77272e"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:282c2cb35b5b673bbcadb33a585408104df04f14b2d9b01d4c345a3b92861c2c"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:ab4a0df41e7c16a1392727727e7998a467472d0ad65f3ad5e6e765015df08636"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7ef3cb2ebbf91e330e3bb937efada0edd9003683db6b57bb108c4001f37a02ea"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:0a4e4a1aff6c7ac4cd55792abf96c915634c2b97e3cc1c7129578aa68ebd754e"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win32.whl", hash = "sha256:fec21693218efe39aa7f8599346e90c705afa52c5b31ae019b2e57e8f6542bb2"},\\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win_amd64.whl", hash = "sha256:3fd4abcb888d15a94f32b75d8fd18ee162ca0c064f35b11134be77050296d6ba"},\\n    {file = "MarkupSafe-2.1.3.tar.gz", hash = "sha256:af598ed32d6ae86f1b747b82783958b1a4ab8f617b06fe68795c7f026abbdcad"},\\n]\\n\\n[[package]]\\nname = "mdurl"\\nversion = "0.1.2"\\ndescription = "Markdown URL utilities"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},\\n    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},\\n]\\n\\n[[package]]\\nname = "modules"\\nversion = "1.0.0"\\ndescription = "Simple test on modules"\\noptional = false\\npython-versions = "*"\\nfiles = [\\n    {file = "modules-1.0.0.tar.gz", hash = "sha256:5146b31b76e9899f95c19e3654c6aee2799694b912ca00faec6798725486934b"},\\n]\\n\\n[[package]]\\nname = "numpy"\\nversion = "2.0.0"\\ndescription = "Fundamental package for array computing in Python"\\noptional = false\\npython-versions = ">=3.9"\\nfiles = [\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:04494f6ec467ccb5369d1808570ae55f6ed9b5809d7f035059000a37b8d7e86f"},\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:2635dbd200c2d6faf2ef9a0d04f0ecc6b13b3cad54f7c67c61155138835515d2"},\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_arm64.whl", hash = "sha256:0a43f0974d501842866cc83471bdb0116ba0dffdbaac33ec05e6afed5b615238"},\\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_x86_64.whl", hash = "sha256:8d83bb187fb647643bd56e1ae43f273c7f4dbcdf94550d7938cfc32566756514"},\\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:79e843d186c8fb1b102bef3e2bc35ef81160ffef3194646a7fdd6a73c6b97196"},\\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d7696c615765091cc5093f76fd1fa069870304beaccfd58b5dcc69e55ef49c1"},\\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:b4c76e3d4c56f145d41b7b6751255feefae92edbc9a61e1758a98204200f30fc"},\\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:acd3a644e4807e73b4e1867b769fbf1ce8c5d80e7caaef0d90dcdc640dfc9787"},\\n    {file = "numpy-2.0.0-cp310-cp310-win32.whl", hash = "sha256:cee6cc0584f71adefe2c908856ccc98702baf95ff80092e4ca46061538a2ba98"},\\n    {file = "numpy-2.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:ed08d2703b5972ec736451b818c2eb9da80d66c3e84aed1deeb0c345fefe461b"},\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:ad0c86f3455fbd0de6c31a3056eb822fc939f81b1618f10ff3406971893b62a5"},\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:e7f387600d424f91576af20518334df3d97bc76a300a755f9a8d6e4f5cadd289"},\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_arm64.whl", hash = "sha256:34f003cb88b1ba38cb9a9a4a3161c1604973d7f9d5552c38bc2f04f829536609"},\\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_x86_64.whl", hash = "sha256:b6f6a8f45d0313db07d6d1d37bd0b112f887e1369758a5419c0370ba915b3871"},\\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5f64641b42b2429f56ee08b4f427a4d2daf916ec59686061de751a55aafa22e4"},\\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:a7039a136017eaa92c1848152827e1424701532ca8e8967fe480fe1569dae581"},\\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:46e161722e0f619749d1cd892167039015b2c2817296104487cd03ed4a955995"},\\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:0e50842b2295ba8414c8c1d9d957083d5dfe9e16828b37de883f51fc53c4016f"},\\n    {file = "numpy-2.0.0-cp311-cp311-win32.whl", hash = "sha256:2ce46fd0b8a0c947ae047d222f7136fc4d55538741373107574271bc00e20e8f"},\\n    {file = "numpy-2.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:fbd6acc766814ea6443628f4e6751d0da6593dae29c08c0b2606164db026970c"},\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:354f373279768fa5a584bac997de6a6c9bc535c482592d7a813bb0c09be6c76f"},\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:4d2f62e55a4cd9c58c1d9a1c9edaedcd857a73cb6fda875bf79093f9d9086f85"},\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_arm64.whl", hash = "sha256:1e72728e7501a450288fc8e1f9ebc73d90cfd4671ebbd631f3e7857c39bd16f2"},\\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_x86_64.whl", hash = "sha256:84554fc53daa8f6abf8e8a66e076aff6ece62de68523d9f665f32d2fc50fd66e"},\\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c73aafd1afca80afecb22718f8700b40ac7cab927b8abab3c3e337d70e10e5a2"},\\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:49d9f7d256fbc804391a7f72d4a617302b1afac1112fac19b6c6cec63fe7fe8a"},\\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:0ec84b9ba0654f3b962802edc91424331f423dcf5d5f926676e0150789cb3d95"},\\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:feff59f27338135776f6d4e2ec7aeeac5d5f7a08a83e80869121ef8164b74af9"},\\n    {file = "numpy-2.0.0-cp312-cp312-win32.whl", hash = "sha256:c5a59996dc61835133b56a32ebe4ef3740ea5bc19b3983ac60cc32be5a665d54"},\\n    {file = "numpy-2.0.0-cp312-cp312-win_amd64.whl", hash = "sha256:a356364941fb0593bb899a1076b92dfa2029f6f5b8ba88a14fd0984aaf76d0df"},\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:e61155fae27570692ad1d327e81c6cf27d535a5d7ef97648a17d922224b216de"},\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:4554eb96f0fd263041baf16cf0881b3f5dafae7a59b1049acb9540c4d57bc8cb"},\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_arm64.whl", hash = "sha256:903703372d46bce88b6920a0cd86c3ad82dae2dbef157b5fc01b70ea1cfc430f"},\\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_x86_64.whl", hash = "sha256:3e8e01233d57639b2e30966c63d36fcea099d17c53bf424d77f088b0f4babd86"},\\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cde1753efe513705a0c6d28f5884e22bdc30438bf0085c5c486cdaff40cd67a"},\\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:821eedb7165ead9eebdb569986968b541f9908979c2da8a4967ecac4439bae3d"},\\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:9a1712c015831da583b21c5bfe15e8684137097969c6d22e8316ba66b5baabe4"},\\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:9c27f0946a3536403efb0e1c28def1ae6730a72cd0d5878db38824855e3afc44"},\\n    {file = "numpy-2.0.0-cp39-cp39-win32.whl", hash = "sha256:63b92c512d9dbcc37f9d81b123dec99fdb318ba38c8059afc78086fe73820275"},\\n    {file = "numpy-2.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:3f6bed7f840d44c08ebdb73b1825282b801799e325bcbdfa6bc5c370e5aecc65"},\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:9416a5c2e92ace094e9f0082c5fd473502c91651fb896bc17690d6fc475128d6"},\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_14_0_x86_64.whl", hash = "sha256:17067d097ed036636fa79f6a869ac26df7db1ba22039d962422506640314933a"},\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:38ecb5b0582cd125f67a629072fed6f83562d9dd04d7e03256c9829bdec027ad"},\\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:cef04d068f5fb0518a77857953193b6bb94809a806bd0a14983a8f12ada060c9"},\\n    {file = "numpy-2.0.0.tar.gz", hash = "sha256:cf5d1c9e6837f8af9f92b6bd3e86d513cdc11f60fd62185cc49ec7d1aba34864"},\\n]\\n\\n[[package]]\\nname = "packaging"\\nversion = "23.2"\\ndescription = "Core utilities for Python packages"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "packaging-23.2-py3-none-any.whl", hash = "sha256:8c491190033a9af7e1d931d0b5dacc2ef47509b34dd0de67ed209b5203fc88c7"},\\n    {file = "packaging-23.2.tar.gz", hash = "sha256:048fb0e9405036518eaaf48a55953c750c11e1a1b68e0dd1a9d62ed0c092cfc5"},\\n]\\n\\n[[package]]\\nname = "pandas"\\nversion = "2.2.2"\\ndescription = "Powerful data structures for data analysis, time series, and statistics"\\noptional = false\\npython-versions = ">=3.9"\\nfiles = [\\n    {file = "pandas-2.2.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:90c6fca2acf139569e74e8781709dccb6fe25940488755716d1d354d6bc58bce"},\\n    {file = "pandas-2.2.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:c7adfc142dac335d8c1e0dcbd37eb8617eac386596eb9e1a1b77791cf2498238"},\\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4abfe0be0d7221be4f12552995e58723c7422c80a659da13ca382697de830c08"},\\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8635c16bf3d99040fdf3ca3db669a7250ddf49c55dc4aa8fe0ae0fa8d6dcc1f0"},\\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:40ae1dffb3967a52203105a077415a86044a2bea011b5f321c6aa64b379a3f51"},\\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:8e5a0b00e1e56a842f922e7fae8ae4077aee4af0acb5ae3622bd4b4c30aedf99"},\\n    {file = "pandas-2.2.2-cp310-cp310-win_amd64.whl", hash = "sha256:ddf818e4e6c7c6f4f7c8a12709696d193976b591cc7dc50588d3d1a6b5dc8772"},\\n    {file = "pandas-2.2.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:696039430f7a562b74fa45f540aca068ea85fa34c244d0deee539cb6d70aa288"},\\n    {file = "pandas-2.2.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:8e90497254aacacbc4ea6ae5e7a8cd75629d6ad2b30025a4a8b09aa4faf55151"},\\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:58b84b91b0b9f4bafac2a0ac55002280c094dfc6402402332c0913a59654ab2b"},\\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d2123dc9ad6a814bcdea0f099885276b31b24f7edf40f6cdbc0912672e22eee"},\\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:2925720037f06e89af896c70bca73459d7e6a4be96f9de79e2d440bd499fe0db"},\\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:0cace394b6ea70c01ca1595f839cf193df35d1575986e484ad35c4aeae7266c1"},\\n    {file = "pandas-2.2.2-cp311-cp311-win_amd64.whl", hash = "sha256:873d13d177501a28b2756375d59816c365e42ed8417b41665f346289adc68d24"},\\n    {file = "pandas-2.2.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:9dfde2a0ddef507a631dc9dc4af6a9489d5e2e740e226ad426a05cabfbd7c8ef"},\\n    {file = "pandas-2.2.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:e9b79011ff7a0f4b1d6da6a61aa1aa604fb312d6647de5bad20013682d1429ce"},\\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cb51fe389360f3b5a4d57dbd2848a5f033350336ca3b340d1c53a1fad33bcad"},\\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:eee3a87076c0756de40b05c5e9a6069c035ba43e8dd71c379e68cab2c20f16ad"},\\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:3e374f59e440d4ab45ca2fffde54b81ac3834cf5ae2cdfa69c90bc03bde04d76"},\\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:43498c0bdb43d55cb162cdc8c06fac328ccb5d2eabe3cadeb3529ae6f0517c32"},\\n    {file = "pandas-2.2.2-cp312-cp312-win_amd64.whl", hash = "sha256:d187d355ecec3629624fccb01d104da7d7f391db0311145817525281e2804d23"},\\n    {file = "pandas-2.2.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:0ca6377b8fca51815f382bd0b697a0814c8bda55115678cbc94c30aacbb6eff2"},\\n    {file = "pandas-2.2.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9057e6aa78a584bc93a13f0a9bf7e753a5e9770a30b4d758b8d5f2a62a9433cd"},\\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:001910ad31abc7bf06f49dcc903755d2f7f3a9186c0c040b827e522e9cef0863"},\\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:66b479b0bd07204e37583c191535505410daa8df638fd8e75ae1b383851fe921"},\\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:a77e9d1c386196879aa5eb712e77461aaee433e54c68cf253053a73b7e49c33a"},\\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:92fd6b027924a7e178ac202cfbe25e53368db90d56872d20ffae94b96c7acc57"},\\n    {file = "pandas-2.2.2-cp39-cp39-win_amd64.whl", hash = "sha256:640cef9aa381b60e296db324337a554aeeb883ead99dc8f6c18e81a93942f5f4"},\\n    {file = "pandas-2.2.2.tar.gz", hash = "sha256:9e79019aba43cb4fda9e4d983f8e88ca0373adbb697ae9c6c43093218de28b54"},\\n]\\n\\n[package.dependencies]\\nnumpy = {version = ">=1.22.4", markers = "python_version < \\\\"3.11\\\\""}\\npython-dateutil = ">=2.8.2"\\npytz = ">=2020.1"\\ntzdata = ">=2022.7"\\n\\n[package.extras]\\nall = ["PyQt5 (>=5.15.9)", "SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)", "beautifulsoup4 (>=4.11.2)", "bottleneck (>=1.3.6)", "dataframe-api-compat (>=0.1.7)", "fastparquet (>=2022.12.0)", "fsspec (>=2022.11.0)", "gcsfs (>=2022.11.0)", "html5lib (>=1.1)", "hypothesis (>=6.46.1)", "jinja2 (>=3.1.2)", "lxml (>=4.9.2)", "matplotlib (>=3.6.3)", "numba (>=0.56.4)", "numexpr (>=2.8.4)", "odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "pandas-gbq (>=0.19.0)", "psycopg2 (>=2.9.6)", "pyarrow (>=10.0.1)", "pymysql (>=1.0.2)", "pyreadstat (>=1.2.0)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "qtpy (>=2.3.0)", "s3fs (>=2022.11.0)", "scipy (>=1.10.0)", "tables (>=3.8.0)", "tabulate (>=0.9.0)", "xarray (>=2022.12.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)", "zstandard (>=0.19.0)"]\\naws = ["s3fs (>=2022.11.0)"]\\nclipboard = ["PyQt5 (>=5.15.9)", "qtpy (>=2.3.0)"]\\ncompression = ["zstandard (>=0.19.0)"]\\ncomputation = ["scipy (>=1.10.0)", "xarray (>=2022.12.0)"]\\nconsortium-standard = ["dataframe-api-compat (>=0.1.7)"]\\nexcel = ["odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)"]\\nfeather = ["pyarrow (>=10.0.1)"]\\nfss = ["fsspec (>=2022.11.0)"]\\ngcp = ["gcsfs (>=2022.11.0)", "pandas-gbq (>=0.19.0)"]\\nhdf5 = ["tables (>=3.8.0)"]\\nhtml = ["beautifulsoup4 (>=4.11.2)", "html5lib (>=1.1)", "lxml (>=4.9.2)"]\\nmysql = ["SQLAlchemy (>=2.0.0)", "pymysql (>=1.0.2)"]\\noutput-formatting = ["jinja2 (>=3.1.2)", "tabulate (>=0.9.0)"]\\nparquet = ["pyarrow (>=10.0.1)"]\\nperformance = ["bottleneck (>=1.3.6)", "numba (>=0.56.4)", "numexpr (>=2.8.4)"]\\nplot = ["matplotlib (>=3.6.3)"]\\npostgresql = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "psycopg2 (>=2.9.6)"]\\npyarrow = ["pyarrow (>=10.0.1)"]\\nspss = ["pyreadstat (>=1.2.0)"]\\nsql-other = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)"]\\ntest = ["hypothesis (>=6.46.1)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)"]\\nxml = ["lxml (>=4.9.2)"]\\n\\n[[package]]\\nname = "pillow"\\nversion = "10.0.1"\\ndescription = "Python Imaging Library (Fork)"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_10_10_x86_64.whl", hash = "sha256:8f06be50669087250f319b706decf69ca71fdecd829091a37cc89398ca4dc17a"},\\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:50bd5f1ebafe9362ad622072a1d2f5850ecfa44303531ff14353a4059113b12d"},\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e6a90167bcca1216606223a05e2cf991bb25b14695c518bc65639463d7db722d"},\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f11c9102c56ffb9ca87134bd025a43d2aba3f1155f508eff88f694b33a9c6d19"},\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:186f7e04248103482ea6354af6d5bcedb62941ee08f7f788a1c7707bc720c66f"},\\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:0462b1496505a3462d0f35dc1c4d7b54069747d65d00ef48e736acda2c8cbdff"},\\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:d889b53ae2f030f756e61a7bff13684dcd77e9af8b10c6048fb2c559d6ed6eaf"},\\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:552912dbca585b74d75279a7570dd29fa43b6d93594abb494ebb31ac19ace6bd"},\\n    {file = "Pillow-10.0.1-cp310-cp310-win_amd64.whl", hash = "sha256:787bb0169d2385a798888e1122c980c6eff26bf941a8ea79747d35d8f9210ca0"},\\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_10_10_x86_64.whl", hash = "sha256:fd2a5403a75b54661182b75ec6132437a181209b901446ee5724b589af8edef1"},\\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:2d7e91b4379f7a76b31c2dda84ab9e20c6220488e50f7822e59dac36b0cd92b1"},\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:19e9adb3f22d4c416e7cd79b01375b17159d6990003633ff1d8377e21b7f1b21"},\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:93139acd8109edcdeffd85e3af8ae7d88b258b3a1e13a038f542b79b6d255c54"},\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:92a23b0431941a33242b1f0ce6c88a952e09feeea9af4e8be48236a68ffe2205"},\\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:cbe68deb8580462ca0d9eb56a81912f59eb4542e1ef8f987405e35a0179f4ea2"},\\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:522ff4ac3aaf839242c6f4e5b406634bfea002469656ae8358644fc6c4856a3b"},\\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:84efb46e8d881bb06b35d1d541aa87f574b58e87f781cbba8d200daa835b42e1"},\\n    {file = "Pillow-10.0.1-cp311-cp311-win_amd64.whl", hash = "sha256:898f1d306298ff40dc1b9ca24824f0488f6f039bc0e25cfb549d3195ffa17088"},\\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_10_10_x86_64.whl", hash = "sha256:bcf1207e2f2385a576832af02702de104be71301c2696d0012b1b93fe34aaa5b"},\\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:5d6c9049c6274c1bb565021367431ad04481ebb54872edecfcd6088d27edd6ed"},\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:28444cb6ad49726127d6b340217f0627abc8732f1194fd5352dec5e6a0105635"},\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:de596695a75496deb3b499c8c4f8e60376e0516e1a774e7bc046f0f48cd620ad"},\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_aarch64.whl", hash = "sha256:2872f2d7846cf39b3dbff64bc1104cc48c76145854256451d33c5faa55c04d1a"},\\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_x86_64.whl", hash = "sha256:4ce90f8a24e1c15465048959f1e94309dfef93af272633e8f37361b824532e91"},\\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:ee7810cf7c83fa227ba9125de6084e5e8b08c59038a7b2c9045ef4dde61663b4"},\\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:b1be1c872b9b5fcc229adeadbeb51422a9633abd847c0ff87dc4ef9bb184ae08"},\\n    {file = "Pillow-10.0.1-cp312-cp312-win_amd64.whl", hash = "sha256:98533fd7fa764e5f85eebe56c8e4094db912ccbe6fbf3a58778d543cadd0db08"},\\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_10_10_x86_64.whl", hash = "sha256:764d2c0daf9c4d40ad12fbc0abd5da3af7f8aa11daf87e4fa1b834000f4b6b0a"},\\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:fcb59711009b0168d6ee0bd8fb5eb259c4ab1717b2f538bbf36bacf207ef7a68"},\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:697a06bdcedd473b35e50a7e7506b1d8ceb832dc238a336bd6f4f5aa91a4b500"},\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9f665d1e6474af9f9da5e86c2a3a2d2d6204e04d5af9c06b9d42afa6ebde3f21"},\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:2fa6dd2661838c66f1a5473f3b49ab610c98a128fc08afbe81b91a1f0bf8c51d"},\\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:3a04359f308ebee571a3127fdb1bd01f88ba6f6fb6d087f8dd2e0d9bff43f2a7"},\\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:723bd25051454cea9990203405fa6b74e043ea76d4968166dfd2569b0210886a"},\\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:71671503e3015da1b50bd18951e2f9daf5b6ffe36d16f1eb2c45711a301521a7"},\\n    {file = "Pillow-10.0.1-cp38-cp38-win_amd64.whl", hash = "sha256:44e7e4587392953e5e251190a964675f61e4dae88d1e6edbe9f36d6243547ff3"},\\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_10_10_x86_64.whl", hash = "sha256:3855447d98cced8670aaa63683808df905e956f00348732448b5a6df67ee5849"},\\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:ed2d9c0704f2dc4fa980b99d565c0c9a543fe5101c25b3d60488b8ba80f0cce1"},\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:f5bb289bb835f9fe1a1e9300d011eef4d69661bb9b34d5e196e5e82c4cb09b37"},\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3a0d3e54ab1df9df51b914b2233cf779a5a10dfd1ce339d0421748232cea9876"},\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:2cc6b86ece42a11f16f55fe8903595eff2b25e0358dec635d0a701ac9586588f"},\\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:ca26ba5767888c84bf5a0c1a32f069e8204ce8c21d00a49c90dabeba00ce0145"},\\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:f0b4b06da13275bc02adfeb82643c4a6385bd08d26f03068c2796f60d125f6f2"},\\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:bc2e3069569ea9dbe88d6b8ea38f439a6aad8f6e7a6283a38edf61ddefb3a9bf"},\\n    {file = "Pillow-10.0.1-cp39-cp39-win_amd64.whl", hash = "sha256:8b451d6ead6e3500b6ce5c7916a43d8d8d25ad74b9102a629baccc0808c54971"},\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-macosx_10_10_x86_64.whl", hash = "sha256:32bec7423cdf25c9038fef614a853c9d25c07590e1a870ed471f47fb80b244db"},\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b7cf63d2c6928b51d35dfdbda6f2c1fddbe51a6bc4a9d4ee6ea0e11670dd981e"},\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:f6d3d4c905e26354e8f9d82548475c46d8e0889538cb0657aa9c6f0872a37aa4"},\\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:847e8d1017c741c735d3cd1883fa7b03ded4f825a6e5fcb9378fd813edee995f"},\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-macosx_10_10_x86_64.whl", hash = "sha256:7f771e7219ff04b79e231d099c0a28ed83aa82af91fd5fa9fdb28f5b8d5addaf"},\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:459307cacdd4138edee3875bbe22a2492519e060660eaf378ba3b405d1c66317"},\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:b059ac2c4c7a97daafa7dc850b43b2d3667def858a4f112d1aa082e5c3d6cf7d"},\\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:d6caf3cd38449ec3cd8a68b375e0c6fe4b6fd04edb6c9766b55ef84a6e8ddf2d"},\\n    {file = "Pillow-10.0.1.tar.gz", hash = "sha256:d72967b06be9300fed5cfbc8b5bafceec48bf7cdc7dab66b1d2549035287191d"},\\n]\\n\\n[package.extras]\\ndocs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-removed-in", "sphinxext-opengraph"]\\ntests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]\\n\\n[[package]]\\nname = "plotly"\\nversion = "5.22.0"\\ndescription = "An open-source, interactive data visualization library for Python"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "plotly-5.22.0-py3-none-any.whl", hash = "sha256:68fc1901f098daeb233cc3dd44ec9dc31fb3ca4f4e53189344199c43496ed006"},\\n    {file = "plotly-5.22.0.tar.gz", hash = "sha256:859fdadbd86b5770ae2466e542b761b247d1c6b49daed765b95bb8c7063e7469"},\\n]\\n\\n[package.dependencies]\\npackaging = "*"\\ntenacity = ">=6.2.0"\\n\\n[[package]]\\nname = "protobuf"\\nversion = "4.24.4"\\ndescription = ""\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "protobuf-4.24.4-cp310-abi3-win32.whl", hash = "sha256:ec9912d5cb6714a5710e28e592ee1093d68c5ebfeda61983b3f40331da0b1ebb"},\\n    {file = "protobuf-4.24.4-cp310-abi3-win_amd64.whl", hash = "sha256:1badab72aa8a3a2b812eacfede5020472e16c6b2212d737cefd685884c191085"},\\n    {file = "protobuf-4.24.4-cp37-abi3-macosx_10_9_universal2.whl", hash = "sha256:8e61a27f362369c2f33248a0ff6896c20dcd47b5d48239cb9720134bef6082e4"},\\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_aarch64.whl", hash = "sha256:bffa46ad9612e6779d0e51ae586fde768339b791a50610d85eb162daeb23661e"},\\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_x86_64.whl", hash = "sha256:b493cb590960ff863743b9ff1452c413c2ee12b782f48beca77c8da3e2ffe9d9"},\\n    {file = "protobuf-4.24.4-cp37-cp37m-win32.whl", hash = "sha256:dbbed8a56e56cee8d9d522ce844a1379a72a70f453bde6243e3c86c30c2a3d46"},\\n    {file = "protobuf-4.24.4-cp37-cp37m-win_amd64.whl", hash = "sha256:6b7d2e1c753715dcfe9d284a25a52d67818dd43c4932574307daf836f0071e37"},\\n    {file = "protobuf-4.24.4-cp38-cp38-win32.whl", hash = "sha256:02212557a76cd99574775a81fefeba8738d0f668d6abd0c6b1d3adcc75503dbe"},\\n    {file = "protobuf-4.24.4-cp38-cp38-win_amd64.whl", hash = "sha256:2fa3886dfaae6b4c5ed2730d3bf47c7a38a72b3a1f0acb4d4caf68e6874b947b"},\\n    {file = "protobuf-4.24.4-cp39-cp39-win32.whl", hash = "sha256:b77272f3e28bb416e2071186cb39efd4abbf696d682cbb5dc731308ad37fa6dd"},\\n    {file = "protobuf-4.24.4-cp39-cp39-win_amd64.whl", hash = "sha256:9fee5e8aa20ef1b84123bb9232b3f4a5114d9897ed89b4b8142d81924e05d79b"},\\n    {file = "protobuf-4.24.4-py3-none-any.whl", hash = "sha256:80797ce7424f8c8d2f2547e2d42bfbb6c08230ce5832d6c099a37335c9c90a92"},\\n    {file = "protobuf-4.24.4.tar.gz", hash = "sha256:5a70731910cd9104762161719c3d883c960151eea077134458503723b60e3667"},\\n]\\n\\n[[package]]\\nname = "pyarrow"\\nversion = "13.0.0"\\ndescription = "Python library for Apache Arrow"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_10_14_x86_64.whl", hash = "sha256:1afcc2c33f31f6fb25c92d50a86b7a9f076d38acbcb6f9e74349636109550148"},\\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:70fa38cdc66b2fc1349a082987f2b499d51d072faaa6b600f71931150de2e0e3"},\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cd57b13a6466822498238877892a9b287b0a58c2e81e4bdb0b596dbb151cbb73"},\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f8ce69f7bf01de2e2764e14df45b8404fc6f1a5ed9871e8e08a12169f87b7a26"},\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:588f0d2da6cf1b1680974d63be09a6530fd1bd825dc87f76e162404779a157dc"},\\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:6241afd72b628787b4abea39e238e3ff9f34165273fad306c7acf780dd850956"},\\n    {file = "pyarrow-13.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:fda7857e35993673fcda603c07d43889fca60a5b254052a462653f8656c64f44"},\\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_10_14_x86_64.whl", hash = "sha256:aac0ae0146a9bfa5e12d87dda89d9ef7c57a96210b899459fc2f785303dcbb67"},\\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:d7759994217c86c161c6a8060509cfdf782b952163569606bb373828afdd82e8"},\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:868a073fd0ff6468ae7d869b5fc1f54de5c4255b37f44fb890385eb68b68f95d"},\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:51be67e29f3cfcde263a113c28e96aa04362ed8229cb7c6e5f5c719003659d33"},\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:d1b4e7176443d12610874bb84d0060bf080f000ea9ed7c84b2801df851320295"},\\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:69b6f9a089d116a82c3ed819eea8fe67dae6105f0d81eaf0fdd5e60d0c6e0944"},\\n    {file = "pyarrow-13.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:ab1268db81aeb241200e321e220e7cd769762f386f92f61b898352dd27e402ce"},\\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_10_14_x86_64.whl", hash = "sha256:ee7490f0f3f16a6c38f8c680949551053c8194e68de5046e6c288e396dccee80"},\\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:e3ad79455c197a36eefbd90ad4aa832bece7f830a64396c15c61a0985e337287"},\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68fcd2dc1b7d9310b29a15949cdd0cb9bc34b6de767aff979ebf546020bf0ba0"},\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dc6fd330fd574c51d10638e63c0d00ab456498fc804c9d01f2a61b9264f2c5b2"},\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:e66442e084979a97bb66939e18f7b8709e4ac5f887e636aba29486ffbf373763"},\\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:0f6eff839a9e40e9c5610d3ff8c5bdd2f10303408312caf4c8003285d0b49565"},\\n    {file = "pyarrow-13.0.0-cp38-cp38-win_amd64.whl", hash = "sha256:8b30a27f1cddf5c6efcb67e598d7823a1e253d743d92ac32ec1eb4b6a1417867"},\\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_10_14_x86_64.whl", hash = "sha256:09552dad5cf3de2dc0aba1c7c4b470754c69bd821f5faafc3d774bedc3b04bb7"},\\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:3896ae6c205d73ad192d2fc1489cd0edfab9f12867c85b4c277af4d37383c18c"},\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6647444b21cb5e68b593b970b2a9a07748dd74ea457c7dadaa15fd469c48ada1"},\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47663efc9c395e31d09c6aacfa860f4473815ad6804311c5433f7085415d62a7"},\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:b9ba6b6d34bd2563345488cf444510588ea42ad5613df3b3509f48eb80250afd"},\\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:d00d374a5625beeb448a7fa23060df79adb596074beb3ddc1838adb647b6ef09"},\\n    {file = "pyarrow-13.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:c51afd87c35c8331b56f796eff954b9c7f8d4b7fef5903daf4e05fcf017d23a8"},\\n    {file = "pyarrow-13.0.0.tar.gz", hash = "sha256:83333726e83ed44b0ac94d8d7a21bbdee4a05029c3b1e8db58a863eec8fd8a33"},\\n]\\n\\n[package.dependencies]\\nnumpy = ">=1.16.6"\\n\\n[[package]]\\nname = "pydeck"\\nversion = "0.8.0"\\ndescription = "Widget for deck.gl maps"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "pydeck-0.8.0-py2.py3-none-any.whl", hash = "sha256:a8fa7757c6f24bba033af39db3147cb020eef44012ba7e60d954de187f9ed4d5"},\\n    {file = "pydeck-0.8.0.tar.gz", hash = "sha256:07edde833f7cfcef6749124351195aa7dcd24663d4909fd7898dbd0b6fbc01ec"},\\n]\\n\\n[package.dependencies]\\njinja2 = ">=2.10.1"\\nnumpy = ">=1.16.4"\\n\\n[package.extras]\\ncarto = ["pydeck-carto"]\\njupyter = ["ipykernel (>=5.1.2)", "ipython (>=5.8.0)", "ipywidgets (>=7,<8)", "traitlets (>=4.3.2)"]\\n\\n[[package]]\\nname = "pygments"\\nversion = "2.16.1"\\ndescription = "Pygments is a syntax highlighting package written in Python."\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "Pygments-2.16.1-py3-none-any.whl", hash = "sha256:13fc09fa63bc8d8671a6d247e1eb303c4b343eaee81d861f3404db2935653692"},\\n    {file = "Pygments-2.16.1.tar.gz", hash = "sha256:1daff0494820c69bc8941e407aa20f577374ee88364ee10a98fdbe0aece96e29"},\\n]\\n\\n[package.extras]\\nplugins = ["importlib-metadata"]\\n\\n[[package]]\\nname = "pymongo"\\nversion = "4.7.3"\\ndescription = "Python driver for MongoDB <http://www.mongodb.org>"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e9580b4537b3cc5d412070caabd1dabdf73fdce249793598792bac5782ecf2eb"},\\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:517243b2b189c98004570dd8fc0e89b1a48363d5578b3b99212fa2098b2ea4b8"},\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:23b1e9dabd61da1c7deb54d888f952f030e9e35046cebe89309b28223345b3d9"},\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:03e0f9901ad66c6fb7da0d303461377524d61dab93a4e4e5af44164c5bb4db76"},\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9a870824aa54453aee030bac08c77ebcf2fe8999400f0c2a065bebcbcd46b7f8"},\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dfd7b3d3f4261bddbb74a332d87581bc523353e62bb9da4027cc7340f6fcbebc"},\\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4d719a643ea6da46d215a3ba51dac805a773b611c641319558d8576cbe31cef8"},\\n    {file = "pymongo-4.7.3-cp310-cp310-win32.whl", hash = "sha256:d8b1e06f361f3c66ee694cb44326e1a2e4f93bc9c3a4849ae8547889fca71154"},\\n    {file = "pymongo-4.7.3-cp310-cp310-win_amd64.whl", hash = "sha256:c450ab2f9397e2d5caa7fddeb4feb30bf719c47c13ae02c0bbb3b71bf4099c1c"},\\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:79cc6459209e885ba097779eaa0fe7f2fa049db39ab43b1731cf8d065a4650e8"},\\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:6e2287f1e2cc35e73cd74a4867e398a97962c5578a3991c730ef78d276ca8e46"},\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:413506bd48d8c31ee100645192171e4773550d7cb940b594d5175ac29e329ea1"},\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1cc1febf17646d52b7561caa762f60bdfe2cbdf3f3e70772f62eb624269f9c05"},\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:8dfcf18a49955d50a16c92b39230bd0668ffc9c164ccdfe9d28805182b48fa72"},\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:89872041196c008caddf905eb59d3dc2d292ae6b0282f1138418e76f3abd3ad6"},\\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d3ed97b89de62ea927b672ad524de0d23f3a6b4a01c8d10e3d224abec973fbc3"},\\n    {file = "pymongo-4.7.3-cp311-cp311-win32.whl", hash = "sha256:d2f52b38151e946011d888a8441d3d75715c663fc5b41a7ade595e924e12a90a"},\\n    {file = "pymongo-4.7.3-cp311-cp311-win_amd64.whl", hash = "sha256:4a4cc91c28e81c0ce03d3c278e399311b0af44665668a91828aec16527082676"},\\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:cb30c8a78f5ebaca98640943447b6a0afcb146f40b415757c9047bf4a40d07b4"},\\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:9cf2069f5d37c398186453589486ea98bb0312214c439f7d320593b61880dc05"},\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3564f423958fced8a8c90940fd2f543c27adbcd6c7c6ed6715d847053f6200a0"},\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:7a8af8a38fa6951fff73e6ff955a6188f829b29fed7c5a1b739a306b4aa56fe8"},\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3a0e81c8dba6d825272867d487f18764cfed3c736d71d7d4ff5b79642acbed42"},\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:88fc1d146feabac4385ea8ddb1323e584922922641303c8bf392fe1c36803463"},\\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4225100b2c5d1f7393d7c5d256ceb8b20766830eecf869f8ae232776347625a6"},\\n    {file = "pymongo-4.7.3-cp312-cp312-win32.whl", hash = "sha256:5f3569ed119bf99c0f39ac9962fb5591eff02ca210fe80bb5178d7a1171c1b1e"},\\n    {file = "pymongo-4.7.3-cp312-cp312-win_amd64.whl", hash = "sha256:eb383c54c0c8ba27e7712b954fcf2a0905fee82a929d277e2e94ad3a5ba3c7db"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:a46cffe91912570151617d866a25d07b9539433a32231ca7e7cf809b6ba1745f"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4c3cba427dac50944c050c96d958c5e643c33a457acee03bae27c8990c5b9c16"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:a7a5fd893edbeb7fa982f8d44b6dd0186b6cd86c89e23f6ef95049ff72bffe46"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c168a2fadc8b19071d0a9a4f85fe38f3029fe22163db04b4d5c046041c0b14bd"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2c59c2c9e70f63a7f18a31e367898248c39c068c639b0579623776f637e8f482"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d08165fd82c89d372e82904c3268bd8fe5de44f92a00e97bb1db1785154397d9"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:397fed21afec4fdaecf72f9c4344b692e489756030a9c6d864393e00c7e80491"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:f903075f8625e2d228f1b9b9a0cf1385f1c41e93c03fd7536c91780a0fb2e98f"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-win32.whl", hash = "sha256:8ed1132f58c38add6b6138b771d0477a3833023c015c455d9a6e26f367f9eb5c"},\\n    {file = "pymongo-4.7.3-cp37-cp37m-win_amd64.whl", hash = "sha256:8d00a5d8fc1043a4f641cbb321da766699393f1b6f87c70fae8089d61c9c9c54"},\\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:9377b868c38700c7557aac1bc4baae29f47f1d279cc76b60436e547fd643318c"},\\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:da4a6a7b4f45329bb135aa5096823637bd5f760b44d6224f98190ee367b6b5dd"},\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:487e2f9277f8a63ac89335ec4f1699ae0d96ebd06d239480d69ed25473a71b2c"},\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6db3d608d541a444c84f0bfc7bad80b0b897e0f4afa580a53f9a944065d9b633"},\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e90af2ad3a8a7c295f4d09a2fbcb9a350c76d6865f787c07fe843b79c6e821d1"},\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8e28feb18dc559d50ededba27f9054c79f80c4edd70a826cecfe68f3266807b3"},\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:f21ecddcba2d9132d5aebd8e959de8d318c29892d0718420447baf2b9bccbb19"},\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:26140fbb3f6a9a74bd73ed46d0b1f43d5702e87a6e453a31b24fad9c19df9358"},\\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:94baa5fc7f7d22c3ce2ac7bd92f7e03ba7a6875f2480e3b97a400163d6eaafc9"},\\n    {file = "pymongo-4.7.3-cp38-cp38-win32.whl", hash = "sha256:92dd247727dd83d1903e495acc743ebd757f030177df289e3ba4ef8a8c561fad"},\\n    {file = "pymongo-4.7.3-cp38-cp38-win_amd64.whl", hash = "sha256:1c90c848a5e45475731c35097f43026b88ef14a771dfd08f20b67adc160a3f79"},\\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:f598be401b416319a535c386ac84f51df38663f7a9d1071922bda4d491564422"},\\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:35ba90477fae61c65def6e7d09e8040edfdd3b7fd47c3c258b4edded60c4d625"},\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9aa8735955c70892634d7e61b0ede9b1eefffd3cd09ccabee0ffcf1bdfe62254"},\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:82a97d8f7f138586d9d0a0cff804a045cdbbfcfc1cd6bba542b151e284fbbec5"},\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:de3b9db558930efab5eaef4db46dcad8bf61ac3ddfd5751b3e5ac6084a25e366"},\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0e149217ef62812d3c2401cf0e2852b0c57fd155297ecc4dcd67172c4eca402"},\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:b3a8a1ef4a824f5feb793b3231526d0045eadb5eb01080e38435dfc40a26c3e5"},\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d14e5e89a4be1f10efc3d9dcb13eb7a3b2334599cb6bb5d06c6a9281b79c8e22"},\\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:c6bfa29f032fd4fd7b129520f8cdb51ab71d88c2ba0567cccd05d325f963acb5"},\\n    {file = "pymongo-4.7.3-cp39-cp39-win32.whl", hash = "sha256:1421d0bd2ce629405f5157bd1aaa9b83f12d53a207cf68a43334f4e4ee312b66"},\\n    {file = "pymongo-4.7.3-cp39-cp39-win_amd64.whl", hash = "sha256:f7ee974f8b9370a998919c55b1050889f43815ab588890212023fecbc0402a6d"},\\n    {file = "pymongo-4.7.3.tar.gz", hash = "sha256:6354a66b228f2cd399be7429685fb68e07f19110a3679782ecb4fdb68da03831"},\\n]\\n\\n[package.dependencies]\\ndnspython = ">=1.16.0,<3.0.0"\\n\\n[package.extras]\\naws = ["pymongo-auth-aws (>=1.1.0,<2.0.0)"]\\nencryption = ["certifi", "pymongo-auth-aws (>=1.1.0,<2.0.0)", "pymongocrypt (>=1.6.0,<2.0.0)"]\\ngssapi = ["pykerberos", "winkerberos (>=0.5.0)"]\\nocsp = ["certifi", "cryptography (>=2.5)", "pyopenssl (>=17.2.0)", "requests (<3.0.0)", "service-identity (>=18.1.0)"]\\nsnappy = ["python-snappy"]\\ntest = ["pytest (>=7)"]\\nzstd = ["zstandard"]\\n\\n[[package]]\\nname = "python-dateutil"\\nversion = "2.8.2"\\ndescription = "Extensions to the standard Python datetime module"\\noptional = false\\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"\\nfiles = [\\n    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},\\n    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},\\n]\\n\\n[package.dependencies]\\nsix = ">=1.5"\\n\\n[[package]]\\nname = "pytz"\\nversion = "2023.3.post1"\\ndescription = "World timezone definitions, modern and historical"\\noptional = false\\npython-versions = "*"\\nfiles = [\\n    {file = "pytz-2023.3.post1-py2.py3-none-any.whl", hash = "sha256:ce42d816b81b68506614c11e8937d3aa9e41007ceb50bfdcb0749b921bf646c7"},\\n    {file = "pytz-2023.3.post1.tar.gz", hash = "sha256:7b4fddbeb94a1eba4b557da24f19fdf9db575192544270a9101d8509f9f43d7b"},\\n]\\n\\n[[package]]\\nname = "referencing"\\nversion = "0.30.2"\\ndescription = "JSON Referencing + Python"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "referencing-0.30.2-py3-none-any.whl", hash = "sha256:449b6669b6121a9e96a7f9e410b245d471e8d48964c67113ce9afe50c8dd7bdf"},\\n    {file = "referencing-0.30.2.tar.gz", hash = "sha256:794ad8003c65938edcdbc027f1933215e0d0ccc0291e3ce20a4d87432b59efc0"},\\n]\\n\\n[package.dependencies]\\nattrs = ">=22.2.0"\\nrpds-py = ">=0.7.0"\\n\\n[[package]]\\nname = "requests"\\nversion = "2.32.3"\\ndescription = "Python HTTP for Humans."\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "requests-2.32.3-py3-none-any.whl", hash = "sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6"},\\n    {file = "requests-2.32.3.tar.gz", hash = "sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760"},\\n]\\n\\n[package.dependencies]\\ncertifi = ">=2017.4.17"\\ncharset-normalizer = ">=2,<4"\\nidna = ">=2.5,<4"\\nurllib3 = ">=1.21.1,<3"\\n\\n[package.extras]\\nsocks = ["PySocks (>=1.5.6,!=1.5.7)"]\\nuse-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]\\n\\n[[package]]\\nname = "rich"\\nversion = "13.6.0"\\ndescription = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"\\noptional = false\\npython-versions = ">=3.7.0"\\nfiles = [\\n    {file = "rich-13.6.0-py3-none-any.whl", hash = "sha256:2b38e2fe9ca72c9a00170a1a2d20c63c790d0e10ef1fe35eba76e1e7b1d7d245"},\\n    {file = "rich-13.6.0.tar.gz", hash = "sha256:5c14d22737e6d5084ef4771b62d5d4363165b403455a30a1c8ca39dc7b644bef"},\\n]\\n\\n[package.dependencies]\\nmarkdown-it-py = ">=2.2.0"\\npygments = ">=2.13.0,<3.0.0"\\n\\n[package.extras]\\njupyter = ["ipywidgets (>=7.5.1,<9)"]\\n\\n[[package]]\\nname = "rpds-py"\\nversion = "0.10.6"\\ndescription = "Python bindings to Rust\\\'s persistent data structures (rpds)"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_10_7_x86_64.whl", hash = "sha256:6bdc11f9623870d75692cc33c59804b5a18d7b8a4b79ef0b00b773a27397d1f6"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:26857f0f44f0e791f4a266595a7a09d21f6b589580ee0585f330aaccccb836e3"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7f5e15c953ace2e8dde9824bdab4bec50adb91a5663df08d7d994240ae6fa31"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:61fa268da6e2e1cd350739bb61011121fa550aa2545762e3dc02ea177ee4de35"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c48f3fbc3e92c7dd6681a258d22f23adc2eb183c8cb1557d2fcc5a024e80b094"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c0503c5b681566e8b722fe8c4c47cce5c7a51f6935d5c7012c4aefe952a35eed"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:734c41f9f57cc28658d98270d3436dba65bed0cfc730d115b290e970150c540d"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:a5d7ed104d158c0042a6a73799cf0eb576dfd5fc1ace9c47996e52320c37cb7c"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:e3df0bc35e746cce42579826b89579d13fd27c3d5319a6afca9893a9b784ff1b"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:73e0a78a9b843b8c2128028864901f55190401ba38aae685350cf69b98d9f7c9"},\\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:5ed505ec6305abd2c2c9586a7b04fbd4baf42d4d684a9c12ec6110deefe2a063"},\\n    {file = "rpds_py-0.10.6-cp310-none-win32.whl", hash = "sha256:d97dd44683802000277bbf142fd9f6b271746b4846d0acaf0cefa6b2eaf2a7ad"},\\n    {file = "rpds_py-0.10.6-cp310-none-win_amd64.whl", hash = "sha256:b455492cab07107bfe8711e20cd920cc96003e0da3c1f91297235b1603d2aca7"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_10_7_x86_64.whl", hash = "sha256:e8cdd52744f680346ff8c1ecdad5f4d11117e1724d4f4e1874f3a67598821069"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:66414dafe4326bca200e165c2e789976cab2587ec71beb80f59f4796b786a238"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cc435d059f926fdc5b05822b1be4ff2a3a040f3ae0a7bbbe672babb468944722"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:8e7f2219cb72474571974d29a191714d822e58be1eb171f229732bc6fdedf0ac"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:3953c6926a63f8ea5514644b7afb42659b505ece4183fdaaa8f61d978754349e"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:2bb2e4826be25e72013916eecd3d30f66fd076110de09f0e750163b416500721"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:7bf347b495b197992efc81a7408e9a83b931b2f056728529956a4d0858608b80"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:102eac53bb0bf0f9a275b438e6cf6904904908562a1463a6fc3323cf47d7a532"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:40f93086eef235623aa14dbddef1b9fb4b22b99454cb39a8d2e04c994fb9868c"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:e22260a4741a0e7a206e175232867b48a16e0401ef5bce3c67ca5b9705879066"},\\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:f4e56860a5af16a0fcfa070a0a20c42fbb2012eed1eb5ceeddcc7f8079214281"},\\n    {file = "rpds_py-0.10.6-cp311-none-win32.whl", hash = "sha256:0774a46b38e70fdde0c6ded8d6d73115a7c39d7839a164cc833f170bbf539116"},\\n    {file = "rpds_py-0.10.6-cp311-none-win_amd64.whl", hash = "sha256:4a5ee600477b918ab345209eddafde9f91c0acd931f3776369585a1c55b04c57"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_10_7_x86_64.whl", hash = "sha256:5ee97c683eaface61d38ec9a489e353d36444cdebb128a27fe486a291647aff6"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:0713631d6e2d6c316c2f7b9320a34f44abb644fc487b77161d1724d883662e31"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b5a53f5998b4bbff1cb2e967e66ab2addc67326a274567697379dd1e326bded7"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6a555ae3d2e61118a9d3e549737bb4a56ff0cec88a22bd1dfcad5b4e04759175"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:945eb4b6bb8144909b203a88a35e0a03d22b57aefb06c9b26c6e16d72e5eb0f0"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:52c215eb46307c25f9fd2771cac8135d14b11a92ae48d17968eda5aa9aaf5071"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c1b3cd23d905589cb205710b3988fc8f46d4a198cf12862887b09d7aaa6bf9b9"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:64ccc28683666672d7c166ed465c09cee36e306c156e787acef3c0c62f90da5a"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:516a611a2de12fbea70c78271e558f725c660ce38e0006f75139ba337d56b1f6"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:9ff93d3aedef11f9c4540cf347f8bb135dd9323a2fc705633d83210d464c579d"},\\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:d858532212f0650be12b6042ff4378dc2efbb7792a286bee4489eaa7ba010586"},\\n    {file = "rpds_py-0.10.6-cp312-none-win32.whl", hash = "sha256:3c4eff26eddac49d52697a98ea01b0246e44ca82ab09354e94aae8823e8bda02"},\\n    {file = "rpds_py-0.10.6-cp312-none-win_amd64.whl", hash = "sha256:150eec465dbc9cbca943c8e557a21afdcf9bab8aaabf386c44b794c2f94143d2"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_10_7_x86_64.whl", hash = "sha256:cf693eb4a08eccc1a1b636e4392322582db2a47470d52e824b25eca7a3977b53"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4134aa2342f9b2ab6c33d5c172e40f9ef802c61bb9ca30d21782f6e035ed0043"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e782379c2028a3611285a795b89b99a52722946d19fc06f002f8b53e3ea26ea9"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2f6da6d842195fddc1cd34c3da8a40f6e99e4a113918faa5e60bf132f917c247"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:b4a9fe992887ac68256c930a2011255bae0bf5ec837475bc6f7edd7c8dfa254e"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b788276a3c114e9f51e257f2a6f544c32c02dab4aa7a5816b96444e3f9ffc336"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:caa1afc70a02645809c744eefb7d6ee8fef7e2fad170ffdeacca267fd2674f13"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bddd4f91eede9ca5275e70479ed3656e76c8cdaaa1b354e544cbcf94c6fc8ac4"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:775049dfa63fb58293990fc59473e659fcafd953bba1d00fc5f0631a8fd61977"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_i686.whl", hash = "sha256:c6c45a2d2b68c51fe3d9352733fe048291e483376c94f7723458cfd7b473136b"},\\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:0699ab6b8c98df998c3eacf51a3b25864ca93dab157abe358af46dc95ecd9801"},\\n    {file = "rpds_py-0.10.6-cp38-none-win32.whl", hash = "sha256:ebdab79f42c5961682654b851f3f0fc68e6cc7cd8727c2ac4ffff955154123c1"},\\n    {file = "rpds_py-0.10.6-cp38-none-win_amd64.whl", hash = "sha256:24656dc36f866c33856baa3ab309da0b6a60f37d25d14be916bd3e79d9f3afcf"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_10_7_x86_64.whl", hash = "sha256:0898173249141ee99ffcd45e3829abe7bcee47d941af7434ccbf97717df020e5"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9e9184fa6c52a74a5521e3e87badbf9692549c0fcced47443585876fcc47e469"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5752b761902cd15073a527b51de76bbae63d938dc7c5c4ad1e7d8df10e765138"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:99a57006b4ec39dbfb3ed67e5b27192792ffb0553206a107e4aadb39c5004cd5"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:09586f51a215d17efdb3a5f090d7cbf1633b7f3708f60a044757a5d48a83b393"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e225a6a14ecf44499aadea165299092ab0cba918bb9ccd9304eab1138844490b"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b2039f8d545f20c4e52713eea51a275e62153ee96c8035a32b2abb772b6fc9e5"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:34ad87a831940521d462ac11f1774edf867c34172010f5390b2f06b85dcc6014"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:dcdc88b6b01015da066da3fb76545e8bb9a6880a5ebf89e0f0b2e3ca557b3ab7"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:25860ed5c4e7f5e10c496ea78af46ae8d8468e0be745bd233bab9ca99bfd2647"},\\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:7854a207ef77319ec457c1eb79c361b48807d252d94348305db4f4b62f40f7f3"},\\n    {file = "rpds_py-0.10.6-cp39-none-win32.whl", hash = "sha256:e6fcc026a3f27c1282c7ed24b7fcac82cdd70a0e84cc848c0841a3ab1e3dea2d"},\\n    {file = "rpds_py-0.10.6-cp39-none-win_amd64.whl", hash = "sha256:e98c4c07ee4c4b3acf787e91b27688409d918212dfd34c872201273fdd5a0e18"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_10_7_x86_64.whl", hash = "sha256:68fe9199184c18d997d2e4293b34327c0009a78599ce703e15cd9a0f47349bba"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:3339eca941568ed52d9ad0f1b8eb9fe0958fa245381747cecf2e9a78a5539c42"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a360cfd0881d36c6dc271992ce1eda65dba5e9368575663de993eeb4523d895f"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:031f76fc87644a234883b51145e43985aa2d0c19b063e91d44379cd2786144f8"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1f36a9d751f86455dc5278517e8b65580eeee37d61606183897f122c9e51cef3"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:052a832078943d2b2627aea0d19381f607fe331cc0eb5df01991268253af8417"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:023574366002bf1bd751ebaf3e580aef4a468b3d3c216d2f3f7e16fdabd885ed"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:defa2c0c68734f4a82028c26bcc85e6b92cced99866af118cd6a89b734ad8e0d"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:879fb24304ead6b62dbe5034e7b644b71def53c70e19363f3c3be2705c17a3b4"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_i686.whl", hash = "sha256:53c43e10d398e365da2d4cc0bcaf0854b79b4c50ee9689652cdc72948e86f487"},\\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:3777cc9dea0e6c464e4b24760664bd8831738cc582c1d8aacf1c3f546bef3f65"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_10_7_x86_64.whl", hash = "sha256:40578a6469e5d1df71b006936ce95804edb5df47b520c69cf5af264d462f2cbb"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_11_0_arm64.whl", hash = "sha256:cf71343646756a072b85f228d35b1d7407da1669a3de3cf47f8bbafe0c8183a4"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:10f32b53f424fc75ff7b713b2edb286fdbfc94bf16317890260a81c2c00385dc"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:81de24a1c51cfb32e1fbf018ab0bdbc79c04c035986526f76c33e3f9e0f3356c"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ac17044876e64a8ea20ab132080ddc73b895b4abe9976e263b0e30ee5be7b9c2"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5e8a78bd4879bff82daef48c14d5d4057f6856149094848c3ed0ecaf49f5aec2"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:78ca33811e1d95cac8c2e49cb86c0fb71f4d8409d8cbea0cb495b6dbddb30a55"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:c63c3ef43f0b3fb00571cff6c3967cc261c0ebd14a0a134a12e83bdb8f49f21f"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:7fde6d0e00b2fd0dbbb40c0eeec463ef147819f23725eda58105ba9ca48744f4"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_i686.whl", hash = "sha256:79edd779cfc46b2e15b0830eecd8b4b93f1a96649bcb502453df471a54ce7977"},\\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:9164ec8010327ab9af931d7ccd12ab8d8b5dc2f4c6a16cbdd9d087861eaaefa1"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_10_7_x86_64.whl", hash = "sha256:d29ddefeab1791e3c751e0189d5f4b3dbc0bbe033b06e9c333dca1f99e1d523e"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:30adb75ecd7c2a52f5e76af50644b3e0b5ba036321c390b8e7ec1bb2a16dd43c"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:dd609fafdcdde6e67a139898196698af37438b035b25ad63704fd9097d9a3482"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6eef672de005736a6efd565577101277db6057f65640a813de6c2707dc69f396"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6cf4393c7b41abbf07c88eb83e8af5013606b1cdb7f6bc96b1b3536b53a574b8"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:ad857f42831e5b8d41a32437f88d86ead6c191455a3499c4b6d15e007936d4cf"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1d7360573f1e046cb3b0dceeb8864025aa78d98be4bb69f067ec1c40a9e2d9df"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d08f63561c8a695afec4975fae445245386d645e3e446e6f260e81663bfd2e38"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:f0f17f2ce0f3529177a5fff5525204fad7b43dd437d017dd0317f2746773443d"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_i686.whl", hash = "sha256:442626328600bde1d09dc3bb00434f5374948838ce75c41a52152615689f9403"},\\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:e9616f5bd2595f7f4a04b67039d890348ab826e943a9bfdbe4938d0eba606971"},\\n    {file = "rpds_py-0.10.6.tar.gz", hash = "sha256:4ce5a708d65a8dbf3748d2474b580d606b1b9f91b5c6ab2a316e0b0cf7a4ba50"},\\n]\\n\\n[[package]]\\nname = "six"\\nversion = "1.16.0"\\ndescription = "Python 2 and 3 compatibility utilities"\\noptional = false\\npython-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"\\nfiles = [\\n    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},\\n    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},\\n]\\n\\n[[package]]\\nname = "smmap"\\nversion = "5.0.1"\\ndescription = "A pure Python implementation of a sliding window memory map manager"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "smmap-5.0.1-py3-none-any.whl", hash = "sha256:e6d8668fa5f93e706934a62d7b4db19c8d9eb8cf2adbb75ef1b675aa332b69da"},\\n    {file = "smmap-5.0.1.tar.gz", hash = "sha256:dceeb6c0028fdb6734471eb07c0cd2aae706ccaecab45965ee83f11c8d3b1f62"},\\n]\\n\\n[[package]]\\nname = "streamlit"\\nversion = "1.36.0"\\ndescription = "A faster way to build and share data apps"\\noptional = false\\npython-versions = "!=3.9.7,>=3.8"\\nfiles = [\\n    {file = "streamlit-1.36.0-py2.py3-none-any.whl", hash = "sha256:3399a33ea5faa26c05dd433d142eefe68ade67e9189a9e1d47a1731ae30a1c42"},\\n    {file = "streamlit-1.36.0.tar.gz", hash = "sha256:a12af9f0eb61ab5832f438336257b1ec20eb29d8e0e0c6b40a79116ba939bc9c"},\\n]\\n\\n[package.dependencies]\\naltair = ">=4.0,<6"\\nblinker = ">=1.0.0,<2"\\ncachetools = ">=4.0,<6"\\nclick = ">=7.0,<9"\\ngitpython = ">=3.0.7,<3.1.19 || >3.1.19,<4"\\nnumpy = ">=1.20,<3"\\npackaging = ">=20,<25"\\npandas = ">=1.3.0,<3"\\npillow = ">=7.1.0,<11"\\nprotobuf = ">=3.20,<6"\\npyarrow = ">=7.0"\\npydeck = ">=0.8.0b4,<1"\\nrequests = ">=2.27,<3"\\nrich = ">=10.14.0,<14"\\ntenacity = ">=8.1.0,<9"\\ntoml = ">=0.10.1,<2"\\ntornado = ">=6.0.3,<7"\\ntyping-extensions = ">=4.3.0,<5"\\nwatchdog = {version = ">=2.1.5,<5", markers = "platform_system != \\\\"Darwin\\\\""}\\n\\n[package.extras]\\nsnowflake = ["snowflake-connector-python (>=2.8.0)", "snowflake-snowpark-python (>=0.9.0)"]\\n\\n[[package]]\\nname = "streamlit-option-menu"\\nversion = "0.3.13"\\ndescription = "streamlit-option-menu is a simple Streamlit component that allows users to select a single item from a list of options in a menu."\\noptional = false\\npython-versions = ">=3.6"\\nfiles = [\\n    {file = "streamlit-option-menu-0.3.13.tar.gz", hash = "sha256:a0fb4eb52bdc5060b0cbf08ef75fc27c78126e13cdcdde1ec7beea36c0cc3880"},\\n    {file = "streamlit_option_menu-0.3.13-py3-none-any.whl", hash = "sha256:7e7e4f8770bc444ea4e51b27d3f6dfbda87e369b686421137f323d5b9ad13c25"},\\n]\\n\\n[package.dependencies]\\nstreamlit = ">=0.63"\\n\\n[[package]]\\nname = "tenacity"\\nversion = "8.2.3"\\ndescription = "Retry code until it succeeds"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "tenacity-8.2.3-py3-none-any.whl", hash = "sha256:ce510e327a630c9e1beaf17d42e6ffacc88185044ad85cf74c0a8887c6a0f88c"},\\n    {file = "tenacity-8.2.3.tar.gz", hash = "sha256:5398ef0d78e63f40007c1fb4c0bff96e1911394d2fa8d194f77619c05ff6cc8a"},\\n]\\n\\n[package.extras]\\ndoc = ["reno", "sphinx", "tornado (>=4.5)"]\\n\\n[[package]]\\nname = "toml"\\nversion = "0.10.2"\\ndescription = "Python Library for Tom\\\'s Obvious, Minimal Language"\\noptional = false\\npython-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"\\nfiles = [\\n    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},\\n    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},\\n]\\n\\n[[package]]\\nname = "toolz"\\nversion = "0.12.0"\\ndescription = "List processing tools and functional utilities"\\noptional = false\\npython-versions = ">=3.5"\\nfiles = [\\n    {file = "toolz-0.12.0-py3-none-any.whl", hash = "sha256:2059bd4148deb1884bb0eb770a3cde70e7f954cfbbdc2285f1f2de01fd21eb6f"},\\n    {file = "toolz-0.12.0.tar.gz", hash = "sha256:88c570861c440ee3f2f6037c4654613228ff40c93a6c25e0eba70d17282c6194"},\\n]\\n\\n[[package]]\\nname = "tornado"\\nversion = "6.3.3"\\ndescription = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."\\noptional = false\\npython-versions = ">= 3.8"\\nfiles = [\\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_universal2.whl", hash = "sha256:502fba735c84450974fec147340016ad928d29f1e91f49be168c0a4c18181e1d"},\\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_x86_64.whl", hash = "sha256:805d507b1f588320c26f7f097108eb4023bbaa984d63176d1652e184ba24270a"},\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1bd19ca6c16882e4d37368e0152f99c099bad93e0950ce55e71daed74045908f"},\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7ac51f42808cca9b3613f51ffe2a965c8525cb1b00b7b2d56828b8045354f76a"},\\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:71a8db65160a3c55d61839b7302a9a400074c9c753040455494e2af74e2501f2"},\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_aarch64.whl", hash = "sha256:ceb917a50cd35882b57600709dd5421a418c29ddc852da8bcdab1f0db33406b0"},\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_i686.whl", hash = "sha256:7d01abc57ea0dbb51ddfed477dfe22719d376119844e33c661d873bf9c0e4a16"},\\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_x86_64.whl", hash = "sha256:9dc4444c0defcd3929d5c1eb5706cbe1b116e762ff3e0deca8b715d14bf6ec17"},\\n    {file = "tornado-6.3.3-cp38-abi3-win32.whl", hash = "sha256:65ceca9500383fbdf33a98c0087cb975b2ef3bfb874cb35b8de8740cf7f41bd3"},\\n    {file = "tornado-6.3.3-cp38-abi3-win_amd64.whl", hash = "sha256:22d3c2fa10b5793da13c807e6fc38ff49a4f6e1e3868b0a6f4164768bb8e20f5"},\\n    {file = "tornado-6.3.3.tar.gz", hash = "sha256:e7d8db41c0181c80d76c982aacc442c0783a2c54d6400fe028954201a2e032fe"},\\n]\\n\\n[[package]]\\nname = "typing-extensions"\\nversion = "4.8.0"\\ndescription = "Backported and Experimental Type Hints for Python 3.8+"\\noptional = false\\npython-versions = ">=3.8"\\nfiles = [\\n    {file = "typing_extensions-4.8.0-py3-none-any.whl", hash = "sha256:8f92fc8806f9a6b641eaa5318da32b44d401efaac0f6678c9bc448ba3605faa0"},\\n    {file = "typing_extensions-4.8.0.tar.gz", hash = "sha256:df8e4339e9cb77357558cbdbceca33c303714cf861d1eef15e1070055ae8b7ef"},\\n]\\n\\n[[package]]\\nname = "tzdata"\\nversion = "2023.3"\\ndescription = "Provider of IANA time zone data"\\noptional = false\\npython-versions = ">=2"\\nfiles = [\\n    {file = "tzdata-2023.3-py2.py3-none-any.whl", hash = "sha256:7e65763eef3120314099b6939b5546db7adce1e7d6f2e179e3df563c70511eda"},\\n    {file = "tzdata-2023.3.tar.gz", hash = "sha256:11ef1e08e54acb0d4f95bdb1be05da659673de4acbd21bf9c69e94cc5e907a3a"},\\n]\\n\\n[[package]]\\nname = "urllib3"\\nversion = "2.0.6"\\ndescription = "HTTP library with thread-safe connection pooling, file post, and more."\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "urllib3-2.0.6-py3-none-any.whl", hash = "sha256:7a7c7003b000adf9e7ca2a377c9688bbc54ed41b985789ed576570342a375cd2"},\\n    {file = "urllib3-2.0.6.tar.gz", hash = "sha256:b19e1a85d206b56d7df1d5e683df4a7725252a964e3993648dd0fb5a1c157564"},\\n]\\n\\n[package.extras]\\nbrotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]\\nsecure = ["certifi", "cryptography (>=1.9)", "idna (>=2.0.0)", "pyopenssl (>=17.1.0)", "urllib3-secure-extra"]\\nsocks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]\\nzstd = ["zstandard (>=0.18.0)"]\\n\\n[[package]]\\nname = "watchdog"\\nversion = "3.0.0"\\ndescription = "Filesystem events monitoring"\\noptional = false\\npython-versions = ">=3.7"\\nfiles = [\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:336adfc6f5cc4e037d52db31194f7581ff744b67382eb6021c868322e32eef41"},\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:a70a8dcde91be523c35b2bf96196edc5730edb347e374c7de7cd20c43ed95397"},\\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:adfdeab2da79ea2f76f87eb42a3ab1966a5313e5a69a0213a3cc06ef692b0e96"},\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:2b57a1e730af3156d13b7fdddfc23dea6487fceca29fc75c5a868beed29177ae"},\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:7ade88d0d778b1b222adebcc0927428f883db07017618a5e684fd03b83342bd9"},\\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:7e447d172af52ad204d19982739aa2346245cc5ba6f579d16dac4bfec226d2e7"},\\n    {file = "watchdog-3.0.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:9fac43a7466eb73e64a9940ac9ed6369baa39b3bf221ae23493a9ec4d0022674"},\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:8ae9cda41fa114e28faf86cb137d751a17ffd0316d1c34ccf2235e8a84365c7f"},\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:25f70b4aa53bd743729c7475d7ec41093a580528b100e9a8c5b5efe8899592fc"},\\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4f94069eb16657d2c6faada4624c39464f65c05606af50bb7902e036e3219be3"},\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:7c5f84b5194c24dd573fa6472685b2a27cc5a17fe5f7b6fd40345378ca6812e3"},\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:3aa7f6a12e831ddfe78cdd4f8996af9cf334fd6346531b16cec61c3b3c0d8da0"},\\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:233b5817932685d39a7896b1090353fc8efc1ef99c9c054e46c8002561252fb8"},\\n    {file = "watchdog-3.0.0-pp37-pypy37_pp73-macosx_10_9_x86_64.whl", hash = "sha256:13bbbb462ee42ec3c5723e1205be8ced776f05b100e4737518c67c8325cf6100"},\\n    {file = "watchdog-3.0.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl", hash = "sha256:8f3ceecd20d71067c7fd4c9e832d4e22584318983cabc013dbf3f70ea95de346"},\\n    {file = "watchdog-3.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:c9d8c8ec7efb887333cf71e328e39cffbf771d8f8f95d308ea4125bf5f90ba64"},\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_aarch64.whl", hash = "sha256:0e06ab8858a76e1219e68c7573dfeba9dd1c0219476c5a44d5333b01d7e1743a"},\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_armv7l.whl", hash = "sha256:d00e6be486affb5781468457b21a6cbe848c33ef43f9ea4a73b4882e5f188a44"},\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_i686.whl", hash = "sha256:c07253088265c363d1ddf4b3cdb808d59a0468ecd017770ed716991620b8f77a"},\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64.whl", hash = "sha256:5113334cf8cf0ac8cd45e1f8309a603291b614191c9add34d33075727a967709"},\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64le.whl", hash = "sha256:51f90f73b4697bac9c9a78394c3acbbd331ccd3655c11be1a15ae6fe289a8c83"},\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_s390x.whl", hash = "sha256:ba07e92756c97e3aca0912b5cbc4e5ad802f4557212788e72a72a47ff376950d"},\\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_x86_64.whl", hash = "sha256:d429c2430c93b7903914e4db9a966c7f2b068dd2ebdd2fa9b9ce094c7d459f33"},\\n    {file = "watchdog-3.0.0-py3-none-win32.whl", hash = "sha256:3ed7c71a9dccfe838c2f0b6314ed0d9b22e77d268c67e015450a29036a81f60f"},\\n    {file = "watchdog-3.0.0-py3-none-win_amd64.whl", hash = "sha256:4c9956d27be0bb08fc5f30d9d0179a855436e655f046d288e2bcc11adfae893c"},\\n    {file = "watchdog-3.0.0-py3-none-win_ia64.whl", hash = "sha256:5d9f3a10e02d7371cd929b5d8f11e87d4bad890212ed3901f9b4d68767bee759"},\\n    {file = "watchdog-3.0.0.tar.gz", hash = "sha256:4d98a320595da7a7c5a18fc48cb633c2e73cda78f93cac2ef42d42bf609a33f9"},\\n]\\n\\n[package.extras]\\nwatchmedo = ["PyYAML (>=3.10)"]\\n\\n[metadata]\\nlock-version = "2.0"\\npython-versions = ">=3.10.0,<3.11"\\ncontent-hash = "19326ad4cba6cf84c5b09afbd1b8f3eb811da4d2c1161a64d6d0e0f8e45f9c04"\\n\\n--- End of poetry.lock ---\\n\\n--- Start of .replit ---\\nentrypoint = "main.py"\\nrun = ["streamlit", "run", "app.py", "--server.headless", "true"]\\n\\nmodules = ["python-3.10:v18-20230807-322e88b"]\\n\\nhidden = [".pythonlibs"]\\n\\n[nix]\\nchannel = "stable-23_05"\\n\\n[deployment]\\nrun = ["streamlit", "run", "--server.address", "0.0.0.0", "--server.headless", "true", "--server.enableCORS=false", "--server.enableWebsocketCompression=false", "--server.runOnSave=false", "app.py"]\\nignorePorts = false\\ndeploymentTarget = "gce"\\n\\n[[ports]]\\nlocalPort = 8501\\nexternalPort = 80\\n\\n[[ports]]\\nlocalPort = 8502\\nexternalPort = 3000\\n\\n--- End of .replit ---\\n\\n--- Start of app.py ---\\n# app.py\\nimport streamlit as st\\n\\n# --- Streamlit Page Configuration ---\\nst.set_page_config(\\n    page_title="Omnivia Survey Platform",\\n    layout="wide",\\n    initial_sidebar_state="expanded",\\n    page_icon=":bar_chart:"\\n)\\n\\nfrom modules import personas, questions, results, analytics, utils, dashboard, price_sensitivity, live_polling\\nfrom PIL import Image\\nfrom streamlit_option_menu import option_menu\\nimport json\\nimport requests\\nfrom pymongo import MongoClient\\nimport logging\\n\\n# Configure logging\\nlogging.basicConfig(level=logging.DEBUG)\\n\\n# --- Load Brand Assets ---\\ndef load_brand_assets():\\n    logo_path = "logo.png"  # Replace with your logo path\\n    primary_color = "#FF6F61"\\n    try:\\n        logo = Image.open(logo_path)\\n        return logo, primary_color\\n    except FileNotFoundError:\\n        logging.error("Logo file not found.")\\n        return None, primary_color\\n\\nlogo_image, primary_color = load_brand_assets()\\n\\n# --- Main App Logic ---\\ndef main():\\n    with st.container():\\n        if logo_image:\\n            st.image(logo_image, use_column_width=True)\\n        st.title("Omnivia Survey Platform")\\n\\n        # --- Navigation ---\\n        selected = option_menu(\\n            menu_title=None,\\n            options=["Demand Meter", "Price Sensitivity", "Live Polling"],\\n            icons=["bar-chart", "graph-up-arrow", "chat-dots"],\\n            menu_icon="cast",\\n            default_index=0,\\n            styles={\\n                "container": {"padding": "5!important", "background-color": "#2A2A2A"},\\n                "icon": {"color": "white"},\\n                "nav-link": {"font-size": "16px", "text-align": "left", "margin": "0px", "--hover-color": "#D65A50"},\\n                "nav-link-selected": {"background-color": "#D65A50"},\\n            }\\n        )\\n\\n        # --- App Sections ---\\n        try:\\n            if selected == "Demand Meter":\\n                dashboard.run_dashboard()  # Call the module to run Demand Meter\\n            elif selected == "Price Sensitivity":\\n                price_sensitivity.run_price_sensitivity()  # Call the module to run Price Sensitivity\\n            elif selected == "Live Polling":\\n                live_polling.run_live_polling()  # Call the module to run Live Polling\\n        except Exception as e:\\n            st.error(f"Error running {selected}: {str(e)}")\\n            logging.error(f"Error running {selected}: {str(e)}")\\n            utils.log_error(selected, str(e))\\n\\nif __name__ == "__main__":\\n    main()\\n\\n--- End of app.py ---\\n\\n--- Start of loading_screen.css ---\\n/* loading_screen.css */\\nbody {\\n  background-color: #000;\\n  color: #0f0;\\n  font-family: \\\'Courier New\\\', Courier, monospace;\\n}\\n\\n.loading-text {\\n  font-size: 24px;\\n  text-align: center;\\n  padding-top: 20%;\\n}\\n\\n.loading-text::after {\\n  content: \\\'\\\';\\n  display: inline-block;\\n  width: 1em;\\n  height: 1em;\\n  border-radius: 50%;\\n  background: #0f0;\\n  margin-left: 10px;\\n  animation: blink 1s infinite;\\n}\\n\\n@keyframes blink {\\n  0%, 50%, 100% {\\n    opacity: 1;\\n  }\\n  25%, 75% {\\n    opacity: 0;\\n  }\\n}\\n\\n--- End of loading_screen.css ---\\n\\n--- Start of example.py ---\\nimport streamlit as st\\nimport pandas as pd\\nimport numpy as np\\nimport plotly.express as px\\n\\n# Set page configuration\\nst.set_page_config(\\n    page_title="Executive Report",\\n    layout="wide",\\n    initial_sidebar_state="expanded",\\n)\\n\\n# Navigation Tabs\\ntabs = [\\\'Overview\\\', \\\'Price & Performance\\\', \\\'Portfolio & Management\\\', \\\'Fees & Minimums\\\', \\\'Distributions\\\', \\\'News & Reviews\\\']\\ntab = st.sidebar.radio("Navigation", tabs)\\n\\n# Dummy data\\ndef generate_dummy_data():\\n    dates = pd.date_range(start="2023-01-01", periods=100, freq="D")\\n    values = np.random.randn(100).cumsum()\\n    return pd.DataFrame({"Date": dates, "Value": values})\\n\\n# Header\\nst.title("Executive Report")\\nst.markdown("""\\nA comprehensive report highlighting key financial metrics, market trends, and potential risks for \\n**PSS World Medical, Inc. (PSSI)**.\\n""")\\n\\n# Main content based on selected tab\\nif tab == "Overview":\\n    st.header("Company Overview")\\n    st.markdown("""\\n    **PSS World Medical, Inc. (PSSI)**\\n\\n    - **Sector**: Healthcare\\n    - **Industry**: Medical Distribution\\n    - **Market Cap**: $2.3B\\n    """)\\n    st.image("https://via.placeholder.com/600x400", caption="Company Headquarters", use_column_width=True)\\n    st.subheader("Key Highlights")\\n    st.markdown("""\\n    - Strong market position\\n    - Consistent revenue growth\\n    - Expanding product lines\\n    """)\\n\\nelif tab == "Price & Performance":\\n    st.header("Price & Performance")\\n\\n    st.subheader("Current Prices")\\n    current_prices = {\\n        "Price as of 02/27/2018": "$254.07",\\n        "Change": "-$3.23 (-1.26%)",\\n        "SEC Yield": "1.67%",\\n        "52-week high 01/26/2018": "$265.42",\\n        "52-week low 04/13/2017": "$215.11",\\n        "Range": "$50.31 (23.39%)"\\n    }\\n    st.table(pd.DataFrame.from_dict(current_prices, orient=\\\'index\\\', columns=[\\\'Value\\\']).reset_index().rename(columns={"index": "Metric"}))\\n\\n    st.subheader("Historical Prices")\\n    historical_prices = pd.DataFrame({\\n        "Date": ["02/22/2018", "02/23/2018", "02/26/2018", "02/27/2018", "02/28/2018"],\\n        "Price": ["$250.26", "$254.29", "$257.30", "$254.07", "$251.27"]\\n    })\\n    st.table(historical_prices)\\n\\n    st.subheader("Performance")\\n    data = generate_dummy_data()\\n    fig = px.line(data, x="Date", y="Value", title="Performance Over Time", labels={"Date": "Date", "Value": "Value"})\\n    fig.update_layout(height=400)\\n    st.plotly_chart(fig)\\n\\n    st.subheader("Average Annual Returns")\\n    annual_returns = pd.DataFrame({\\n        "Metric": ["500 Index Fund Inv", "S&P 500 Index"],\\n        "1 Year": ["16.94%", "17.01%"],\\n        "3 Year": ["11.00%", "11.14%"],\\n        "5 Year": ["14.57%", "14.73%"],\\n        "10 Year": ["9.60%", "9.73%"],\\n        "Since Inception": ["11.12%", "-"]\\n    })\\n    st.table(annual_returns)\\n\\n    st.subheader("After-tax Returns")\\n    after_tax_returns = pd.DataFrame({\\n        "Metric": ["500 Index Fund Inv", "Returns after taxes on distributions", "Returns after taxes on distributions and sale of fund shares"],\\n        "1 Year": ["21.67%", "12.64%", "20.44%"],\\n        "3 Year": ["11.26%", "8.71%", "9.70%"],\\n        "5 Year": ["15.62%", "12.51%", "14.24%"],\\n        "10 Year": ["8.37%", "6.75%", "7.61%"],\\n        "Since Inception": ["11.11%", "-", "-"]\\n    })\\n    st.table(after_tax_returns)\\n\\nelif tab == "Portfolio & Management":\\n    st.header("Portfolio & Management")\\n    st.markdown("Details about the portfolio and management team go here.")\\n\\nelif tab == "Fees & Minimums":\\n    st.header("Fees & Minimums")\\n    st.markdown("Details about the fees and minimums go here.")\\n\\nelif tab == "Distributions":\\n    st.header("Distributions")\\n    st.markdown("Details about the distributions go here.")\\n\\nelif tab == "News & Reviews":\\n    st.header("News & Reviews")\\n    st.markdown("Details about the latest news and reviews go here.")\\n\\n# Custom CSS for styling\\nst.markdown("""\\n    <style>\\n    .report-container { max-width: 1200px; margin: 0 auto; }\\n    .header { background-color: #f0f2f6; padding: 20px; border-radius: 5px; margin-bottom: 20px; text-align: center; }\\n    .header h1 { font-size: 2.5em; margin-bottom: 0; }\\n    .header p { font-size: 1.2em; color: #666; }\\n    .main { background-color: #fff; padding: 20px; border-radius: 5px; margin-bottom: 20px; }\\n    .section-title { font-size: 1.8em; margin-bottom: 20px; border-bottom: 2px solid #e0e0e0; padding-bottom: 10px; }\\n    .metric-box { text-align: center; background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\\n    .metric-box h2 { font-size: 1.5em; margin: 0; }\\n    .metric-box p { font-size: 1.2em; color: #666; margin: 0; }\\n    .visual-card { background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\\n    </style>\\n""", unsafe_allow_html=True)\\n\\n--- End of example.py ---\\n\\n\\n--- Directory: modules ---\\n--- Start of modules/dashboard.py ---\\nimport streamlit as st\\nimport pandas as pd\\nimport plotly.express as px\\nimport plotly.graph_objs as go\\nfrom itertools import product\\nfrom modules import utils, narrative  # Ensure you have the utils and narrative modules defined\\nimport logging\\nfrom openai import OpenAI\\nimport os\\n\\n# Configure logging\\nlogging.basicConfig(level=logging.INFO)\\n\\n# Custom CSS for better visuals and modern look\\nst.markdown("""\\n    <style>\\n        body {\\n            font-family: \\\'Segoe UI\\\', Tahoma, Geneva, Verdana, sans-serif;\\n            background-color: #1E1E1E;\\n            color: #D4D4D4;\\n        }\\n        .report-title {\\n            font-size: 2.5rem;\\n            color: #FFC300;\\n            margin-top: 20px;\\n            margin-bottom: 20px;\\n        }\\n        .section-header {\\n            font-size: 1.8rem;\\n            color: #FFD700;\\n            margin-top: 20px;\\n            margin-bottom: 10px;\\n        }\\n        .key-insights {\\n            font-size: 1.2rem;\\n            color: #E0E0E0;\\n            background-color: #333333;\\n            padding: 20px;\\n            border-radius: 10px;\\n            margin-top: 20px;\\n        }\\n        .metric {\\n            font-size: 1.5rem;\\n            font-weight: bold;\\n            color: #FFD700;\\n            margin: 10px 0;\\n        }\\n        .sidebar .sidebar-content {\\n            background-color: #333333;\\n            padding: 20px;\\n            border-radius: 10px;\\n        }\\n        .sidebar .sidebar-content input, .sidebar .sidebar-content select {\\n            background-color: #444444;\\n            color: #D4D4D4;\\n            border: none;\\n            border-radius: 5px;\\n            padding: 10px;\\n        }\\n        .sidebar .sidebar-content button {\\n            background-color: #FFC300;\\n            color: #1E1E1E;\\n            border: none;\\n            border-radius: 5px;\\n            padding: 10px 20px;\\n            margin-top: 10px;\\n        }\\n    </style>\\n""", unsafe_allow_html=True)\\n\\n# Initialize OpenAI client\\nopenai_client = OpenAI()\\nopenai_client.api_key = os.getenv(\\\'OPENAI_API_KEY\\\')\\nif not openai_client.api_key:\\n    st.error("OpenAI API key is missing. Please set the OPENAI_API_KEY environment variable.")\\n\\n# Function to generate narrative summary using OpenAI GPT\\ndef generate_narrative_summary(df):\\n    prompt = f"Generate an executive summary for the following data:\\\\n{df.to_string(index=False)}"\\n\\n    try:\\n        response = openai_client.chat.completions.create(\\n            model="gpt-3.5-turbo",\\n            messages=[\\n                {"role": "system", "content": "You are a helpful assistant."},\\n                {"role": "user", "content": prompt}\\n            ],\\n            max_tokens=200\\n        )\\n\\n        # Check if the response has a \\\'choices\\\' field and if it\\\'s not empty\\n        if response.choices:\\n            summary = response.choices[0].message.content.strip()\\n            return summary\\n        else:\\n            st.warning("OpenAI response did not contain a summary. Please try again later.")\\n            return ""  # Return an empty string if there\\\'s no summary\\n\\n    except Exception as e:\\n        logging.error(f"Error generating narrative summary: {str(e)}")\\n        st.error(f"Error generating narrative summary. Please try again later.")\\n        return "" \\n\\n# Function to generate predictive analytics \\ndef generate_predictive_analytics(df):\\n    df[\\\'Predicted_Demand_Score\\\'] = df[\\\'Demand Score\\\'] * 1.05  # Mock prediction logic\\n    return df[[\\\'Feature\\\', \\\'Tagline\\\', \\\'Price\\\', \\\'Predicted_Demand_Score\\\']]\\n\\n# Function to personalize dashboard based on user preferences\\ndef personalized_insights(user_preferences):\\n    insights = f"Personalized insights based on preferences: {user_preferences}"\\n    return insights\\n\\n# Function to set up alerts and notifications\\ndef setup_alerts():\\n    st.sidebar.header("Alerts and Notifications")\\n    st.sidebar.text_input("Enter Alert Criteria", key="alert_criteria")\\n    if st.sidebar.button("Set Alert"):\\n        st.sidebar.success("Alert set successfully!")\\n\\n# Run the main dashboard application\\ndef run_dashboard():\\n    try:\\n        st.markdown("<h1 class=\\\'report-title\\\'>Executive Dashboard - AI-Powered Demand Insights</h1>", unsafe_allow_html=True)\\n\\n        st.sidebar.markdown("<div class=\\\'sidebar-content\\\'>", unsafe_allow_html=True)\\n        product_name = st.sidebar.text_input("Product Name:", placeholder="Enter the product name")\\n        product_features = st.sidebar.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\\n        tagline_options = st.sidebar.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\\n        price_options_str = st.sidebar.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\\n\\n        try:\\n            price_options = [float(x.strip()) for x in price_options_str.split(\\\',\\\')] if price_options_str else []\\n            price_error = False\\n        except ValueError:\\n            price_error = True\\n            price_options = []\\n            st.sidebar.warning("Invalid price options. Please enter comma-separated numbers.")\\n\\n        st.sidebar.markdown("<h3 class=\\\'section-header\\\'>Simulation Configuration</h3>", unsafe_allow_html=True)\\n        num_bots = st.sidebar.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\\n        male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\\n        income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\\n        interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\n        interests_list = [i.strip() for i in interests.split(",")] if interests else []\\n\\n        if interests_list:\\n            st.sidebar.markdown("<h3 class=\\\'section-header\\\'>Interests:</h3>", unsafe_allow_html=True)\\n            st.sidebar.markdown(" ".join([f\\\'<span style="background-color: #FFD700; color: #1E1E1E; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\\\' for interest in interests_list]), unsafe_allow_html=True)\\n\\n        # Initialize df outside the conditional block\\n        df = pd.DataFrame() \\n\\n        if st.sidebar.button("Calculate Demand") and not price_error:\\n            if not all([product_name, product_features, tagline_options, price_options]):\\n                st.warning("Please fill in all product details.")\\n            else:\\n                features = [x.strip() for x in product_features.split(\\\',\\\')]\\n                taglines = [x.strip() for x in tagline_options.split(\\\',\\\')]\\n                st.write(f"**Product Name:** {product_name}")\\n                st.write(f"**Features:** {features}")\\n                st.write(f"**Taglines:** {taglines}")\\n                st.write(f"**Prices:** {price_options}")\\n                st.write(f"**Number of Bots:** {num_bots}")\\n                combinations = list(product(features, taglines, price_options))\\n                st.write(f"**Combinations:** {combinations}")\\n\\n                progress_placeholder = st.empty()\\n                try:\\n                    df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\\n                except Exception as e:\\n                    st.error(f"Error during simulation: {str(e)}")\\n                    logging.error(f"Error during simulation: {str(e)}")\\n                    utils.log_error("Demand Meter", str(e))\\n\\n                if not df.empty:\\n                    required_columns = [\\\'Feature\\\', \\\'Tagline\\\', \\\'Price\\\', \\\'Demand Score\\\']\\n                    if not all(col in df.columns for col in required_columns):\\n                        st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\\n                        return\\n\\n                    st.markdown("<h2 class=\\\'section-header\\\'>Executive Summary</h2>", unsafe_allow_html=True)\\n                    summary = generate_narrative_summary(df)\\n                    st.markdown(f"<div class=\\\'key-insights\\\'>{summary}</div>", unsafe_allow_html=True)\\n\\n                    st.markdown("<h2 class=\\\'section-header\\\'>Detailed Analysis</h2>", unsafe_allow_html=True)\\n                    fig = px.scatter(df, x=\\\'Price\\\', y=\\\'Demand Score\\\', color=\\\'Feature\\\', hover_data=[\\\'Tagline\\\'])\\n                    st.plotly_chart(fig, use_container_width=True)\\n\\n                    heatmap_data = df.pivot_table(index="Feature", columns="Tagline", values="Demand Score")\\n                    fig = go.Figure(data=go.Heatmap(z=heatmap_data.values, x=heatmap_data.columns, y=heatmap_data.index))\\n                    st.plotly_chart(fig, use_container_width=True)\\n\\n                    # User Feedback\\n                    st.markdown("<h2 class=\\\'section-header\\\'>User Feedback</h2>", unsafe_allow_html=True)\\n                    feedback = st.text_area("Enter your feedback here:")\\n                    if st.button("Submit Feedback"):\\n                        utils.log_feedback(product_name, feedback)\\n                        st.success("Thank you for your feedback!")\\n\\n        # Predictive Analytics (Now uses df even if not calculated)\\n        st.markdown("<h2 class=\\\'section-header\\\'>Predictive Analytics</h2>", unsafe_allow_html=True)\\n        if not df.empty:  # Check if df is populated\\n            predictions = generate_predictive_analytics(df)\\n            st.write(predictions)\\n        else:\\n            st.info("Please run a simulation to view predictive analytics.")\\n\\n        # Personalized Insights (Now uses df even if not calculated)\\n        st.markdown("<h2 class=\\\'section-header\\\'>Personalized Insights</h2>", unsafe_allow_html=True)\\n        user_preferences = st.text_input("Enter your preferences (comma-separated):", placeholder="Preference1, Preference2")\\n        if user_preferences and not df.empty:  # Check for both preferences and data\\n            insights = personalized_insights(user_preferences)\\n            st.write(insights)\\n        else:\\n            st.info("Please run a simulation to view personalized insights.")\\n\\n        # Set up Alerts\\n        setup_alerts()\\n\\n    except Exception as e:\\n        logging.error(f"Error in run_dashboard: {str(e)}")\\n        st.error(f"Error in run_dashboard: {str(e)}")\\n\\nif __name__ == "__main__":\\n    run_dashboard()\\n--- End of modules/dashboard.py ---\\n\\n--- Start of modules/visualizations.py ---\\nimport streamlit as st\\nimport seaborn as sns\\nimport matplotlib.pyplot as plt\\n\\ndef plot_demand_distribution(df):\\n    st.write("### Demand Score Distribution")\\n    fig, ax = plt.subplots(figsize=(10, 6))\\n    sns.histplot(df[\\\'Demand Score\\\'], bins=20, kde=True, ax=ax)\\n    st.pyplot(fig)\\n\\ndef plot_demand_heatmap(df):\\n    st.write("### Demand Score Heatmap")\\n    try:\\n        heatmap_data = df.pivot_table(values=\\\'Demand Score\\\', index=\\\'Feature\\\', columns=\\\'Tagline\\\', aggfunc=\\\'mean\\\')\\n        fig, ax = plt.subplots(figsize=(12, 8))\\n        sns.heatmap(heatmap_data, annot=True, cmap="YlGnBu", ax=ax)\\n        st.pyplot(fig)\\n    except Exception as e:\\n        st.error(f"Error creating heatmap: {str(e)}")\\n\\n--- End of modules/visualizations.py ---\\n\\n--- Start of modules/narrative.py ---\\nimport streamlit as st\\n\\ndef generate_summary(df):\\n    st.markdown("<div class=\\\'key-insights\\\'>", unsafe_allow_html=True)\\n    best_combination = df.loc[df[\\\'Demand Score\\\'].idxmax()]\\n    st.markdown(f"<p class=\\\'metric\\\'>Best Combination: Feature - {best_combination[\\\'Feature\\\']}, Tagline - {best_combination[\\\'Tagline\\\']}, Price - ${best_combination[\\\'Price\\\']}</p>", unsafe_allow_html=True)\\n    st.markdown(f"<p class=\\\'metric\\\'>Highest Demand Score: {best_combination[\\\'Demand Score\\\']:.1f}</p>", unsafe_allow_html=True)\\n\\n    if df[\\\'Demand Score\\\'].min() < 70:\\n        st.markdown("<p>Suggestions for Improvement:</p>", unsafe_allow_html=True)\\n        st.markdown("<ul><li>Consider revising features, taglines, or prices to boost demand.</li></ul>", unsafe_allow_html=True)\\n    st.markdown("</div>", unsafe_allow_html=True)\\n\\n--- End of modules/narrative.py ---\\n\\n--- Start of modules/live_polling.py ---\\nimport streamlit as st\\nimport pandas as pd\\nimport random\\nimport concurrent.futures\\nimport math\\nfrom modules import utils, results, analytics\\nimport time  # Ensure the time module is imported\\n\\ndef run_live_polling():\\n    """Runs the Live Polling section of the app."""\\n    st.subheader("Live Polling")\\n    st.write("**Real-time Results and Interactive Visualizations**")\\n\\n    # --- Live Polling Input ---\\n    st.sidebar.subheader("Create Survey")\\n    survey_question = st.sidebar.text_input("Enter your survey question:", "")\\n    options = {f"option_{chr(65+i)}": st.sidebar.text_input(f"Enter option {chr(65+i)}:", "") for i in range(4)}\\n    followups = [st.sidebar.text_input(f"Enter follow-up question {i+1}:", "") for i in range(2)]\\n\\n    # --- Live Polling Logic and Display ---\\n    votes = {key: 0 for key in options.keys()}\\n    if st.button("Start Poll"):\\n        if not survey_question or not any(options.values()):\\n            st.warning("Please enter a question and options.")\\n        else:\\n            selected_option = st.selectbox("Choose your option:", options.values())\\n            if st.button("Vote"):\\n                votes[selected_option] += 1\\n\\n            st.write(f"**Poll Results:**")\\n            for option, count in votes.items():\\n                st.write(f"- {option}: {count} votes")\\n\\n            # Simple timer (You\\\'ll likely replace this with real-time updates)\\n            start_time = time.time()\\n            while time.time() - start_time < 10: # 10 seconds for example\\n                st.write(f"Time remaining: {10 - int(time.time() - start_time)} seconds")\\n                st.experimental_rerun()\\n\\n    # --- Live Polling Input (Demographics) ---\\n    st.sidebar.subheader("Specify Demographics")\\n    male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\\n    female_percentage = 100 - male_percentage\\n    income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\\n\\n    # Interest badges\\n    interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\n    interests_list = interests.split(",") if interests else []\\n\\n    if interests_list:\\n        st.sidebar.markdown("### Interests:")\\n        for interest in interests_list:\\n            st.sidebar.markdown(\\n                f"""<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest.strip()}</span>""",\\n                unsafe_allow_html=True\\n            )\\n\\n    num_bots = st.sidebar.number_input("Enter number of bots:", min_value=1, max_value=1000, value=100)\\n\\n    # Start button\\n    start_button = st.sidebar.button("Start Survey Simulation")\\n\\n    # Simulation settings\\n    MAX_CONCURRENT_THREADS = 25\\n    batch_size = 25\\n    num_batches = math.ceil(num_bots / batch_size)\\n\\n    # Survey simulation logic\\n    if start_button:\\n        bot_data = utils.generate_survey_data(int(num_bots), male_percentage, income_range, interests_list)\\n\\n        # Sentiment Analysis\\n        sentiment_results = analytics.analyze_sentiment([data[\\\'persona\\\'] for data in bot_data.values()])\\n        st.write("### Sentiment Analysis")\\n        sentiment_df = pd.DataFrame(sentiment_results)\\n        st.dataframe(sentiment_df)\\n\\n        # Display Results\\n        results.display_survey_results(bot_data)\\n--- End of modules/live_polling.py ---\\n\\n--- Start of modules/price_sensitivity.py ---\\nimport streamlit as st\\nimport pandas as pd\\nimport json\\n\\ndef run_price_sensitivity():\\n    """Runs the Price Sensitivity section of the app."""\\n    st.subheader("Price Sensitivity")\\n    st.write("**Analyze the impact of different prices on demand**")\\n\\n    # --- Price Sensitivity Analysis ---\\n    price_points_str = st.text_input("Enter Price Points (comma-separated):")\\n\\n    # Validate and parse price points\\n    try:\\n        price_points = [float(x.strip()) for x in price_points_str.split(\\\',\\\')] if price_points_str else []\\n        price_error = False\\n    except ValueError:\\n        price_error = True\\n        price_points = []\\n\\n    if price_error:\\n        st.warning("Invalid price points. Please enter comma-separated numbers.")\\n\\n    if st.button("Run Price Sensitivity Analysis") and not price_error:\\n        if not price_points:\\n            st.warning("Please enter price points.")\\n        else:\\n            st.write(f"**Price Points:** {price_points}")\\n\\n            # Simulate retrieving responses from a database\\n            responses = []  # Replace with actual database call\\n            if responses:\\n                # Placeholder for actual price sensitivity analysis\\n                st.write("**Analysis Results:**")\\n                for point in price_points:\\n                    st.write(f"At ${point}, the demand is...")  # Placeholder for actual logic\\n\\n                # Example of Van Westendorp Price Sensitivity Analysis\\n                st.write("**Van Westendorp Price Sensitivity Analysis:**")\\n                optimal_price_range = (min(price_points), max(price_points))  # Placeholder for actual analysis\\n                st.write(f"Optimal Price Range: {optimal_price_range}")\\n\\n                # Example of Gabor-Granger Price Sensitivity Analysis\\n                st.write("**Gabor-Granger Price Sensitivity Analysis:**")\\n                demand_at_price = {point: random.randint(50, 100) for point in price_points}  # Placeholder\\n                st.write(f"Demand at Different Price Points: {demand_at_price}")\\n\\n                # Chart for Gabor-Granger Results\\n                option = {\\n                    "title": {"text": "Gabor-Granger Price Sensitivity", "left": "center"},\\n                    "xAxis": {"type": "category", "data": price_points},\\n                    "yAxis": {"type": "value"},\\n                    "series": [\\n                        {"data": list(demand_at_price.values()), "type": "bar", "showBackground": True, "backgroundStyle": {"color": \\\'rgba(180, 180, 180, 0.2)\\\'}}\\n                    ]\\n                }\\n                st.echarts(options=json.dumps(option), height="400px")\\n\\n--- End of modules/price_sensitivity.py ---\\n\\n--- Start of modules/old.py ---\\nimport streamlit as st\\nimport pandas as pd\\nfrom itertools import product\\nfrom modules import utils, visualizations, narrative\\nfrom autogen import AssistantAgent, UserProxyAgent\\n\\ndef run_dashboard():\\n    st.title("Executive Dashboard - AI-Powered Demand Insights")\\n\\n    product_name = st.text_input("Product Name:", placeholder="Enter the product name")\\n    product_features = st.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\\n    tagline_options = st.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\\n    price_options_str = st.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\\n\\n    try:\\n        price_options = [float(x.strip()) for x in price_options_str.split(\\\',\\\')] if price_options_str else []\\n        price_error = False\\n    except ValueError:\\n        price_error = True\\n        price_options = []\\n        st.warning("Invalid price options. Please enter comma-separated numbers.")\\n\\n    st.header("Simulation Configuration")\\n    num_bots = st.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\\n    male_percentage = st.slider("Male Percentage", 0, 100, 50)\\n    income_range = st.slider("Income Range (in thousands)", 0, 500, (50, 150))\\n    interests = st.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\\n    interests_list = [i.strip() for i in interests.split(",")] if interests else []\\n\\n    if interests_list:\\n        st.markdown("### Interests:")\\n        st.markdown(" ".join([f\\\'<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\\\' for interest in interests_list]), unsafe_allow_html=True)\\n\\n    if st.button("Calculate Demand") and not price_error:\\n        if not all([product_name, product_features, tagline_options, price_options]):\\n            st.warning("Please fill in all product details.")\\n        else:\\n            features = [x.strip() for x in product_features.split(\\\',\\\')]\\n            taglines = [x.strip() for x in tagline_options.split(\\\',\\\')]\\n            st.write(f"**Product Name:** {product_name}")\\n            st.write(f"**Features:** {features}")\\n            st.write(f"**Taglines:** {taglines}")\\n            st.write(f"**Prices:** {price_options}")\\n            st.write(f"**Number of Bots:** {num_bots}")\\n            combinations = list(product(features, taglines, price_options))\\n            st.write(f"**Combinations:** {combinations}")\\n\\n            progress_placeholder = st.empty()\\n            try:\\n                df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\\n            except Exception as e:\\n                st.error(f"Error during simulation: {str(e)}")\\n                utils.log_error("Demand Meter", str(e))\\n                return\\n\\n            if df.empty:\\n                st.error("No valid data was generated. Please check your inputs and try again.")\\n                return\\n\\n            required_columns = [\\\'Feature\\\', \\\'Tagline\\\', \\\'Price\\\', \\\'Demand Score\\\']\\n            if not all(col in df.columns for col in required_columns):\\n                st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\\n                return\\n\\n            st.header("Executive Summary")\\n            narrative.generate_summary(df)\\n\\n            st.header("Detailed Analysis")\\n            visualizations.plot_demand_distribution(df)\\n            visualizations.plot_demand_heatmap(df)\\n\\n            st.header("User Feedback")\\n            feedback = st.text_area("Enter your feedback here:")\\n            if st.button("Submit Feedback"):\\n                utils.log_feedback(product_name, feedback)\\n                st.success("Thank you for your feedback!")\\n\\n            st.header("Automated Insights")\\n            config_list = [{"model": "gpt-3.5-turbo"}]\\n            assistant = AssistantAgent(name="Assistant", llm_config={"config_list": config_list})\\n            user_proxy = UserProxyAgent(name="User_proxy", code_execution_config={"work_dir": "coding"})\\n            try:\\n                insights = utils.generate_insights(assistant, user_proxy, df.to_dict(orient=\\\'records\\\'))\\n                st.write(insights)\\n            except Exception as e:\\n                st.error(f"Failed to generate insights: {e}")\\n\\nif __name__ == "__main__":\\n    run_dashboard()\\n\\n--- End of modules/old.py ---\\n\\n--- Start of modules/analytics.py ---\\nimport pandas as pd\\nimport random\\n\\ndef van_westendorp_analysis(price_points, responses):\\n    """Performs Van Westendorp price sensitivity analysis."""\\n    too_expensive = []\\n    too_cheap = []\\n    just_right = []\\n    too_expensive_data = []\\n    too_cheap_data = []\\n    just_right_data = []\\n    for response in responses:\\n        for i, price in enumerate(price_points):\\n            if response == "Too expensive":\\n                too_expensive_data.append(price)\\n                too_expensive.append(i)\\n            elif response == "Too cheap":\\n                too_cheap_data.append(price)\\n                too_cheap.append(i)\\n            elif response == "Just right":\\n                just_right_data.append(price)\\n                just_right.append(i)\\n\\n    # Calculate Optimal Price Range\\n    too_expensive_avg = sum(too_expensive_data) / len(too_expensive_data) if too_expensive_data else 0\\n    too_cheap_avg = sum(too_cheap_data) / len(too_cheap_data) if too_cheap_data else 0\\n    just_right_avg = sum(just_right_data) / len(just_right_data) if just_right_data else 0\\n\\n    optimal_price_range = (too_cheap_avg, too_expensive_avg)\\n    return optimal_price_range, too_expensive, too_cheap, just_right\\n\\ndef gabor_granger_analysis(price_points, responses):\\n    """Performs Gabor-Granger price sensitivity analysis."""\\n    demand_at_price = {}\\n    for i, price in enumerate(price_points):\\n        demand_at_price[price] = responses.count(i)\\n    return demand_at_price\\n\\ndef analyze_sentiment(responses):\\n    """Performs sentiment analysis on survey responses."""\\n    sentiments = []\\n    for response in responses:\\n        if isinstance(response, str):\\n            prompt = f"""Analyze the sentiment of the following text:\\n            "{response}"\\n            Provide the sentiment as "positive", "negative", or "neutral".\\n            """\\n            sentiment = llm(prompt)\\n            sentiments.append({"Response": response, "Sentiment": sentiment})\\n    return sentiments\\n--- End of modules/analytics.py ---\\n\\n--- Start of modules/__init__.py ---\\n\\n--- End of modules/__init__.py ---\\n\\n--- Start of modules/results.py ---\\nimport streamlit as st\\nimport pandas as pd\\nimport random\\n\\ndef display_survey_results(bot_data):\\n    """Displays the survey results in a structured format."""\\n    df = pd.DataFrame(bot_data)\\n    response_tally = df[\\\'response\\\'].value_counts()\\n    st.write("### Survey Results")\\n    st.bar_chart(response_tally)\\n\\n    # Key Insights\\n    st.write("### Key Insights")\\n    most_popular = response_tally.idxmax()\\n    st.write(f"**Most popular option**: {most_popular} ({options[f\\\'option_{most_popular.lower()}\\\']})")\\n    st.write(f"**Average score for \\\'{followups[0]}\\\'**: {df[\\\'followups\\\'].apply(lambda x: x[0]).mean():.2f}/10")\\n    st.write(f"**Most common response to \\\'{followups[1]}\\\'**: {df[\\\'followups\\\'].apply(lambda x: x[1]).mode()[0]}")\\n\\n    # Sample Personas\\n    st.write("### Sample Personas")\\n    for i, (bot, data) in enumerate(random.sample(list(bot_data.items()), 5)):\\n        with st.expander(f"Persona {i+1}"):\\n            st.write(data[\\\'persona\\\'])\\n            st.write(f"Response: {data[\\\'response\\\']}")\\n--- End of modules/results.py ---\\n\\n--- Start of modules/personas.py ---\\nimport os\\nimport random\\nfrom langchain_community.llms import OpenAI\\n\\n# --- OpenAI API ---\\nllm = OpenAI(temperature=0.7)\\n\\ndef generate_persona(income_range, interests):\\n    """Generates a persona based on income and a list of interests."""\\n    prompt = f"""Create a persona with the following elements:\\n    1. Identity: Name, occupation, background\\n    2. Characteristics: Personality traits, communication style, beliefs, values\\n    3. Knowledge and expertise: Specific areas of knowledge or expertise\\n    4. Experiences: Relevant past experiences, achievements, or challenges\\n    5. Motivations: Goals, desires, or driving forces\\n    6. Emotional and relational aspects: Emotional state, level of empathy, approach to relationships\\n    7. Context: Specific setting or situation\\n\\n    The persona should have an income between ${income_range[0]}k and ${income_range[1]}k. \\n\\n    {random.choice([\\\'They like \\\', \\\'They might like \\\', \\\'They dont really care for \\\'])} {random.sample(interests, random.randint(0, len(interests)))}\\n\\n    Provide the information in a structured format.\\n    """\\n\\n    response = llm(prompt)\\n    return response.strip()\\n--- End of modules/personas.py ---\\n\\n--- Start of modules/questions.py ---\\nimport os\\nimport streamlit as st\\nfrom pymongo import MongoClient\\n\\n# --- MongoDB Connection ---\\nclient = MongoClient(os.environ["MONGODB_URI"])\\ndb = client.get_database("Omnivia")\\nresponses_collection = db.get_collection("responses")\\n\\ndef create_survey_question():\\n    """Creates a survey question section with question type selection and conditional logic."""\\n    st.subheader("Create Survey Question")\\n    question_type = st.selectbox("Select Question Type", ["Multiple Choice", "Text", "Rating Scale", "Dropdown"])\\n    question_text = st.text_input("Enter Question Text:")\\n\\n    options = []\\n    if question_type in ["Multiple Choice", "Dropdown"]:\\n        num_options = st.number_input("Number of Options", min_value=2, max_value=10, value=4)\\n        for i in range(int(num_options)):\\n            options.append(st.text_input(f"Option {i+1}:"))\\n\\n    # Conditional Logic (Dynamically Show/Hide Questions)\\n    condition_enabled = st.checkbox("Enable Conditional Logic")\\n    if condition_enabled:\\n        target_question = st.selectbox("Target Question", options, index=0)\\n        condition_value = st.text_input("Condition Value (e.g., Option A)")\\n        st.write(f"**Conditional Logic:**  If the answer to the previous question is \\\'{condition_value}\\\', then the following question will be shown:")\\n        # ... (Implement logic to show/hide questions dynamically) ...\\n\\n    # Store the created question in the database\\n    if st.button("Add Question"):\\n        question_data = {\\n            "type": question_type,\\n            "text": question_text,\\n            "options": options if options else None,\\n            "condition": {\\n                "enabled": condition_enabled,\\n                "target_question": target_question if condition_enabled else None,\\n                "value": condition_value if condition_enabled else None\\n            }\\n        }\\n        responses_collection.insert_one(question_data)  # Insert the question to the MongoDB collection\\n        st.success("Question added successfully.")\\n--- End of modules/questions.py ---\\n\\n--- Start of modules/utils.py ---\\nimport random\\nimport pandas as pd\\nimport logging\\nimport autogen\\n\\n# Setup logging\\nlogging.basicConfig(level=logging.INFO, format=\\\'%(asctime)s %(levelname)s:%(message)s\\\')\\nlogger = logging.getLogger(__name__)\\n\\nfile_handler = logging.FileHandler(\\\'app_debug.log\\\')\\nfile_handler.setLevel(logging.DEBUG)\\nfile_handler.setFormatter(logging.Formatter(\\\'%(asctime)s %(levelname)s:%(message)s\\\'))\\n\\nlogger.addHandler(file_handler)\\n\\ndef generate_survey_data(num_bots, male_percentage, income_range, interests_list):\\n    try:\\n        data = [{\\\'gender\\\': \\\'male\\\' if random.random() < male_percentage / 100 else \\\'female\\\',\\n                 \\\'income\\\': random.randint(income_range[0], income_range[1]) * 1000,\\n                 \\\'interests\\\': random.sample(interests_list, k=min(len(interests_list), 3))}\\n                for _ in range(num_bots)]\\n        logger.info(f"Generated survey data: {data[:5]}...")  # Log a sample of generated data\\n        return data\\n    except Exception as e:\\n        logger.error(f"Error generating survey data: {str(e)}")\\n        raise\\n\\ndef simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index):\\n    try:\\n        logger.info(f"Starting simulation for feature: {feature}, tagline: {tagline}, price: {price}")\\n        bot_data = generate_survey_data(num_bots, male_percentage, income_range, interests_list)\\n        demand_score = sum(random.randint(60, 90) for _ in bot_data) / len(bot_data)\\n        response_data = {\\n            "Feature": feature,\\n            "Tagline": tagline,\\n            "Price": float(price),\\n            "Demand Score": demand_score\\n        }\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation.log"})\\n        autogen.runtime_logging.log_event(name="demand_simulation", event=response_data, source="demand_meter")\\n        autogen.runtime_logging.stop()\\n        progress.progress((current_index + 1) / total_combinations)\\n        logger.info(f"Simulation successful for feature: {feature}, tagline: {tagline}, price: {price}")\\n        return response_data\\n    except Exception as e:\\n        error_data = {"Feature": feature, "Tagline": tagline, "Price": price, "Error": str(e)}\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation_errors.log"})\\n        autogen.runtime_logging.log_event(name="demand_simulation_error", event=error_data, source="demand_meter")\\n        autogen.runtime_logging.stop()\\n        logger.error(f"Error in simulate_demand for feature: {feature}, tagline: {tagline}, price: {price} - {str(e)}")\\n        return None\\n\\ndef process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress):\\n    results = []\\n    total_combinations = len(combinations)\\n    for current_index, (feature, tagline, price) in enumerate(combinations):\\n        result = simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index)\\n        if result:\\n            results.append(result)\\n        progress.progress((current_index + 1) / total_combinations)\\n    if not results:\\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "process_simulation_errors.log"})\\n        autogen.runtime_logging.log_event(name="process_simulation_error", event={"Error": "No valid results returned"}, source="demand_meter")\\n        autogen.runtime_logging.stop()\\n        logger.warning("No valid results returned in process_simulation.")\\n    return pd.DataFrame(results)\\n\\ndef update_progress(progress, value):\\n    blocks = int(value / 5)\\n    blocks_html = "".join(["<div class=\\\'progress-block\\\'></div>" for _ in range(blocks)])\\n    progress.markdown(f"""\\n        <div class="progress-container">\\n            <div class="progress-bar" style="width:{value}%;">\\n                <div class="progress-blocks">{blocks_html}</div>\\n            </div>\\n        </div>\\n        <div class="progress-text">{value}%</div>\\n    """, unsafe_allow_html=True)\\n\\ndef generate_insights(assistant, user_proxy, df_dict):\\n    insights_prompt = f"Analyze the demand scores for the following combinations and provide insights:\\\\n{df_dict}"\\n    user_proxy.initiate_chat(assistant, message=insights_prompt)\\n    return assistant.last_message()["content"]\\n\\ndef log_feedback(product_name, feedback):\\n    feedback_data = {"Product Name": product_name, "Feedback": feedback}\\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "user_feedback.log"})\\n    autogen.runtime_logging.log_event(name="user_feedback", event=feedback_data, source="demand_meter")\\n    autogen.runtime_logging.stop()\\n\\ndef log_error(section, error_message):\\n    error_data = {"Section": section, "Error": error_message}\\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "app_errors.log"})\\n    autogen.runtime_logging.log_event(name="app_error", event=error_data, source="omnivia_survey_platform")\\n    autogen.runtime_logging.stop()\\n    logger.error(f"Error in {section}: {error_message}")\\n\\n--- End of modules/utils.py ---\\n\\n\'}', 'repo_document': 'Repository Summary:\n\nThe GitHub repository brewedindices/omniviastreamlit provides a web application using the Streamlit framework. The project includes detailed setup instructions, development guidelines, and key features, making it a robust starting point for building modern web applications.\n\nKey Features:\n- **Streamlit**: Framework for building interactive web applications in Python.\n- **Python**: Programming language used for application logic.\n- **Pandas**: Data manipulation and analysis library.\n- **NumPy**: Library for numerical computations.\n\nInstructions:\n1. **Clone the Repository**: `git clone https://github.com/brewedindices/omniviastreamlit`\n2. **Setup Environment**: Follow the detailed setup instructions provided in the repository to configure the necessary dependencies and environment variables.\n3. **Run the Application**: Use pip to install dependencies and start the application.\n\n\nTable of Contents:\nDirectory: .\n  - .gitignore\n  - replit.nix\n  - config.toml\n  - .breakpoints\n  - pyproject.toml\n  - poetry.lock\n  - .replit\n  - app.py\n  - loading_screen.css\n  - example.py\nDirectory: modules\n  - modules/dashboard.py\n  - modules/visualizations.py\n  - modules/narrative.py\n  - modules/live_polling.py\n  - modules/price_sensitivity.py\n  - modules/old.py\n  - modules/analytics.py\n  - modules/__init__.py\n  - modules/results.py\n  - modules/personas.py\n  - modules/questions.py\n  - modules/utils.py\n\n\n--- Directory: . ---\n--- Start of .gitignore ---\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don\'t work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n--- End of .gitignore ---\n\n--- Start of replit.nix ---\n{pkgs}: {\n  deps = [\n    pkgs.glibcLocales\n  ];\n}\n\n--- End of replit.nix ---\n\n--- Start of config.toml ---\n[theme]\nbase="dark"\nprimaryColor="#FFC300"\nbackgroundColor="#1E1E1E"\nsecondaryBackgroundColor="#333333"\ntextColor="#D4D4D4"\nfont="sans serif"\n\n--- End of config.toml ---\n\n--- Start of .breakpoints ---\n{\n  "files": {}\n}\n--- End of .breakpoints ---\n\n--- Start of pyproject.toml ---\n[tool.poetry]\nname = "python-template"\nversion = "0.1.0"\ndescription = ""\nauthors = ["Your Name <you@example.com>"]\n\n[tool.poetry.dependencies]\npython = ">=3.10.0,<3.11"\nstreamlit = "^1.27.2"\nmodules = "^1.0.0"\nrequests = "^2.32.3"\nstreamlit-option-menu = "^0.3.13"\npymongo = "^4.7.3"\nnumpy = "^2.0.0"\npandas = "^2.2.2"\nplotly = "^5.22.0"\n\n[tool.pyright]\n# https://github.com/microsoft/pyright/blob/main/docs/configuration.md\nuseLibraryCodeForTypes = true\nexclude = [".cache"]\n\n[tool.ruff]\n# https://beta.ruff.rs/docs/configuration/\nselect = [\'E\', \'W\', \'F\', \'I\', \'B\', \'C4\', \'ARG\', \'SIM\']\nignore = [\'W291\', \'W292\', \'W293\']\n\n[build-system]\nrequires = ["poetry-core>=1.0.0"]\nbuild-backend = "poetry.core.masonry.api"\n--- End of pyproject.toml ---\n\n--- Start of poetry.lock ---\n# This file is automatically @generated by Poetry 1.5.4 and should not be changed by hand.\n\n[[package]]\nname = "altair"\nversion = "5.1.2"\ndescription = "Vega-Altair: A declarative statistical visualization library for Python."\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "altair-5.1.2-py3-none-any.whl", hash = "sha256:7219708ec33c152e53145485040f428954ed15fd09b2a2d89e543e6d111dae7f"},\n    {file = "altair-5.1.2.tar.gz", hash = "sha256:e5f52a71853a607c61ce93ad4a414b3d486cd0d46ac597a24ae8bd1ac99dd460"},\n]\n\n[package.dependencies]\njinja2 = "*"\njsonschema = ">=3.0"\nnumpy = "*"\npackaging = "*"\npandas = ">=0.25"\ntoolz = "*"\ntyping-extensions = {version = ">=4.0.1", markers = "python_version < \\"3.11\\""}\n\n[package.extras]\ndev = ["anywidget", "black (<24)", "hatch", "ipython", "m2r", "mypy", "pandas-stubs", "pyarrow (>=11)", "pytest", "pytest-cov", "ruff", "types-jsonschema", "types-setuptools", "vega-datasets", "vegafusion[embed] (>=1.4.0)", "vl-convert-python (>=0.14.0)"]\ndoc = ["docutils", "geopandas", "jinja2", "myst-parser", "numpydoc", "pillow (>=9,<10)", "pydata-sphinx-theme", "scipy", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinxext-altair"]\n\n[[package]]\nname = "attrs"\nversion = "23.1.0"\ndescription = "Classes Without Boilerplate"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "attrs-23.1.0-py3-none-any.whl", hash = "sha256:1f28b4522cdc2fb4256ac1a020c78acf9cba2c6b461ccd2c126f3aa8e8335d04"},\n    {file = "attrs-23.1.0.tar.gz", hash = "sha256:6279836d581513a26f1bf235f9acd333bc9115683f14f7e8fae46c98fc50e015"},\n]\n\n[package.extras]\ncov = ["attrs[tests]", "coverage[toml] (>=5.3)"]\ndev = ["attrs[docs,tests]", "pre-commit"]\ndocs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]\ntests = ["attrs[tests-no-zope]", "zope-interface"]\ntests-no-zope = ["cloudpickle", "hypothesis", "mypy (>=1.1.1)", "pympler", "pytest (>=4.3.0)", "pytest-mypy-plugins", "pytest-xdist[psutil]"]\n\n[[package]]\nname = "blinker"\nversion = "1.6.3"\ndescription = "Fast, simple object-to-object and broadcast signaling"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "blinker-1.6.3-py3-none-any.whl", hash = "sha256:296320d6c28b006eb5e32d4712202dbcdcbf5dc482da298c2f44881c43884aaa"},\n    {file = "blinker-1.6.3.tar.gz", hash = "sha256:152090d27c1c5c722ee7e48504b02d76502811ce02e1523553b4cf8c8b3d3a8d"},\n]\n\n[[package]]\nname = "cachetools"\nversion = "5.3.1"\ndescription = "Extensible memoizing collections and decorators"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "cachetools-5.3.1-py3-none-any.whl", hash = "sha256:95ef631eeaea14ba2e36f06437f36463aac3a096799e876ee55e5cdccb102590"},\n    {file = "cachetools-5.3.1.tar.gz", hash = "sha256:dce83f2d9b4e1f732a8cd44af8e8fab2dbe46201467fc98b3ef8f269092bf62b"},\n]\n\n[[package]]\nname = "certifi"\nversion = "2023.7.22"\ndescription = "Python package for providing Mozilla\'s CA Bundle."\noptional = false\npython-versions = ">=3.6"\nfiles = [\n    {file = "certifi-2023.7.22-py3-none-any.whl", hash = "sha256:92d6037539857d8206b8f6ae472e8b77db8058fec5937a1ef3f54304089edbb9"},\n    {file = "certifi-2023.7.22.tar.gz", hash = "sha256:539cc1d13202e33ca466e88b2807e29f4c13049d6d87031a3c110744495cb082"},\n]\n\n[[package]]\nname = "charset-normalizer"\nversion = "3.3.0"\ndescription = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."\noptional = false\npython-versions = ">=3.7.0"\nfiles = [\n    {file = "charset-normalizer-3.3.0.tar.gz", hash = "sha256:63563193aec44bce707e0c5ca64ff69fa72ed7cf34ce6e11d5127555756fd2f6"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:effe5406c9bd748a871dbcaf3ac69167c38d72db8c9baf3ff954c344f31c4cbe"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:4162918ef3098851fcd8a628bf9b6a98d10c380725df9e04caf5ca6dd48c847a"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:0570d21da019941634a531444364f2482e8db0b3425fcd5ac0c36565a64142c8"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5707a746c6083a3a74b46b3a631d78d129edab06195a92a8ece755aac25a3f3d"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:278c296c6f96fa686d74eb449ea1697f3c03dc28b75f873b65b5201806346a69"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:a4b71f4d1765639372a3b32d2638197f5cd5221b19531f9245fcc9ee62d38f56"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f5969baeaea61c97efa706b9b107dcba02784b1601c74ac84f2a532ea079403e"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a3f93dab657839dfa61025056606600a11d0b696d79386f974e459a3fbc568ec"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:db756e48f9c5c607b5e33dd36b1d5872d0422e960145b08ab0ec7fd420e9d649"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:232ac332403e37e4a03d209a3f92ed9071f7d3dbda70e2a5e9cff1c4ba9f0678"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_ppc64le.whl", hash = "sha256:e5c1502d4ace69a179305abb3f0bb6141cbe4714bc9b31d427329a95acfc8bdd"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_s390x.whl", hash = "sha256:2502dd2a736c879c0f0d3e2161e74d9907231e25d35794584b1ca5284e43f596"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:23e8565ab7ff33218530bc817922fae827420f143479b753104ab801145b1d5b"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win32.whl", hash = "sha256:1872d01ac8c618a8da634e232f24793883d6e456a66593135aeafe3784b0848d"},\n    {file = "charset_normalizer-3.3.0-cp310-cp310-win_amd64.whl", hash = "sha256:557b21a44ceac6c6b9773bc65aa1b4cc3e248a5ad2f5b914b91579a32e22204d"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:d7eff0f27edc5afa9e405f7165f85a6d782d308f3b6b9d96016c010597958e63"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:6a685067d05e46641d5d1623d7c7fdf15a357546cbb2f71b0ebde91b175ffc3e"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:0d3d5b7db9ed8a2b11a774db2bbea7ba1884430a205dbd54a32d61d7c2a190fa"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2935ffc78db9645cb2086c2f8f4cfd23d9b73cc0dc80334bc30aac6f03f68f8c"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:9fe359b2e3a7729010060fbca442ca225280c16e923b37db0e955ac2a2b72a05"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:380c4bde80bce25c6e4f77b19386f5ec9db230df9f2f2ac1e5ad7af2caa70459"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0d1e3732768fecb052d90d62b220af62ead5748ac51ef61e7b32c266cac9293"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1b2919306936ac6efb3aed1fbf81039f7087ddadb3160882a57ee2ff74fd2382"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:f8888e31e3a85943743f8fc15e71536bda1c81d5aa36d014a3c0c44481d7db6e"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:82eb849f085624f6a607538ee7b83a6d8126df6d2f7d3b319cb837b289123078"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_ppc64le.whl", hash = "sha256:7b8b8bf1189b3ba9b8de5c8db4d541b406611a71a955bbbd7385bbc45fcb786c"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_s390x.whl", hash = "sha256:5adf257bd58c1b8632046bbe43ee38c04e1038e9d37de9c57a94d6bd6ce5da34"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:c350354efb159b8767a6244c166f66e67506e06c8924ed74669b2c70bc8735b1"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win32.whl", hash = "sha256:02af06682e3590ab952599fbadac535ede5d60d78848e555aa58d0c0abbde786"},\n    {file = "charset_normalizer-3.3.0-cp311-cp311-win_amd64.whl", hash = "sha256:86d1f65ac145e2c9ed71d8ffb1905e9bba3a91ae29ba55b4c46ae6fc31d7c0d4"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:3b447982ad46348c02cb90d230b75ac34e9886273df3a93eec0539308a6296d7"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:abf0d9f45ea5fb95051c8bfe43cb40cda383772f7e5023a83cc481ca2604d74e"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:b09719a17a2301178fac4470d54b1680b18a5048b481cb8890e1ef820cb80455"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b3d9b48ee6e3967b7901c052b670c7dda6deb812c309439adaffdec55c6d7b78"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:edfe077ab09442d4ef3c52cb1f9dab89bff02f4524afc0acf2d46be17dc479f5"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3debd1150027933210c2fc321527c2299118aa929c2f5a0a80ab6953e3bd1908"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:86f63face3a527284f7bb8a9d4f78988e3c06823f7bea2bd6f0e0e9298ca0403"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:24817cb02cbef7cd499f7c9a2735286b4782bd47a5b3516a0e84c50eab44b98e"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:c71f16da1ed8949774ef79f4a0260d28b83b3a50c6576f8f4f0288d109777989"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:9cf3126b85822c4e53aa28c7ec9869b924d6fcfb76e77a45c44b83d91afd74f9"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_ppc64le.whl", hash = "sha256:b3b2316b25644b23b54a6f6401074cebcecd1244c0b8e80111c9a3f1c8e83d65"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_s390x.whl", hash = "sha256:03680bb39035fbcffe828eae9c3f8afc0428c91d38e7d61aa992ef7a59fb120e"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:4cc152c5dd831641e995764f9f0b6589519f6f5123258ccaca8c6d34572fefa8"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win32.whl", hash = "sha256:b8f3307af845803fb0b060ab76cf6dd3a13adc15b6b451f54281d25911eb92df"},\n    {file = "charset_normalizer-3.3.0-cp312-cp312-win_amd64.whl", hash = "sha256:8eaf82f0eccd1505cf39a45a6bd0a8cf1c70dcfc30dba338207a969d91b965c0"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:dc45229747b67ffc441b3de2f3ae5e62877a282ea828a5bdb67883c4ee4a8810"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2f4a0033ce9a76e391542c182f0d48d084855b5fcba5010f707c8e8c34663d77"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ada214c6fa40f8d800e575de6b91a40d0548139e5dc457d2ebb61470abf50186"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b1121de0e9d6e6ca08289583d7491e7fcb18a439305b34a30b20d8215922d43c"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1063da2c85b95f2d1a430f1c33b55c9c17ffaf5e612e10aeaad641c55a9e2b9d"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:70f1d09c0d7748b73290b29219e854b3207aea922f839437870d8cc2168e31cc"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:250c9eb0f4600361dd80d46112213dff2286231d92d3e52af1e5a6083d10cad9"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:750b446b2ffce1739e8578576092179160f6d26bd5e23eb1789c4d64d5af7dc7"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_ppc64le.whl", hash = "sha256:fc52b79d83a3fe3a360902d3f5d79073a993597d48114c29485e9431092905d8"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_s390x.whl", hash = "sha256:588245972aca710b5b68802c8cad9edaa98589b1b42ad2b53accd6910dad3545"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:e39c7eb31e3f5b1f88caff88bcff1b7f8334975b46f6ac6e9fc725d829bc35d4"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win32.whl", hash = "sha256:abecce40dfebbfa6abf8e324e1860092eeca6f7375c8c4e655a8afb61af58f2c"},\n    {file = "charset_normalizer-3.3.0-cp37-cp37m-win_amd64.whl", hash = "sha256:24a91a981f185721542a0b7c92e9054b7ab4fea0508a795846bc5b0abf8118d4"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:67b8cc9574bb518ec76dc8e705d4c39ae78bb96237cb533edac149352c1f39fe"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:ac71b2977fb90c35d41c9453116e283fac47bb9096ad917b8819ca8b943abecd"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:3ae38d325b512f63f8da31f826e6cb6c367336f95e418137286ba362925c877e"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:542da1178c1c6af8873e143910e2269add130a299c9106eef2594e15dae5e482"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:30a85aed0b864ac88309b7d94be09f6046c834ef60762a8833b660139cfbad13"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aae32c93e0f64469f74ccc730a7cb21c7610af3a775157e50bbd38f816536b38"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:15b26ddf78d57f1d143bdf32e820fd8935d36abe8a25eb9ec0b5a71c82eb3895"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7f5d10bae5d78e4551b7be7a9b29643a95aded9d0f602aa2ba584f0388e7a557"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:249c6470a2b60935bafd1d1d13cd613f8cd8388d53461c67397ee6a0f5dce741"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:c5a74c359b2d47d26cdbbc7845e9662d6b08a1e915eb015d044729e92e7050b7"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_ppc64le.whl", hash = "sha256:b5bcf60a228acae568e9911f410f9d9e0d43197d030ae5799e20dca8df588287"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_s390x.whl", hash = "sha256:187d18082694a29005ba2944c882344b6748d5be69e3a89bf3cc9d878e548d5a"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:81bf654678e575403736b85ba3a7867e31c2c30a69bc57fe88e3ace52fb17b89"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win32.whl", hash = "sha256:85a32721ddde63c9df9ebb0d2045b9691d9750cb139c161c80e500d210f5e26e"},\n    {file = "charset_normalizer-3.3.0-cp38-cp38-win_amd64.whl", hash = "sha256:468d2a840567b13a590e67dd276c570f8de00ed767ecc611994c301d0f8c014f"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:e0fc42822278451bc13a2e8626cf2218ba570f27856b536e00cfa53099724828"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:09c77f964f351a7369cc343911e0df63e762e42bac24cd7d18525961c81754f4"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:12ebea541c44fdc88ccb794a13fe861cc5e35d64ed689513a5c03d05b53b7c82"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:805dfea4ca10411a5296bcc75638017215a93ffb584c9e344731eef0dcfb026a"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:96c2b49eb6a72c0e4991d62406e365d87067ca14c1a729a870d22354e6f68115"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:aaf7b34c5bc56b38c931a54f7952f1ff0ae77a2e82496583b247f7c969eb1479"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:619d1c96099be5823db34fe89e2582b336b5b074a7f47f819d6b3a57ff7bdb86"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:a0ac5e7015a5920cfce654c06618ec40c33e12801711da6b4258af59a8eff00a"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:93aa7eef6ee71c629b51ef873991d6911b906d7312c6e8e99790c0f33c576f89"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7966951325782121e67c81299a031f4c115615e68046f79b85856b86ebffc4cd"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_ppc64le.whl", hash = "sha256:02673e456dc5ab13659f85196c534dc596d4ef260e4d86e856c3b2773ce09843"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_s390x.whl", hash = "sha256:c2af80fb58f0f24b3f3adcb9148e6203fa67dd3f61c4af146ecad033024dde43"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:153e7b6e724761741e0974fc4dcd406d35ba70b92bfe3fedcb497226c93b9da7"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win32.whl", hash = "sha256:d47ecf253780c90ee181d4d871cd655a789da937454045b17b5798da9393901a"},\n    {file = "charset_normalizer-3.3.0-cp39-cp39-win_amd64.whl", hash = "sha256:d97d85fa63f315a8bdaba2af9a6a686e0eceab77b3089af45133252618e70884"},\n    {file = "charset_normalizer-3.3.0-py3-none-any.whl", hash = "sha256:e46cd37076971c1040fc8c41273a8b3e2c624ce4f2be3f5dfcb7a430c1d3acc2"},\n]\n\n[[package]]\nname = "click"\nversion = "8.1.7"\ndescription = "Composable command line interface toolkit"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "click-8.1.7-py3-none-any.whl", hash = "sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28"},\n    {file = "click-8.1.7.tar.gz", hash = "sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de"},\n]\n\n[package.dependencies]\ncolorama = {version = "*", markers = "platform_system == \\"Windows\\""}\n\n[[package]]\nname = "colorama"\nversion = "0.4.6"\ndescription = "Cross-platform colored terminal text."\noptional = false\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"\nfiles = [\n    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},\n    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},\n]\n\n[[package]]\nname = "dnspython"\nversion = "2.6.1"\ndescription = "DNS toolkit"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "dnspython-2.6.1-py3-none-any.whl", hash = "sha256:5ef3b9680161f6fa89daf8ad451b5f1a33b18ae8a1c6778cdf4b43f08c0a6e50"},\n    {file = "dnspython-2.6.1.tar.gz", hash = "sha256:e8f0f9c23a7b7cb99ded64e6c3a6f3e701d78f50c55e002b839dea7225cff7cc"},\n]\n\n[package.extras]\ndev = ["black (>=23.1.0)", "coverage (>=7.0)", "flake8 (>=7)", "mypy (>=1.8)", "pylint (>=3)", "pytest (>=7.4)", "pytest-cov (>=4.1.0)", "sphinx (>=7.2.0)", "twine (>=4.0.0)", "wheel (>=0.42.0)"]\ndnssec = ["cryptography (>=41)"]\ndoh = ["h2 (>=4.1.0)", "httpcore (>=1.0.0)", "httpx (>=0.26.0)"]\ndoq = ["aioquic (>=0.9.25)"]\nidna = ["idna (>=3.6)"]\ntrio = ["trio (>=0.23)"]\nwmi = ["wmi (>=1.5.1)"]\n\n[[package]]\nname = "gitdb"\nversion = "4.0.10"\ndescription = "Git Object Database"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "gitdb-4.0.10-py3-none-any.whl", hash = "sha256:c286cf298426064079ed96a9e4a9d39e7f3e9bf15ba60701e95f5492f28415c7"},\n    {file = "gitdb-4.0.10.tar.gz", hash = "sha256:6eb990b69df4e15bad899ea868dc46572c3f75339735663b81de79b06f17eb9a"},\n]\n\n[package.dependencies]\nsmmap = ">=3.0.1,<6"\n\n[[package]]\nname = "gitpython"\nversion = "3.1.37"\ndescription = "GitPython is a Python library used to interact with Git repositories"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "GitPython-3.1.37-py3-none-any.whl", hash = "sha256:5f4c4187de49616d710a77e98ddf17b4782060a1788df441846bddefbb89ab33"},\n    {file = "GitPython-3.1.37.tar.gz", hash = "sha256:f9b9ddc0761c125d5780eab2d64be4873fc6817c2899cbcb34b02344bdc7bc54"},\n]\n\n[package.dependencies]\ngitdb = ">=4.0.1,<5"\n\n[package.extras]\ntest = ["black", "coverage[toml]", "ddt (>=1.1.1,!=1.4.3)", "mypy", "pre-commit", "pytest", "pytest-cov", "pytest-sugar"]\n\n[[package]]\nname = "idna"\nversion = "3.4"\ndescription = "Internationalized Domain Names in Applications (IDNA)"\noptional = false\npython-versions = ">=3.5"\nfiles = [\n    {file = "idna-3.4-py3-none-any.whl", hash = "sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2"},\n    {file = "idna-3.4.tar.gz", hash = "sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4"},\n]\n\n[[package]]\nname = "jinja2"\nversion = "3.1.2"\ndescription = "A very fast and expressive template engine."\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "Jinja2-3.1.2-py3-none-any.whl", hash = "sha256:6088930bfe239f0e6710546ab9c19c9ef35e29792895fed6e6e31a023a182a61"},\n    {file = "Jinja2-3.1.2.tar.gz", hash = "sha256:31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852"},\n]\n\n[package.dependencies]\nMarkupSafe = ">=2.0"\n\n[package.extras]\ni18n = ["Babel (>=2.7)"]\n\n[[package]]\nname = "jsonschema"\nversion = "4.19.1"\ndescription = "An implementation of JSON Schema validation for Python"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "jsonschema-4.19.1-py3-none-any.whl", hash = "sha256:cd5f1f9ed9444e554b38ba003af06c0a8c2868131e56bfbef0550fb450c0330e"},\n    {file = "jsonschema-4.19.1.tar.gz", hash = "sha256:ec84cc37cfa703ef7cd4928db24f9cb31428a5d0fa77747b8b51a847458e0bbf"},\n]\n\n[package.dependencies]\nattrs = ">=22.2.0"\njsonschema-specifications = ">=2023.03.6"\nreferencing = ">=0.28.4"\nrpds-py = ">=0.7.1"\n\n[package.extras]\nformat = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]\nformat-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]\n\n[[package]]\nname = "jsonschema-specifications"\nversion = "2023.7.1"\ndescription = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "jsonschema_specifications-2023.7.1-py3-none-any.whl", hash = "sha256:05adf340b659828a004220a9613be00fa3f223f2b82002e273dee62fd50524b1"},\n    {file = "jsonschema_specifications-2023.7.1.tar.gz", hash = "sha256:c91a50404e88a1f6ba40636778e2ee08f6e24c5613fe4c53ac24578a5a7f72bb"},\n]\n\n[package.dependencies]\nreferencing = ">=0.28.0"\n\n[[package]]\nname = "markdown-it-py"\nversion = "3.0.0"\ndescription = "Python port of markdown-it. Markdown parsing, done right!"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "markdown-it-py-3.0.0.tar.gz", hash = "sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb"},\n    {file = "markdown_it_py-3.0.0-py3-none-any.whl", hash = "sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1"},\n]\n\n[package.dependencies]\nmdurl = ">=0.1,<1.0"\n\n[package.extras]\nbenchmarking = ["psutil", "pytest", "pytest-benchmark"]\ncode-style = ["pre-commit (>=3.0,<4.0)"]\ncompare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]\nlinkify = ["linkify-it-py (>=1,<3)"]\nplugins = ["mdit-py-plugins"]\nprofiling = ["gprof2dot"]\nrtd = ["jupyter_sphinx", "mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx_book_theme"]\ntesting = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]\n\n[[package]]\nname = "markupsafe"\nversion = "2.1.3"\ndescription = "Safely add untrusted strings to HTML/XML markup."\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:cd0f502fe016460680cd20aaa5a76d241d6f35a1c3350c474bac1273803893fa"},\n    {file = "MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e09031c87a1e51556fdcb46e5bd4f59dfb743061cf93c4d6831bf894f125eb57"},\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68e78619a61ecf91e76aa3e6e8e33fc4894a2bebe93410754bd28fce0a8a4f9f"},\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:65c1a9bcdadc6c28eecee2c119465aebff8f7a584dd719facdd9e825ec61ab52"},\n    {file = "MarkupSafe-2.1.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:525808b8019e36eb524b8c68acdd63a37e75714eac50e988180b169d64480a00"},\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:962f82a3086483f5e5f64dbad880d31038b698494799b097bc59c2edf392fce6"},\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:aa7bd130efab1c280bed0f45501b7c8795f9fdbeb02e965371bbef3523627779"},\n    {file = "MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:c9c804664ebe8f83a211cace637506669e7890fec1b4195b505c214e50dd4eb7"},\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win32.whl", hash = "sha256:10bbfe99883db80bdbaff2dcf681dfc6533a614f700da1287707e8a5d78a8431"},\n    {file = "MarkupSafe-2.1.3-cp310-cp310-win_amd64.whl", hash = "sha256:1577735524cdad32f9f694208aa75e422adba74f1baee7551620e43a3141f559"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:ad9e82fb8f09ade1c3e1b996a6337afac2b8b9e365f926f5a61aacc71adc5b3c"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:3c0fae6c3be832a0a0473ac912810b2877c8cb9d76ca48de1ed31e1c68386575"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b076b6226fb84157e3f7c971a47ff3a679d837cf338547532ab866c57930dbee"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:bfce63a9e7834b12b87c64d6b155fdd9b3b96191b6bd334bf37db7ff1fe457f2"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:338ae27d6b8745585f87218a3f23f1512dbf52c26c28e322dbe54bcede54ccb9"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:e4dd52d80b8c83fdce44e12478ad2e85c64ea965e75d66dbeafb0a3e77308fcc"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:df0be2b576a7abbf737b1575f048c23fb1d769f267ec4358296f31c2479db8f9"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:5bbe06f8eeafd38e5d0a4894ffec89378b6c6a625ff57e3028921f8ff59318ac"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win32.whl", hash = "sha256:dd15ff04ffd7e05ffcb7fe79f1b98041b8ea30ae9234aed2a9168b5797c3effb"},\n    {file = "MarkupSafe-2.1.3-cp311-cp311-win_amd64.whl", hash = "sha256:134da1eca9ec0ae528110ccc9e48041e0828d79f24121a1a146161103c76e686"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:f698de3fd0c4e6972b92290a45bd9b1536bffe8c6759c62471efaa8acb4c37bc"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:aa57bd9cf8ae831a362185ee444e15a93ecb2e344c8e52e4d721ea3ab6ef1823"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:ffcc3f7c66b5f5b7931a5aa68fc9cecc51e685ef90282f4a82f0f5e9b704ad11"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47d4f1c5f80fc62fdd7777d0d40a2e9dda0a05883ab11374334f6c4de38adffd"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:1f67c7038d560d92149c060157d623c542173016c4babc0c1913cca0564b9939"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:9aad3c1755095ce347e26488214ef77e0485a3c34a50c5a5e2471dff60b9dd9c"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:14ff806850827afd6b07a5f32bd917fb7f45b046ba40c57abdb636674a8b559c"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:8f9293864fe09b8149f0cc42ce56e3f0e54de883a9de90cd427f191c346eb2e1"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win32.whl", hash = "sha256:715d3562f79d540f251b99ebd6d8baa547118974341db04f5ad06d5ea3eb8007"},\n    {file = "MarkupSafe-2.1.3-cp312-cp312-win_amd64.whl", hash = "sha256:1b8dd8c3fd14349433c79fa8abeb573a55fc0fdd769133baac1f5e07abf54aeb"},\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:8e254ae696c88d98da6555f5ace2279cf7cd5b3f52be2b5cf97feafe883b58d2"},\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cb0932dc158471523c9637e807d9bfb93e06a95cbf010f1a38b98623b929ef2b"},\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9402b03f1a1b4dc4c19845e5c749e3ab82d5078d16a2a4c2cd2df62d57bb0707"},\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:ca379055a47383d02a5400cb0d110cef0a776fc644cda797db0c5696cfd7e18e"},\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:b7ff0f54cb4ff66dd38bebd335a38e2c22c41a8ee45aa608efc890ac3e3931bc"},\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:c011a4149cfbcf9f03994ec2edffcb8b1dc2d2aede7ca243746df97a5d41ce48"},\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:56d9f2ecac662ca1611d183feb03a3fa4406469dafe241673d521dd5ae92a155"},\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win32.whl", hash = "sha256:8758846a7e80910096950b67071243da3e5a20ed2546e6392603c096778d48e0"},\n    {file = "MarkupSafe-2.1.3-cp37-cp37m-win_amd64.whl", hash = "sha256:787003c0ddb00500e49a10f2844fac87aa6ce977b90b0feaaf9de23c22508b24"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:2ef12179d3a291be237280175b542c07a36e7f60718296278d8593d21ca937d4"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:2c1b19b3aaacc6e57b7e25710ff571c24d6c3613a45e905b1fde04d691b98ee0"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8afafd99945ead6e075b973fefa56379c5b5c53fd8937dad92c662da5d8fd5ee"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8c41976a29d078bb235fea9b2ecd3da465df42a562910f9022f1a03107bd02be"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d080e0a5eb2529460b30190fcfcc4199bd7f827663f858a226a81bc27beaa97e"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:69c0f17e9f5a7afdf2cc9fb2d1ce6aabdb3bafb7f38017c0b77862bcec2bbad8"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:504b320cd4b7eff6f968eddf81127112db685e81f7e36e75f9f84f0df46041c3"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:42de32b22b6b804f42c5d98be4f7e5e977ecdd9ee9b660fda1a3edf03b11792d"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win32.whl", hash = "sha256:ceb01949af7121f9fc39f7d27f91be8546f3fb112c608bc4029aef0bab86a2a5"},\n    {file = "MarkupSafe-2.1.3-cp38-cp38-win_amd64.whl", hash = "sha256:1b40069d487e7edb2676d3fbdb2b0829ffa2cd63a2ec26c4938b2d34391b4ecc"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:8023faf4e01efadfa183e863fefde0046de576c6f14659e8782065bcece22198"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:6b2b56950d93e41f33b4223ead100ea0fe11f8e6ee5f641eb753ce4b77a7042b"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9dcdfd0eaf283af041973bff14a2e143b8bd64e069f4c383416ecd79a81aab58"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:05fb21170423db021895e1ea1e1f3ab3adb85d1c2333cbc2310f2a26bc77272e"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:282c2cb35b5b673bbcadb33a585408104df04f14b2d9b01d4c345a3b92861c2c"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:ab4a0df41e7c16a1392727727e7998a467472d0ad65f3ad5e6e765015df08636"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7ef3cb2ebbf91e330e3bb937efada0edd9003683db6b57bb108c4001f37a02ea"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:0a4e4a1aff6c7ac4cd55792abf96c915634c2b97e3cc1c7129578aa68ebd754e"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win32.whl", hash = "sha256:fec21693218efe39aa7f8599346e90c705afa52c5b31ae019b2e57e8f6542bb2"},\n    {file = "MarkupSafe-2.1.3-cp39-cp39-win_amd64.whl", hash = "sha256:3fd4abcb888d15a94f32b75d8fd18ee162ca0c064f35b11134be77050296d6ba"},\n    {file = "MarkupSafe-2.1.3.tar.gz", hash = "sha256:af598ed32d6ae86f1b747b82783958b1a4ab8f617b06fe68795c7f026abbdcad"},\n]\n\n[[package]]\nname = "mdurl"\nversion = "0.1.2"\ndescription = "Markdown URL utilities"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "mdurl-0.1.2-py3-none-any.whl", hash = "sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8"},\n    {file = "mdurl-0.1.2.tar.gz", hash = "sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba"},\n]\n\n[[package]]\nname = "modules"\nversion = "1.0.0"\ndescription = "Simple test on modules"\noptional = false\npython-versions = "*"\nfiles = [\n    {file = "modules-1.0.0.tar.gz", hash = "sha256:5146b31b76e9899f95c19e3654c6aee2799694b912ca00faec6798725486934b"},\n]\n\n[[package]]\nname = "numpy"\nversion = "2.0.0"\ndescription = "Fundamental package for array computing in Python"\noptional = false\npython-versions = ">=3.9"\nfiles = [\n    {file = "numpy-2.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:04494f6ec467ccb5369d1808570ae55f6ed9b5809d7f035059000a37b8d7e86f"},\n    {file = "numpy-2.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:2635dbd200c2d6faf2ef9a0d04f0ecc6b13b3cad54f7c67c61155138835515d2"},\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_arm64.whl", hash = "sha256:0a43f0974d501842866cc83471bdb0116ba0dffdbaac33ec05e6afed5b615238"},\n    {file = "numpy-2.0.0-cp310-cp310-macosx_14_0_x86_64.whl", hash = "sha256:8d83bb187fb647643bd56e1ae43f273c7f4dbcdf94550d7938cfc32566756514"},\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:79e843d186c8fb1b102bef3e2bc35ef81160ffef3194646a7fdd6a73c6b97196"},\n    {file = "numpy-2.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d7696c615765091cc5093f76fd1fa069870304beaccfd58b5dcc69e55ef49c1"},\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:b4c76e3d4c56f145d41b7b6751255feefae92edbc9a61e1758a98204200f30fc"},\n    {file = "numpy-2.0.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:acd3a644e4807e73b4e1867b769fbf1ce8c5d80e7caaef0d90dcdc640dfc9787"},\n    {file = "numpy-2.0.0-cp310-cp310-win32.whl", hash = "sha256:cee6cc0584f71adefe2c908856ccc98702baf95ff80092e4ca46061538a2ba98"},\n    {file = "numpy-2.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:ed08d2703b5972ec736451b818c2eb9da80d66c3e84aed1deeb0c345fefe461b"},\n    {file = "numpy-2.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:ad0c86f3455fbd0de6c31a3056eb822fc939f81b1618f10ff3406971893b62a5"},\n    {file = "numpy-2.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:e7f387600d424f91576af20518334df3d97bc76a300a755f9a8d6e4f5cadd289"},\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_arm64.whl", hash = "sha256:34f003cb88b1ba38cb9a9a4a3161c1604973d7f9d5552c38bc2f04f829536609"},\n    {file = "numpy-2.0.0-cp311-cp311-macosx_14_0_x86_64.whl", hash = "sha256:b6f6a8f45d0313db07d6d1d37bd0b112f887e1369758a5419c0370ba915b3871"},\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5f64641b42b2429f56ee08b4f427a4d2daf916ec59686061de751a55aafa22e4"},\n    {file = "numpy-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:a7039a136017eaa92c1848152827e1424701532ca8e8967fe480fe1569dae581"},\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:46e161722e0f619749d1cd892167039015b2c2817296104487cd03ed4a955995"},\n    {file = "numpy-2.0.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:0e50842b2295ba8414c8c1d9d957083d5dfe9e16828b37de883f51fc53c4016f"},\n    {file = "numpy-2.0.0-cp311-cp311-win32.whl", hash = "sha256:2ce46fd0b8a0c947ae047d222f7136fc4d55538741373107574271bc00e20e8f"},\n    {file = "numpy-2.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:fbd6acc766814ea6443628f4e6751d0da6593dae29c08c0b2606164db026970c"},\n    {file = "numpy-2.0.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:354f373279768fa5a584bac997de6a6c9bc535c482592d7a813bb0c09be6c76f"},\n    {file = "numpy-2.0.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:4d2f62e55a4cd9c58c1d9a1c9edaedcd857a73cb6fda875bf79093f9d9086f85"},\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_arm64.whl", hash = "sha256:1e72728e7501a450288fc8e1f9ebc73d90cfd4671ebbd631f3e7857c39bd16f2"},\n    {file = "numpy-2.0.0-cp312-cp312-macosx_14_0_x86_64.whl", hash = "sha256:84554fc53daa8f6abf8e8a66e076aff6ece62de68523d9f665f32d2fc50fd66e"},\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c73aafd1afca80afecb22718f8700b40ac7cab927b8abab3c3e337d70e10e5a2"},\n    {file = "numpy-2.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:49d9f7d256fbc804391a7f72d4a617302b1afac1112fac19b6c6cec63fe7fe8a"},\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:0ec84b9ba0654f3b962802edc91424331f423dcf5d5f926676e0150789cb3d95"},\n    {file = "numpy-2.0.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:feff59f27338135776f6d4e2ec7aeeac5d5f7a08a83e80869121ef8164b74af9"},\n    {file = "numpy-2.0.0-cp312-cp312-win32.whl", hash = "sha256:c5a59996dc61835133b56a32ebe4ef3740ea5bc19b3983ac60cc32be5a665d54"},\n    {file = "numpy-2.0.0-cp312-cp312-win_amd64.whl", hash = "sha256:a356364941fb0593bb899a1076b92dfa2029f6f5b8ba88a14fd0984aaf76d0df"},\n    {file = "numpy-2.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:e61155fae27570692ad1d327e81c6cf27d535a5d7ef97648a17d922224b216de"},\n    {file = "numpy-2.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:4554eb96f0fd263041baf16cf0881b3f5dafae7a59b1049acb9540c4d57bc8cb"},\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_arm64.whl", hash = "sha256:903703372d46bce88b6920a0cd86c3ad82dae2dbef157b5fc01b70ea1cfc430f"},\n    {file = "numpy-2.0.0-cp39-cp39-macosx_14_0_x86_64.whl", hash = "sha256:3e8e01233d57639b2e30966c63d36fcea099d17c53bf424d77f088b0f4babd86"},\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cde1753efe513705a0c6d28f5884e22bdc30438bf0085c5c486cdaff40cd67a"},\n    {file = "numpy-2.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:821eedb7165ead9eebdb569986968b541f9908979c2da8a4967ecac4439bae3d"},\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:9a1712c015831da583b21c5bfe15e8684137097969c6d22e8316ba66b5baabe4"},\n    {file = "numpy-2.0.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:9c27f0946a3536403efb0e1c28def1ae6730a72cd0d5878db38824855e3afc44"},\n    {file = "numpy-2.0.0-cp39-cp39-win32.whl", hash = "sha256:63b92c512d9dbcc37f9d81b123dec99fdb318ba38c8059afc78086fe73820275"},\n    {file = "numpy-2.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:3f6bed7f840d44c08ebdb73b1825282b801799e325bcbdfa6bc5c370e5aecc65"},\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:9416a5c2e92ace094e9f0082c5fd473502c91651fb896bc17690d6fc475128d6"},\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-macosx_14_0_x86_64.whl", hash = "sha256:17067d097ed036636fa79f6a869ac26df7db1ba22039d962422506640314933a"},\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:38ecb5b0582cd125f67a629072fed6f83562d9dd04d7e03256c9829bdec027ad"},\n    {file = "numpy-2.0.0-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:cef04d068f5fb0518a77857953193b6bb94809a806bd0a14983a8f12ada060c9"},\n    {file = "numpy-2.0.0.tar.gz", hash = "sha256:cf5d1c9e6837f8af9f92b6bd3e86d513cdc11f60fd62185cc49ec7d1aba34864"},\n]\n\n[[package]]\nname = "packaging"\nversion = "23.2"\ndescription = "Core utilities for Python packages"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "packaging-23.2-py3-none-any.whl", hash = "sha256:8c491190033a9af7e1d931d0b5dacc2ef47509b34dd0de67ed209b5203fc88c7"},\n    {file = "packaging-23.2.tar.gz", hash = "sha256:048fb0e9405036518eaaf48a55953c750c11e1a1b68e0dd1a9d62ed0c092cfc5"},\n]\n\n[[package]]\nname = "pandas"\nversion = "2.2.2"\ndescription = "Powerful data structures for data analysis, time series, and statistics"\noptional = false\npython-versions = ">=3.9"\nfiles = [\n    {file = "pandas-2.2.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:90c6fca2acf139569e74e8781709dccb6fe25940488755716d1d354d6bc58bce"},\n    {file = "pandas-2.2.2-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:c7adfc142dac335d8c1e0dcbd37eb8617eac386596eb9e1a1b77791cf2498238"},\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4abfe0be0d7221be4f12552995e58723c7422c80a659da13ca382697de830c08"},\n    {file = "pandas-2.2.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8635c16bf3d99040fdf3ca3db669a7250ddf49c55dc4aa8fe0ae0fa8d6dcc1f0"},\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:40ae1dffb3967a52203105a077415a86044a2bea011b5f321c6aa64b379a3f51"},\n    {file = "pandas-2.2.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:8e5a0b00e1e56a842f922e7fae8ae4077aee4af0acb5ae3622bd4b4c30aedf99"},\n    {file = "pandas-2.2.2-cp310-cp310-win_amd64.whl", hash = "sha256:ddf818e4e6c7c6f4f7c8a12709696d193976b591cc7dc50588d3d1a6b5dc8772"},\n    {file = "pandas-2.2.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:696039430f7a562b74fa45f540aca068ea85fa34c244d0deee539cb6d70aa288"},\n    {file = "pandas-2.2.2-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:8e90497254aacacbc4ea6ae5e7a8cd75629d6ad2b30025a4a8b09aa4faf55151"},\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:58b84b91b0b9f4bafac2a0ac55002280c094dfc6402402332c0913a59654ab2b"},\n    {file = "pandas-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6d2123dc9ad6a814bcdea0f099885276b31b24f7edf40f6cdbc0912672e22eee"},\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:2925720037f06e89af896c70bca73459d7e6a4be96f9de79e2d440bd499fe0db"},\n    {file = "pandas-2.2.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:0cace394b6ea70c01ca1595f839cf193df35d1575986e484ad35c4aeae7266c1"},\n    {file = "pandas-2.2.2-cp311-cp311-win_amd64.whl", hash = "sha256:873d13d177501a28b2756375d59816c365e42ed8417b41665f346289adc68d24"},\n    {file = "pandas-2.2.2-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:9dfde2a0ddef507a631dc9dc4af6a9489d5e2e740e226ad426a05cabfbd7c8ef"},\n    {file = "pandas-2.2.2-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:e9b79011ff7a0f4b1d6da6a61aa1aa604fb312d6647de5bad20013682d1429ce"},\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1cb51fe389360f3b5a4d57dbd2848a5f033350336ca3b340d1c53a1fad33bcad"},\n    {file = "pandas-2.2.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:eee3a87076c0756de40b05c5e9a6069c035ba43e8dd71c379e68cab2c20f16ad"},\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:3e374f59e440d4ab45ca2fffde54b81ac3834cf5ae2cdfa69c90bc03bde04d76"},\n    {file = "pandas-2.2.2-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:43498c0bdb43d55cb162cdc8c06fac328ccb5d2eabe3cadeb3529ae6f0517c32"},\n    {file = "pandas-2.2.2-cp312-cp312-win_amd64.whl", hash = "sha256:d187d355ecec3629624fccb01d104da7d7f391db0311145817525281e2804d23"},\n    {file = "pandas-2.2.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:0ca6377b8fca51815f382bd0b697a0814c8bda55115678cbc94c30aacbb6eff2"},\n    {file = "pandas-2.2.2-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9057e6aa78a584bc93a13f0a9bf7e753a5e9770a30b4d758b8d5f2a62a9433cd"},\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:001910ad31abc7bf06f49dcc903755d2f7f3a9186c0c040b827e522e9cef0863"},\n    {file = "pandas-2.2.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:66b479b0bd07204e37583c191535505410daa8df638fd8e75ae1b383851fe921"},\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:a77e9d1c386196879aa5eb712e77461aaee433e54c68cf253053a73b7e49c33a"},\n    {file = "pandas-2.2.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:92fd6b027924a7e178ac202cfbe25e53368db90d56872d20ffae94b96c7acc57"},\n    {file = "pandas-2.2.2-cp39-cp39-win_amd64.whl", hash = "sha256:640cef9aa381b60e296db324337a554aeeb883ead99dc8f6c18e81a93942f5f4"},\n    {file = "pandas-2.2.2.tar.gz", hash = "sha256:9e79019aba43cb4fda9e4d983f8e88ca0373adbb697ae9c6c43093218de28b54"},\n]\n\n[package.dependencies]\nnumpy = {version = ">=1.22.4", markers = "python_version < \\"3.11\\""}\npython-dateutil = ">=2.8.2"\npytz = ">=2020.1"\ntzdata = ">=2022.7"\n\n[package.extras]\nall = ["PyQt5 (>=5.15.9)", "SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)", "beautifulsoup4 (>=4.11.2)", "bottleneck (>=1.3.6)", "dataframe-api-compat (>=0.1.7)", "fastparquet (>=2022.12.0)", "fsspec (>=2022.11.0)", "gcsfs (>=2022.11.0)", "html5lib (>=1.1)", "hypothesis (>=6.46.1)", "jinja2 (>=3.1.2)", "lxml (>=4.9.2)", "matplotlib (>=3.6.3)", "numba (>=0.56.4)", "numexpr (>=2.8.4)", "odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "pandas-gbq (>=0.19.0)", "psycopg2 (>=2.9.6)", "pyarrow (>=10.0.1)", "pymysql (>=1.0.2)", "pyreadstat (>=1.2.0)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "qtpy (>=2.3.0)", "s3fs (>=2022.11.0)", "scipy (>=1.10.0)", "tables (>=3.8.0)", "tabulate (>=0.9.0)", "xarray (>=2022.12.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)", "zstandard (>=0.19.0)"]\naws = ["s3fs (>=2022.11.0)"]\nclipboard = ["PyQt5 (>=5.15.9)", "qtpy (>=2.3.0)"]\ncompression = ["zstandard (>=0.19.0)"]\ncomputation = ["scipy (>=1.10.0)", "xarray (>=2022.12.0)"]\nconsortium-standard = ["dataframe-api-compat (>=0.1.7)"]\nexcel = ["odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)"]\nfeather = ["pyarrow (>=10.0.1)"]\nfss = ["fsspec (>=2022.11.0)"]\ngcp = ["gcsfs (>=2022.11.0)", "pandas-gbq (>=0.19.0)"]\nhdf5 = ["tables (>=3.8.0)"]\nhtml = ["beautifulsoup4 (>=4.11.2)", "html5lib (>=1.1)", "lxml (>=4.9.2)"]\nmysql = ["SQLAlchemy (>=2.0.0)", "pymysql (>=1.0.2)"]\noutput-formatting = ["jinja2 (>=3.1.2)", "tabulate (>=0.9.0)"]\nparquet = ["pyarrow (>=10.0.1)"]\nperformance = ["bottleneck (>=1.3.6)", "numba (>=0.56.4)", "numexpr (>=2.8.4)"]\nplot = ["matplotlib (>=3.6.3)"]\npostgresql = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "psycopg2 (>=2.9.6)"]\npyarrow = ["pyarrow (>=10.0.1)"]\nspss = ["pyreadstat (>=1.2.0)"]\nsql-other = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)"]\ntest = ["hypothesis (>=6.46.1)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)"]\nxml = ["lxml (>=4.9.2)"]\n\n[[package]]\nname = "pillow"\nversion = "10.0.1"\ndescription = "Python Imaging Library (Fork)"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_10_10_x86_64.whl", hash = "sha256:8f06be50669087250f319b706decf69ca71fdecd829091a37cc89398ca4dc17a"},\n    {file = "Pillow-10.0.1-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:50bd5f1ebafe9362ad622072a1d2f5850ecfa44303531ff14353a4059113b12d"},\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e6a90167bcca1216606223a05e2cf991bb25b14695c518bc65639463d7db722d"},\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f11c9102c56ffb9ca87134bd025a43d2aba3f1155f508eff88f694b33a9c6d19"},\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:186f7e04248103482ea6354af6d5bcedb62941ee08f7f788a1c7707bc720c66f"},\n    {file = "Pillow-10.0.1-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:0462b1496505a3462d0f35dc1c4d7b54069747d65d00ef48e736acda2c8cbdff"},\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:d889b53ae2f030f756e61a7bff13684dcd77e9af8b10c6048fb2c559d6ed6eaf"},\n    {file = "Pillow-10.0.1-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:552912dbca585b74d75279a7570dd29fa43b6d93594abb494ebb31ac19ace6bd"},\n    {file = "Pillow-10.0.1-cp310-cp310-win_amd64.whl", hash = "sha256:787bb0169d2385a798888e1122c980c6eff26bf941a8ea79747d35d8f9210ca0"},\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_10_10_x86_64.whl", hash = "sha256:fd2a5403a75b54661182b75ec6132437a181209b901446ee5724b589af8edef1"},\n    {file = "Pillow-10.0.1-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:2d7e91b4379f7a76b31c2dda84ab9e20c6220488e50f7822e59dac36b0cd92b1"},\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:19e9adb3f22d4c416e7cd79b01375b17159d6990003633ff1d8377e21b7f1b21"},\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:93139acd8109edcdeffd85e3af8ae7d88b258b3a1e13a038f542b79b6d255c54"},\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:92a23b0431941a33242b1f0ce6c88a952e09feeea9af4e8be48236a68ffe2205"},\n    {file = "Pillow-10.0.1-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:cbe68deb8580462ca0d9eb56a81912f59eb4542e1ef8f987405e35a0179f4ea2"},\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:522ff4ac3aaf839242c6f4e5b406634bfea002469656ae8358644fc6c4856a3b"},\n    {file = "Pillow-10.0.1-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:84efb46e8d881bb06b35d1d541aa87f574b58e87f781cbba8d200daa835b42e1"},\n    {file = "Pillow-10.0.1-cp311-cp311-win_amd64.whl", hash = "sha256:898f1d306298ff40dc1b9ca24824f0488f6f039bc0e25cfb549d3195ffa17088"},\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_10_10_x86_64.whl", hash = "sha256:bcf1207e2f2385a576832af02702de104be71301c2696d0012b1b93fe34aaa5b"},\n    {file = "Pillow-10.0.1-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:5d6c9049c6274c1bb565021367431ad04481ebb54872edecfcd6088d27edd6ed"},\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:28444cb6ad49726127d6b340217f0627abc8732f1194fd5352dec5e6a0105635"},\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:de596695a75496deb3b499c8c4f8e60376e0516e1a774e7bc046f0f48cd620ad"},\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_aarch64.whl", hash = "sha256:2872f2d7846cf39b3dbff64bc1104cc48c76145854256451d33c5faa55c04d1a"},\n    {file = "Pillow-10.0.1-cp312-cp312-manylinux_2_28_x86_64.whl", hash = "sha256:4ce90f8a24e1c15465048959f1e94309dfef93af272633e8f37361b824532e91"},\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:ee7810cf7c83fa227ba9125de6084e5e8b08c59038a7b2c9045ef4dde61663b4"},\n    {file = "Pillow-10.0.1-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:b1be1c872b9b5fcc229adeadbeb51422a9633abd847c0ff87dc4ef9bb184ae08"},\n    {file = "Pillow-10.0.1-cp312-cp312-win_amd64.whl", hash = "sha256:98533fd7fa764e5f85eebe56c8e4094db912ccbe6fbf3a58778d543cadd0db08"},\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_10_10_x86_64.whl", hash = "sha256:764d2c0daf9c4d40ad12fbc0abd5da3af7f8aa11daf87e4fa1b834000f4b6b0a"},\n    {file = "Pillow-10.0.1-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:fcb59711009b0168d6ee0bd8fb5eb259c4ab1717b2f538bbf36bacf207ef7a68"},\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:697a06bdcedd473b35e50a7e7506b1d8ceb832dc238a336bd6f4f5aa91a4b500"},\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:9f665d1e6474af9f9da5e86c2a3a2d2d6204e04d5af9c06b9d42afa6ebde3f21"},\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:2fa6dd2661838c66f1a5473f3b49ab610c98a128fc08afbe81b91a1f0bf8c51d"},\n    {file = "Pillow-10.0.1-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:3a04359f308ebee571a3127fdb1bd01f88ba6f6fb6d087f8dd2e0d9bff43f2a7"},\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:723bd25051454cea9990203405fa6b74e043ea76d4968166dfd2569b0210886a"},\n    {file = "Pillow-10.0.1-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:71671503e3015da1b50bd18951e2f9daf5b6ffe36d16f1eb2c45711a301521a7"},\n    {file = "Pillow-10.0.1-cp38-cp38-win_amd64.whl", hash = "sha256:44e7e4587392953e5e251190a964675f61e4dae88d1e6edbe9f36d6243547ff3"},\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_10_10_x86_64.whl", hash = "sha256:3855447d98cced8670aaa63683808df905e956f00348732448b5a6df67ee5849"},\n    {file = "Pillow-10.0.1-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:ed2d9c0704f2dc4fa980b99d565c0c9a543fe5101c25b3d60488b8ba80f0cce1"},\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:f5bb289bb835f9fe1a1e9300d011eef4d69661bb9b34d5e196e5e82c4cb09b37"},\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:3a0d3e54ab1df9df51b914b2233cf779a5a10dfd1ce339d0421748232cea9876"},\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:2cc6b86ece42a11f16f55fe8903595eff2b25e0358dec635d0a701ac9586588f"},\n    {file = "Pillow-10.0.1-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:ca26ba5767888c84bf5a0c1a32f069e8204ce8c21d00a49c90dabeba00ce0145"},\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:f0b4b06da13275bc02adfeb82643c4a6385bd08d26f03068c2796f60d125f6f2"},\n    {file = "Pillow-10.0.1-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:bc2e3069569ea9dbe88d6b8ea38f439a6aad8f6e7a6283a38edf61ddefb3a9bf"},\n    {file = "Pillow-10.0.1-cp39-cp39-win_amd64.whl", hash = "sha256:8b451d6ead6e3500b6ce5c7916a43d8d8d25ad74b9102a629baccc0808c54971"},\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-macosx_10_10_x86_64.whl", hash = "sha256:32bec7423cdf25c9038fef614a853c9d25c07590e1a870ed471f47fb80b244db"},\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b7cf63d2c6928b51d35dfdbda6f2c1fddbe51a6bc4a9d4ee6ea0e11670dd981e"},\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:f6d3d4c905e26354e8f9d82548475c46d8e0889538cb0657aa9c6f0872a37aa4"},\n    {file = "Pillow-10.0.1-pp310-pypy310_pp73-win_amd64.whl", hash = "sha256:847e8d1017c741c735d3cd1883fa7b03ded4f825a6e5fcb9378fd813edee995f"},\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-macosx_10_10_x86_64.whl", hash = "sha256:7f771e7219ff04b79e231d099c0a28ed83aa82af91fd5fa9fdb28f5b8d5addaf"},\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:459307cacdd4138edee3875bbe22a2492519e060660eaf378ba3b405d1c66317"},\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl", hash = "sha256:b059ac2c4c7a97daafa7dc850b43b2d3667def858a4f112d1aa082e5c3d6cf7d"},\n    {file = "Pillow-10.0.1-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:d6caf3cd38449ec3cd8a68b375e0c6fe4b6fd04edb6c9766b55ef84a6e8ddf2d"},\n    {file = "Pillow-10.0.1.tar.gz", hash = "sha256:d72967b06be9300fed5cfbc8b5bafceec48bf7cdc7dab66b1d2549035287191d"},\n]\n\n[package.extras]\ndocs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinx-removed-in", "sphinxext-opengraph"]\ntests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]\n\n[[package]]\nname = "plotly"\nversion = "5.22.0"\ndescription = "An open-source, interactive data visualization library for Python"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "plotly-5.22.0-py3-none-any.whl", hash = "sha256:68fc1901f098daeb233cc3dd44ec9dc31fb3ca4f4e53189344199c43496ed006"},\n    {file = "plotly-5.22.0.tar.gz", hash = "sha256:859fdadbd86b5770ae2466e542b761b247d1c6b49daed765b95bb8c7063e7469"},\n]\n\n[package.dependencies]\npackaging = "*"\ntenacity = ">=6.2.0"\n\n[[package]]\nname = "protobuf"\nversion = "4.24.4"\ndescription = ""\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "protobuf-4.24.4-cp310-abi3-win32.whl", hash = "sha256:ec9912d5cb6714a5710e28e592ee1093d68c5ebfeda61983b3f40331da0b1ebb"},\n    {file = "protobuf-4.24.4-cp310-abi3-win_amd64.whl", hash = "sha256:1badab72aa8a3a2b812eacfede5020472e16c6b2212d737cefd685884c191085"},\n    {file = "protobuf-4.24.4-cp37-abi3-macosx_10_9_universal2.whl", hash = "sha256:8e61a27f362369c2f33248a0ff6896c20dcd47b5d48239cb9720134bef6082e4"},\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_aarch64.whl", hash = "sha256:bffa46ad9612e6779d0e51ae586fde768339b791a50610d85eb162daeb23661e"},\n    {file = "protobuf-4.24.4-cp37-abi3-manylinux2014_x86_64.whl", hash = "sha256:b493cb590960ff863743b9ff1452c413c2ee12b782f48beca77c8da3e2ffe9d9"},\n    {file = "protobuf-4.24.4-cp37-cp37m-win32.whl", hash = "sha256:dbbed8a56e56cee8d9d522ce844a1379a72a70f453bde6243e3c86c30c2a3d46"},\n    {file = "protobuf-4.24.4-cp37-cp37m-win_amd64.whl", hash = "sha256:6b7d2e1c753715dcfe9d284a25a52d67818dd43c4932574307daf836f0071e37"},\n    {file = "protobuf-4.24.4-cp38-cp38-win32.whl", hash = "sha256:02212557a76cd99574775a81fefeba8738d0f668d6abd0c6b1d3adcc75503dbe"},\n    {file = "protobuf-4.24.4-cp38-cp38-win_amd64.whl", hash = "sha256:2fa3886dfaae6b4c5ed2730d3bf47c7a38a72b3a1f0acb4d4caf68e6874b947b"},\n    {file = "protobuf-4.24.4-cp39-cp39-win32.whl", hash = "sha256:b77272f3e28bb416e2071186cb39efd4abbf696d682cbb5dc731308ad37fa6dd"},\n    {file = "protobuf-4.24.4-cp39-cp39-win_amd64.whl", hash = "sha256:9fee5e8aa20ef1b84123bb9232b3f4a5114d9897ed89b4b8142d81924e05d79b"},\n    {file = "protobuf-4.24.4-py3-none-any.whl", hash = "sha256:80797ce7424f8c8d2f2547e2d42bfbb6c08230ce5832d6c099a37335c9c90a92"},\n    {file = "protobuf-4.24.4.tar.gz", hash = "sha256:5a70731910cd9104762161719c3d883c960151eea077134458503723b60e3667"},\n]\n\n[[package]]\nname = "pyarrow"\nversion = "13.0.0"\ndescription = "Python library for Apache Arrow"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_10_14_x86_64.whl", hash = "sha256:1afcc2c33f31f6fb25c92d50a86b7a9f076d38acbcb6f9e74349636109550148"},\n    {file = "pyarrow-13.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:70fa38cdc66b2fc1349a082987f2b499d51d072faaa6b600f71931150de2e0e3"},\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cd57b13a6466822498238877892a9b287b0a58c2e81e4bdb0b596dbb151cbb73"},\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f8ce69f7bf01de2e2764e14df45b8404fc6f1a5ed9871e8e08a12169f87b7a26"},\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_aarch64.whl", hash = "sha256:588f0d2da6cf1b1680974d63be09a6530fd1bd825dc87f76e162404779a157dc"},\n    {file = "pyarrow-13.0.0-cp310-cp310-manylinux_2_28_x86_64.whl", hash = "sha256:6241afd72b628787b4abea39e238e3ff9f34165273fad306c7acf780dd850956"},\n    {file = "pyarrow-13.0.0-cp310-cp310-win_amd64.whl", hash = "sha256:fda7857e35993673fcda603c07d43889fca60a5b254052a462653f8656c64f44"},\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_10_14_x86_64.whl", hash = "sha256:aac0ae0146a9bfa5e12d87dda89d9ef7c57a96210b899459fc2f785303dcbb67"},\n    {file = "pyarrow-13.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:d7759994217c86c161c6a8060509cfdf782b952163569606bb373828afdd82e8"},\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:868a073fd0ff6468ae7d869b5fc1f54de5c4255b37f44fb890385eb68b68f95d"},\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:51be67e29f3cfcde263a113c28e96aa04362ed8229cb7c6e5f5c719003659d33"},\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_aarch64.whl", hash = "sha256:d1b4e7176443d12610874bb84d0060bf080f000ea9ed7c84b2801df851320295"},\n    {file = "pyarrow-13.0.0-cp311-cp311-manylinux_2_28_x86_64.whl", hash = "sha256:69b6f9a089d116a82c3ed819eea8fe67dae6105f0d81eaf0fdd5e60d0c6e0944"},\n    {file = "pyarrow-13.0.0-cp311-cp311-win_amd64.whl", hash = "sha256:ab1268db81aeb241200e321e220e7cd769762f386f92f61b898352dd27e402ce"},\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_10_14_x86_64.whl", hash = "sha256:ee7490f0f3f16a6c38f8c680949551053c8194e68de5046e6c288e396dccee80"},\n    {file = "pyarrow-13.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:e3ad79455c197a36eefbd90ad4aa832bece7f830a64396c15c61a0985e337287"},\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:68fcd2dc1b7d9310b29a15949cdd0cb9bc34b6de767aff979ebf546020bf0ba0"},\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dc6fd330fd574c51d10638e63c0d00ab456498fc804c9d01f2a61b9264f2c5b2"},\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_aarch64.whl", hash = "sha256:e66442e084979a97bb66939e18f7b8709e4ac5f887e636aba29486ffbf373763"},\n    {file = "pyarrow-13.0.0-cp38-cp38-manylinux_2_28_x86_64.whl", hash = "sha256:0f6eff839a9e40e9c5610d3ff8c5bdd2f10303408312caf4c8003285d0b49565"},\n    {file = "pyarrow-13.0.0-cp38-cp38-win_amd64.whl", hash = "sha256:8b30a27f1cddf5c6efcb67e598d7823a1e253d743d92ac32ec1eb4b6a1417867"},\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_10_14_x86_64.whl", hash = "sha256:09552dad5cf3de2dc0aba1c7c4b470754c69bd821f5faafc3d774bedc3b04bb7"},\n    {file = "pyarrow-13.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:3896ae6c205d73ad192d2fc1489cd0edfab9f12867c85b4c277af4d37383c18c"},\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6647444b21cb5e68b593b970b2a9a07748dd74ea457c7dadaa15fd469c48ada1"},\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:47663efc9c395e31d09c6aacfa860f4473815ad6804311c5433f7085415d62a7"},\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_aarch64.whl", hash = "sha256:b9ba6b6d34bd2563345488cf444510588ea42ad5613df3b3509f48eb80250afd"},\n    {file = "pyarrow-13.0.0-cp39-cp39-manylinux_2_28_x86_64.whl", hash = "sha256:d00d374a5625beeb448a7fa23060df79adb596074beb3ddc1838adb647b6ef09"},\n    {file = "pyarrow-13.0.0-cp39-cp39-win_amd64.whl", hash = "sha256:c51afd87c35c8331b56f796eff954b9c7f8d4b7fef5903daf4e05fcf017d23a8"},\n    {file = "pyarrow-13.0.0.tar.gz", hash = "sha256:83333726e83ed44b0ac94d8d7a21bbdee4a05029c3b1e8db58a863eec8fd8a33"},\n]\n\n[package.dependencies]\nnumpy = ">=1.16.6"\n\n[[package]]\nname = "pydeck"\nversion = "0.8.0"\ndescription = "Widget for deck.gl maps"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "pydeck-0.8.0-py2.py3-none-any.whl", hash = "sha256:a8fa7757c6f24bba033af39db3147cb020eef44012ba7e60d954de187f9ed4d5"},\n    {file = "pydeck-0.8.0.tar.gz", hash = "sha256:07edde833f7cfcef6749124351195aa7dcd24663d4909fd7898dbd0b6fbc01ec"},\n]\n\n[package.dependencies]\njinja2 = ">=2.10.1"\nnumpy = ">=1.16.4"\n\n[package.extras]\ncarto = ["pydeck-carto"]\njupyter = ["ipykernel (>=5.1.2)", "ipython (>=5.8.0)", "ipywidgets (>=7,<8)", "traitlets (>=4.3.2)"]\n\n[[package]]\nname = "pygments"\nversion = "2.16.1"\ndescription = "Pygments is a syntax highlighting package written in Python."\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "Pygments-2.16.1-py3-none-any.whl", hash = "sha256:13fc09fa63bc8d8671a6d247e1eb303c4b343eaee81d861f3404db2935653692"},\n    {file = "Pygments-2.16.1.tar.gz", hash = "sha256:1daff0494820c69bc8941e407aa20f577374ee88364ee10a98fdbe0aece96e29"},\n]\n\n[package.extras]\nplugins = ["importlib-metadata"]\n\n[[package]]\nname = "pymongo"\nversion = "4.7.3"\ndescription = "Python driver for MongoDB <http://www.mongodb.org>"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:e9580b4537b3cc5d412070caabd1dabdf73fdce249793598792bac5782ecf2eb"},\n    {file = "pymongo-4.7.3-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:517243b2b189c98004570dd8fc0e89b1a48363d5578b3b99212fa2098b2ea4b8"},\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:23b1e9dabd61da1c7deb54d888f952f030e9e35046cebe89309b28223345b3d9"},\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:03e0f9901ad66c6fb7da0d303461377524d61dab93a4e4e5af44164c5bb4db76"},\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:9a870824aa54453aee030bac08c77ebcf2fe8999400f0c2a065bebcbcd46b7f8"},\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:dfd7b3d3f4261bddbb74a332d87581bc523353e62bb9da4027cc7340f6fcbebc"},\n    {file = "pymongo-4.7.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4d719a643ea6da46d215a3ba51dac805a773b611c641319558d8576cbe31cef8"},\n    {file = "pymongo-4.7.3-cp310-cp310-win32.whl", hash = "sha256:d8b1e06f361f3c66ee694cb44326e1a2e4f93bc9c3a4849ae8547889fca71154"},\n    {file = "pymongo-4.7.3-cp310-cp310-win_amd64.whl", hash = "sha256:c450ab2f9397e2d5caa7fddeb4feb30bf719c47c13ae02c0bbb3b71bf4099c1c"},\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:79cc6459209e885ba097779eaa0fe7f2fa049db39ab43b1731cf8d065a4650e8"},\n    {file = "pymongo-4.7.3-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:6e2287f1e2cc35e73cd74a4867e398a97962c5578a3991c730ef78d276ca8e46"},\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:413506bd48d8c31ee100645192171e4773550d7cb940b594d5175ac29e329ea1"},\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1cc1febf17646d52b7561caa762f60bdfe2cbdf3f3e70772f62eb624269f9c05"},\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:8dfcf18a49955d50a16c92b39230bd0668ffc9c164ccdfe9d28805182b48fa72"},\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:89872041196c008caddf905eb59d3dc2d292ae6b0282f1138418e76f3abd3ad6"},\n    {file = "pymongo-4.7.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d3ed97b89de62ea927b672ad524de0d23f3a6b4a01c8d10e3d224abec973fbc3"},\n    {file = "pymongo-4.7.3-cp311-cp311-win32.whl", hash = "sha256:d2f52b38151e946011d888a8441d3d75715c663fc5b41a7ade595e924e12a90a"},\n    {file = "pymongo-4.7.3-cp311-cp311-win_amd64.whl", hash = "sha256:4a4cc91c28e81c0ce03d3c278e399311b0af44665668a91828aec16527082676"},\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:cb30c8a78f5ebaca98640943447b6a0afcb146f40b415757c9047bf4a40d07b4"},\n    {file = "pymongo-4.7.3-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:9cf2069f5d37c398186453589486ea98bb0312214c439f7d320593b61880dc05"},\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3564f423958fced8a8c90940fd2f543c27adbcd6c7c6ed6715d847053f6200a0"},\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:7a8af8a38fa6951fff73e6ff955a6188f829b29fed7c5a1b739a306b4aa56fe8"},\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3a0e81c8dba6d825272867d487f18764cfed3c736d71d7d4ff5b79642acbed42"},\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:88fc1d146feabac4385ea8ddb1323e584922922641303c8bf392fe1c36803463"},\n    {file = "pymongo-4.7.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:4225100b2c5d1f7393d7c5d256ceb8b20766830eecf869f8ae232776347625a6"},\n    {file = "pymongo-4.7.3-cp312-cp312-win32.whl", hash = "sha256:5f3569ed119bf99c0f39ac9962fb5591eff02ca210fe80bb5178d7a1171c1b1e"},\n    {file = "pymongo-4.7.3-cp312-cp312-win_amd64.whl", hash = "sha256:eb383c54c0c8ba27e7712b954fcf2a0905fee82a929d277e2e94ad3a5ba3c7db"},\n    {file = "pymongo-4.7.3-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:a46cffe91912570151617d866a25d07b9539433a32231ca7e7cf809b6ba1745f"},\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4c3cba427dac50944c050c96d958c5e643c33a457acee03bae27c8990c5b9c16"},\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:a7a5fd893edbeb7fa982f8d44b6dd0186b6cd86c89e23f6ef95049ff72bffe46"},\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c168a2fadc8b19071d0a9a4f85fe38f3029fe22163db04b4d5c046041c0b14bd"},\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2c59c2c9e70f63a7f18a31e367898248c39c068c639b0579623776f637e8f482"},\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:d08165fd82c89d372e82904c3268bd8fe5de44f92a00e97bb1db1785154397d9"},\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:397fed21afec4fdaecf72f9c4344b692e489756030a9c6d864393e00c7e80491"},\n    {file = "pymongo-4.7.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:f903075f8625e2d228f1b9b9a0cf1385f1c41e93c03fd7536c91780a0fb2e98f"},\n    {file = "pymongo-4.7.3-cp37-cp37m-win32.whl", hash = "sha256:8ed1132f58c38add6b6138b771d0477a3833023c015c455d9a6e26f367f9eb5c"},\n    {file = "pymongo-4.7.3-cp37-cp37m-win_amd64.whl", hash = "sha256:8d00a5d8fc1043a4f641cbb321da766699393f1b6f87c70fae8089d61c9c9c54"},\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:9377b868c38700c7557aac1bc4baae29f47f1d279cc76b60436e547fd643318c"},\n    {file = "pymongo-4.7.3-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:da4a6a7b4f45329bb135aa5096823637bd5f760b44d6224f98190ee367b6b5dd"},\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:487e2f9277f8a63ac89335ec4f1699ae0d96ebd06d239480d69ed25473a71b2c"},\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6db3d608d541a444c84f0bfc7bad80b0b897e0f4afa580a53f9a944065d9b633"},\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e90af2ad3a8a7c295f4d09a2fbcb9a350c76d6865f787c07fe843b79c6e821d1"},\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8e28feb18dc559d50ededba27f9054c79f80c4edd70a826cecfe68f3266807b3"},\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:f21ecddcba2d9132d5aebd8e959de8d318c29892d0718420447baf2b9bccbb19"},\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:26140fbb3f6a9a74bd73ed46d0b1f43d5702e87a6e453a31b24fad9c19df9358"},\n    {file = "pymongo-4.7.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:94baa5fc7f7d22c3ce2ac7bd92f7e03ba7a6875f2480e3b97a400163d6eaafc9"},\n    {file = "pymongo-4.7.3-cp38-cp38-win32.whl", hash = "sha256:92dd247727dd83d1903e495acc743ebd757f030177df289e3ba4ef8a8c561fad"},\n    {file = "pymongo-4.7.3-cp38-cp38-win_amd64.whl", hash = "sha256:1c90c848a5e45475731c35097f43026b88ef14a771dfd08f20b67adc160a3f79"},\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:f598be401b416319a535c386ac84f51df38663f7a9d1071922bda4d491564422"},\n    {file = "pymongo-4.7.3-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:35ba90477fae61c65def6e7d09e8040edfdd3b7fd47c3c258b4edded60c4d625"},\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:9aa8735955c70892634d7e61b0ede9b1eefffd3cd09ccabee0ffcf1bdfe62254"},\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:82a97d8f7f138586d9d0a0cff804a045cdbbfcfc1cd6bba542b151e284fbbec5"},\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:de3b9db558930efab5eaef4db46dcad8bf61ac3ddfd5751b3e5ac6084a25e366"},\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f0e149217ef62812d3c2401cf0e2852b0c57fd155297ecc4dcd67172c4eca402"},\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:b3a8a1ef4a824f5feb793b3231526d0045eadb5eb01080e38435dfc40a26c3e5"},\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d14e5e89a4be1f10efc3d9dcb13eb7a3b2334599cb6bb5d06c6a9281b79c8e22"},\n    {file = "pymongo-4.7.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:c6bfa29f032fd4fd7b129520f8cdb51ab71d88c2ba0567cccd05d325f963acb5"},\n    {file = "pymongo-4.7.3-cp39-cp39-win32.whl", hash = "sha256:1421d0bd2ce629405f5157bd1aaa9b83f12d53a207cf68a43334f4e4ee312b66"},\n    {file = "pymongo-4.7.3-cp39-cp39-win_amd64.whl", hash = "sha256:f7ee974f8b9370a998919c55b1050889f43815ab588890212023fecbc0402a6d"},\n    {file = "pymongo-4.7.3.tar.gz", hash = "sha256:6354a66b228f2cd399be7429685fb68e07f19110a3679782ecb4fdb68da03831"},\n]\n\n[package.dependencies]\ndnspython = ">=1.16.0,<3.0.0"\n\n[package.extras]\naws = ["pymongo-auth-aws (>=1.1.0,<2.0.0)"]\nencryption = ["certifi", "pymongo-auth-aws (>=1.1.0,<2.0.0)", "pymongocrypt (>=1.6.0,<2.0.0)"]\ngssapi = ["pykerberos", "winkerberos (>=0.5.0)"]\nocsp = ["certifi", "cryptography (>=2.5)", "pyopenssl (>=17.2.0)", "requests (<3.0.0)", "service-identity (>=18.1.0)"]\nsnappy = ["python-snappy"]\ntest = ["pytest (>=7)"]\nzstd = ["zstandard"]\n\n[[package]]\nname = "python-dateutil"\nversion = "2.8.2"\ndescription = "Extensions to the standard Python datetime module"\noptional = false\npython-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"\nfiles = [\n    {file = "python-dateutil-2.8.2.tar.gz", hash = "sha256:0123cacc1627ae19ddf3c27a5de5bd67ee4586fbdd6440d9748f8abb483d3e86"},\n    {file = "python_dateutil-2.8.2-py2.py3-none-any.whl", hash = "sha256:961d03dc3453ebbc59dbdea9e4e11c5651520a876d0f4db161e8674aae935da9"},\n]\n\n[package.dependencies]\nsix = ">=1.5"\n\n[[package]]\nname = "pytz"\nversion = "2023.3.post1"\ndescription = "World timezone definitions, modern and historical"\noptional = false\npython-versions = "*"\nfiles = [\n    {file = "pytz-2023.3.post1-py2.py3-none-any.whl", hash = "sha256:ce42d816b81b68506614c11e8937d3aa9e41007ceb50bfdcb0749b921bf646c7"},\n    {file = "pytz-2023.3.post1.tar.gz", hash = "sha256:7b4fddbeb94a1eba4b557da24f19fdf9db575192544270a9101d8509f9f43d7b"},\n]\n\n[[package]]\nname = "referencing"\nversion = "0.30.2"\ndescription = "JSON Referencing + Python"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "referencing-0.30.2-py3-none-any.whl", hash = "sha256:449b6669b6121a9e96a7f9e410b245d471e8d48964c67113ce9afe50c8dd7bdf"},\n    {file = "referencing-0.30.2.tar.gz", hash = "sha256:794ad8003c65938edcdbc027f1933215e0d0ccc0291e3ce20a4d87432b59efc0"},\n]\n\n[package.dependencies]\nattrs = ">=22.2.0"\nrpds-py = ">=0.7.0"\n\n[[package]]\nname = "requests"\nversion = "2.32.3"\ndescription = "Python HTTP for Humans."\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "requests-2.32.3-py3-none-any.whl", hash = "sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6"},\n    {file = "requests-2.32.3.tar.gz", hash = "sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760"},\n]\n\n[package.dependencies]\ncertifi = ">=2017.4.17"\ncharset-normalizer = ">=2,<4"\nidna = ">=2.5,<4"\nurllib3 = ">=1.21.1,<3"\n\n[package.extras]\nsocks = ["PySocks (>=1.5.6,!=1.5.7)"]\nuse-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]\n\n[[package]]\nname = "rich"\nversion = "13.6.0"\ndescription = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"\noptional = false\npython-versions = ">=3.7.0"\nfiles = [\n    {file = "rich-13.6.0-py3-none-any.whl", hash = "sha256:2b38e2fe9ca72c9a00170a1a2d20c63c790d0e10ef1fe35eba76e1e7b1d7d245"},\n    {file = "rich-13.6.0.tar.gz", hash = "sha256:5c14d22737e6d5084ef4771b62d5d4363165b403455a30a1c8ca39dc7b644bef"},\n]\n\n[package.dependencies]\nmarkdown-it-py = ">=2.2.0"\npygments = ">=2.13.0,<3.0.0"\n\n[package.extras]\njupyter = ["ipywidgets (>=7.5.1,<9)"]\n\n[[package]]\nname = "rpds-py"\nversion = "0.10.6"\ndescription = "Python bindings to Rust\'s persistent data structures (rpds)"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_10_7_x86_64.whl", hash = "sha256:6bdc11f9623870d75692cc33c59804b5a18d7b8a4b79ef0b00b773a27397d1f6"},\n    {file = "rpds_py-0.10.6-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:26857f0f44f0e791f4a266595a7a09d21f6b589580ee0585f330aaccccb836e3"},\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:d7f5e15c953ace2e8dde9824bdab4bec50adb91a5663df08d7d994240ae6fa31"},\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:61fa268da6e2e1cd350739bb61011121fa550aa2545762e3dc02ea177ee4de35"},\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:c48f3fbc3e92c7dd6681a258d22f23adc2eb183c8cb1557d2fcc5a024e80b094"},\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:c0503c5b681566e8b722fe8c4c47cce5c7a51f6935d5c7012c4aefe952a35eed"},\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:734c41f9f57cc28658d98270d3436dba65bed0cfc730d115b290e970150c540d"},\n    {file = "rpds_py-0.10.6-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:a5d7ed104d158c0042a6a73799cf0eb576dfd5fc1ace9c47996e52320c37cb7c"},\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:e3df0bc35e746cce42579826b89579d13fd27c3d5319a6afca9893a9b784ff1b"},\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:73e0a78a9b843b8c2128028864901f55190401ba38aae685350cf69b98d9f7c9"},\n    {file = "rpds_py-0.10.6-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:5ed505ec6305abd2c2c9586a7b04fbd4baf42d4d684a9c12ec6110deefe2a063"},\n    {file = "rpds_py-0.10.6-cp310-none-win32.whl", hash = "sha256:d97dd44683802000277bbf142fd9f6b271746b4846d0acaf0cefa6b2eaf2a7ad"},\n    {file = "rpds_py-0.10.6-cp310-none-win_amd64.whl", hash = "sha256:b455492cab07107bfe8711e20cd920cc96003e0da3c1f91297235b1603d2aca7"},\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_10_7_x86_64.whl", hash = "sha256:e8cdd52744f680346ff8c1ecdad5f4d11117e1724d4f4e1874f3a67598821069"},\n    {file = "rpds_py-0.10.6-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:66414dafe4326bca200e165c2e789976cab2587ec71beb80f59f4796b786a238"},\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cc435d059f926fdc5b05822b1be4ff2a3a040f3ae0a7bbbe672babb468944722"},\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:8e7f2219cb72474571974d29a191714d822e58be1eb171f229732bc6fdedf0ac"},\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:3953c6926a63f8ea5514644b7afb42659b505ece4183fdaaa8f61d978754349e"},\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:2bb2e4826be25e72013916eecd3d30f66fd076110de09f0e750163b416500721"},\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:7bf347b495b197992efc81a7408e9a83b931b2f056728529956a4d0858608b80"},\n    {file = "rpds_py-0.10.6-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:102eac53bb0bf0f9a275b438e6cf6904904908562a1463a6fc3323cf47d7a532"},\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:40f93086eef235623aa14dbddef1b9fb4b22b99454cb39a8d2e04c994fb9868c"},\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:e22260a4741a0e7a206e175232867b48a16e0401ef5bce3c67ca5b9705879066"},\n    {file = "rpds_py-0.10.6-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:f4e56860a5af16a0fcfa070a0a20c42fbb2012eed1eb5ceeddcc7f8079214281"},\n    {file = "rpds_py-0.10.6-cp311-none-win32.whl", hash = "sha256:0774a46b38e70fdde0c6ded8d6d73115a7c39d7839a164cc833f170bbf539116"},\n    {file = "rpds_py-0.10.6-cp311-none-win_amd64.whl", hash = "sha256:4a5ee600477b918ab345209eddafde9f91c0acd931f3776369585a1c55b04c57"},\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_10_7_x86_64.whl", hash = "sha256:5ee97c683eaface61d38ec9a489e353d36444cdebb128a27fe486a291647aff6"},\n    {file = "rpds_py-0.10.6-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:0713631d6e2d6c316c2f7b9320a34f44abb644fc487b77161d1724d883662e31"},\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b5a53f5998b4bbff1cb2e967e66ab2addc67326a274567697379dd1e326bded7"},\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6a555ae3d2e61118a9d3e549737bb4a56ff0cec88a22bd1dfcad5b4e04759175"},\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:945eb4b6bb8144909b203a88a35e0a03d22b57aefb06c9b26c6e16d72e5eb0f0"},\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:52c215eb46307c25f9fd2771cac8135d14b11a92ae48d17968eda5aa9aaf5071"},\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:c1b3cd23d905589cb205710b3988fc8f46d4a198cf12862887b09d7aaa6bf9b9"},\n    {file = "rpds_py-0.10.6-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:64ccc28683666672d7c166ed465c09cee36e306c156e787acef3c0c62f90da5a"},\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:516a611a2de12fbea70c78271e558f725c660ce38e0006f75139ba337d56b1f6"},\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:9ff93d3aedef11f9c4540cf347f8bb135dd9323a2fc705633d83210d464c579d"},\n    {file = "rpds_py-0.10.6-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:d858532212f0650be12b6042ff4378dc2efbb7792a286bee4489eaa7ba010586"},\n    {file = "rpds_py-0.10.6-cp312-none-win32.whl", hash = "sha256:3c4eff26eddac49d52697a98ea01b0246e44ca82ab09354e94aae8823e8bda02"},\n    {file = "rpds_py-0.10.6-cp312-none-win_amd64.whl", hash = "sha256:150eec465dbc9cbca943c8e557a21afdcf9bab8aaabf386c44b794c2f94143d2"},\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_10_7_x86_64.whl", hash = "sha256:cf693eb4a08eccc1a1b636e4392322582db2a47470d52e824b25eca7a3977b53"},\n    {file = "rpds_py-0.10.6-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4134aa2342f9b2ab6c33d5c172e40f9ef802c61bb9ca30d21782f6e035ed0043"},\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e782379c2028a3611285a795b89b99a52722946d19fc06f002f8b53e3ea26ea9"},\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:2f6da6d842195fddc1cd34c3da8a40f6e99e4a113918faa5e60bf132f917c247"},\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:b4a9fe992887ac68256c930a2011255bae0bf5ec837475bc6f7edd7c8dfa254e"},\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b788276a3c114e9f51e257f2a6f544c32c02dab4aa7a5816b96444e3f9ffc336"},\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:caa1afc70a02645809c744eefb7d6ee8fef7e2fad170ffdeacca267fd2674f13"},\n    {file = "rpds_py-0.10.6-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:bddd4f91eede9ca5275e70479ed3656e76c8cdaaa1b354e544cbcf94c6fc8ac4"},\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:775049dfa63fb58293990fc59473e659fcafd953bba1d00fc5f0631a8fd61977"},\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_i686.whl", hash = "sha256:c6c45a2d2b68c51fe3d9352733fe048291e483376c94f7723458cfd7b473136b"},\n    {file = "rpds_py-0.10.6-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:0699ab6b8c98df998c3eacf51a3b25864ca93dab157abe358af46dc95ecd9801"},\n    {file = "rpds_py-0.10.6-cp38-none-win32.whl", hash = "sha256:ebdab79f42c5961682654b851f3f0fc68e6cc7cd8727c2ac4ffff955154123c1"},\n    {file = "rpds_py-0.10.6-cp38-none-win_amd64.whl", hash = "sha256:24656dc36f866c33856baa3ab309da0b6a60f37d25d14be916bd3e79d9f3afcf"},\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_10_7_x86_64.whl", hash = "sha256:0898173249141ee99ffcd45e3829abe7bcee47d941af7434ccbf97717df020e5"},\n    {file = "rpds_py-0.10.6-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:9e9184fa6c52a74a5521e3e87badbf9692549c0fcced47443585876fcc47e469"},\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:5752b761902cd15073a527b51de76bbae63d938dc7c5c4ad1e7d8df10e765138"},\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:99a57006b4ec39dbfb3ed67e5b27192792ffb0553206a107e4aadb39c5004cd5"},\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:09586f51a215d17efdb3a5f090d7cbf1633b7f3708f60a044757a5d48a83b393"},\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:e225a6a14ecf44499aadea165299092ab0cba918bb9ccd9304eab1138844490b"},\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b2039f8d545f20c4e52713eea51a275e62153ee96c8035a32b2abb772b6fc9e5"},\n    {file = "rpds_py-0.10.6-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:34ad87a831940521d462ac11f1774edf867c34172010f5390b2f06b85dcc6014"},\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:dcdc88b6b01015da066da3fb76545e8bb9a6880a5ebf89e0f0b2e3ca557b3ab7"},\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:25860ed5c4e7f5e10c496ea78af46ae8d8468e0be745bd233bab9ca99bfd2647"},\n    {file = "rpds_py-0.10.6-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:7854a207ef77319ec457c1eb79c361b48807d252d94348305db4f4b62f40f7f3"},\n    {file = "rpds_py-0.10.6-cp39-none-win32.whl", hash = "sha256:e6fcc026a3f27c1282c7ed24b7fcac82cdd70a0e84cc848c0841a3ab1e3dea2d"},\n    {file = "rpds_py-0.10.6-cp39-none-win_amd64.whl", hash = "sha256:e98c4c07ee4c4b3acf787e91b27688409d918212dfd34c872201273fdd5a0e18"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_10_7_x86_64.whl", hash = "sha256:68fe9199184c18d997d2e4293b34327c0009a78599ce703e15cd9a0f47349bba"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:3339eca941568ed52d9ad0f1b8eb9fe0958fa245381747cecf2e9a78a5539c42"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a360cfd0881d36c6dc271992ce1eda65dba5e9368575663de993eeb4523d895f"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:031f76fc87644a234883b51145e43985aa2d0c19b063e91d44379cd2786144f8"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:1f36a9d751f86455dc5278517e8b65580eeee37d61606183897f122c9e51cef3"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:052a832078943d2b2627aea0d19381f607fe331cc0eb5df01991268253af8417"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:023574366002bf1bd751ebaf3e580aef4a468b3d3c216d2f3f7e16fdabd885ed"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:defa2c0c68734f4a82028c26bcc85e6b92cced99866af118cd6a89b734ad8e0d"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:879fb24304ead6b62dbe5034e7b644b71def53c70e19363f3c3be2705c17a3b4"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_i686.whl", hash = "sha256:53c43e10d398e365da2d4cc0bcaf0854b79b4c50ee9689652cdc72948e86f487"},\n    {file = "rpds_py-0.10.6-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:3777cc9dea0e6c464e4b24760664bd8831738cc582c1d8aacf1c3f546bef3f65"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_10_7_x86_64.whl", hash = "sha256:40578a6469e5d1df71b006936ce95804edb5df47b520c69cf5af264d462f2cbb"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-macosx_11_0_arm64.whl", hash = "sha256:cf71343646756a072b85f228d35b1d7407da1669a3de3cf47f8bbafe0c8183a4"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:10f32b53f424fc75ff7b713b2edb286fdbfc94bf16317890260a81c2c00385dc"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:81de24a1c51cfb32e1fbf018ab0bdbc79c04c035986526f76c33e3f9e0f3356c"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ac17044876e64a8ea20ab132080ddc73b895b4abe9976e263b0e30ee5be7b9c2"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5e8a78bd4879bff82daef48c14d5d4057f6856149094848c3ed0ecaf49f5aec2"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:78ca33811e1d95cac8c2e49cb86c0fb71f4d8409d8cbea0cb495b6dbddb30a55"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:c63c3ef43f0b3fb00571cff6c3967cc261c0ebd14a0a134a12e83bdb8f49f21f"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:7fde6d0e00b2fd0dbbb40c0eeec463ef147819f23725eda58105ba9ca48744f4"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_i686.whl", hash = "sha256:79edd779cfc46b2e15b0830eecd8b4b93f1a96649bcb502453df471a54ce7977"},\n    {file = "rpds_py-0.10.6-pp38-pypy38_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:9164ec8010327ab9af931d7ccd12ab8d8b5dc2f4c6a16cbdd9d087861eaaefa1"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_10_7_x86_64.whl", hash = "sha256:d29ddefeab1791e3c751e0189d5f4b3dbc0bbe033b06e9c333dca1f99e1d523e"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:30adb75ecd7c2a52f5e76af50644b3e0b5ba036321c390b8e7ec1bb2a16dd43c"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:dd609fafdcdde6e67a139898196698af37438b035b25ad63704fd9097d9a3482"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:6eef672de005736a6efd565577101277db6057f65640a813de6c2707dc69f396"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:6cf4393c7b41abbf07c88eb83e8af5013606b1cdb7f6bc96b1b3536b53a574b8"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:ad857f42831e5b8d41a32437f88d86ead6c191455a3499c4b6d15e007936d4cf"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1d7360573f1e046cb3b0dceeb8864025aa78d98be4bb69f067ec1c40a9e2d9df"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:d08f63561c8a695afec4975fae445245386d645e3e446e6f260e81663bfd2e38"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:f0f17f2ce0f3529177a5fff5525204fad7b43dd437d017dd0317f2746773443d"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_i686.whl", hash = "sha256:442626328600bde1d09dc3bb00434f5374948838ce75c41a52152615689f9403"},\n    {file = "rpds_py-0.10.6-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:e9616f5bd2595f7f4a04b67039d890348ab826e943a9bfdbe4938d0eba606971"},\n    {file = "rpds_py-0.10.6.tar.gz", hash = "sha256:4ce5a708d65a8dbf3748d2474b580d606b1b9f91b5c6ab2a316e0b0cf7a4ba50"},\n]\n\n[[package]]\nname = "six"\nversion = "1.16.0"\ndescription = "Python 2 and 3 compatibility utilities"\noptional = false\npython-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"\nfiles = [\n    {file = "six-1.16.0-py2.py3-none-any.whl", hash = "sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254"},\n    {file = "six-1.16.0.tar.gz", hash = "sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926"},\n]\n\n[[package]]\nname = "smmap"\nversion = "5.0.1"\ndescription = "A pure Python implementation of a sliding window memory map manager"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "smmap-5.0.1-py3-none-any.whl", hash = "sha256:e6d8668fa5f93e706934a62d7b4db19c8d9eb8cf2adbb75ef1b675aa332b69da"},\n    {file = "smmap-5.0.1.tar.gz", hash = "sha256:dceeb6c0028fdb6734471eb07c0cd2aae706ccaecab45965ee83f11c8d3b1f62"},\n]\n\n[[package]]\nname = "streamlit"\nversion = "1.36.0"\ndescription = "A faster way to build and share data apps"\noptional = false\npython-versions = "!=3.9.7,>=3.8"\nfiles = [\n    {file = "streamlit-1.36.0-py2.py3-none-any.whl", hash = "sha256:3399a33ea5faa26c05dd433d142eefe68ade67e9189a9e1d47a1731ae30a1c42"},\n    {file = "streamlit-1.36.0.tar.gz", hash = "sha256:a12af9f0eb61ab5832f438336257b1ec20eb29d8e0e0c6b40a79116ba939bc9c"},\n]\n\n[package.dependencies]\naltair = ">=4.0,<6"\nblinker = ">=1.0.0,<2"\ncachetools = ">=4.0,<6"\nclick = ">=7.0,<9"\ngitpython = ">=3.0.7,<3.1.19 || >3.1.19,<4"\nnumpy = ">=1.20,<3"\npackaging = ">=20,<25"\npandas = ">=1.3.0,<3"\npillow = ">=7.1.0,<11"\nprotobuf = ">=3.20,<6"\npyarrow = ">=7.0"\npydeck = ">=0.8.0b4,<1"\nrequests = ">=2.27,<3"\nrich = ">=10.14.0,<14"\ntenacity = ">=8.1.0,<9"\ntoml = ">=0.10.1,<2"\ntornado = ">=6.0.3,<7"\ntyping-extensions = ">=4.3.0,<5"\nwatchdog = {version = ">=2.1.5,<5", markers = "platform_system != \\"Darwin\\""}\n\n[package.extras]\nsnowflake = ["snowflake-connector-python (>=2.8.0)", "snowflake-snowpark-python (>=0.9.0)"]\n\n[[package]]\nname = "streamlit-option-menu"\nversion = "0.3.13"\ndescription = "streamlit-option-menu is a simple Streamlit component that allows users to select a single item from a list of options in a menu."\noptional = false\npython-versions = ">=3.6"\nfiles = [\n    {file = "streamlit-option-menu-0.3.13.tar.gz", hash = "sha256:a0fb4eb52bdc5060b0cbf08ef75fc27c78126e13cdcdde1ec7beea36c0cc3880"},\n    {file = "streamlit_option_menu-0.3.13-py3-none-any.whl", hash = "sha256:7e7e4f8770bc444ea4e51b27d3f6dfbda87e369b686421137f323d5b9ad13c25"},\n]\n\n[package.dependencies]\nstreamlit = ">=0.63"\n\n[[package]]\nname = "tenacity"\nversion = "8.2.3"\ndescription = "Retry code until it succeeds"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "tenacity-8.2.3-py3-none-any.whl", hash = "sha256:ce510e327a630c9e1beaf17d42e6ffacc88185044ad85cf74c0a8887c6a0f88c"},\n    {file = "tenacity-8.2.3.tar.gz", hash = "sha256:5398ef0d78e63f40007c1fb4c0bff96e1911394d2fa8d194f77619c05ff6cc8a"},\n]\n\n[package.extras]\ndoc = ["reno", "sphinx", "tornado (>=4.5)"]\n\n[[package]]\nname = "toml"\nversion = "0.10.2"\ndescription = "Python Library for Tom\'s Obvious, Minimal Language"\noptional = false\npython-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"\nfiles = [\n    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},\n    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},\n]\n\n[[package]]\nname = "toolz"\nversion = "0.12.0"\ndescription = "List processing tools and functional utilities"\noptional = false\npython-versions = ">=3.5"\nfiles = [\n    {file = "toolz-0.12.0-py3-none-any.whl", hash = "sha256:2059bd4148deb1884bb0eb770a3cde70e7f954cfbbdc2285f1f2de01fd21eb6f"},\n    {file = "toolz-0.12.0.tar.gz", hash = "sha256:88c570861c440ee3f2f6037c4654613228ff40c93a6c25e0eba70d17282c6194"},\n]\n\n[[package]]\nname = "tornado"\nversion = "6.3.3"\ndescription = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."\noptional = false\npython-versions = ">= 3.8"\nfiles = [\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_universal2.whl", hash = "sha256:502fba735c84450974fec147340016ad928d29f1e91f49be168c0a4c18181e1d"},\n    {file = "tornado-6.3.3-cp38-abi3-macosx_10_9_x86_64.whl", hash = "sha256:805d507b1f588320c26f7f097108eb4023bbaa984d63176d1652e184ba24270a"},\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:1bd19ca6c16882e4d37368e0152f99c099bad93e0950ce55e71daed74045908f"},\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7ac51f42808cca9b3613f51ffe2a965c8525cb1b00b7b2d56828b8045354f76a"},\n    {file = "tornado-6.3.3-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:71a8db65160a3c55d61839b7302a9a400074c9c753040455494e2af74e2501f2"},\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_aarch64.whl", hash = "sha256:ceb917a50cd35882b57600709dd5421a418c29ddc852da8bcdab1f0db33406b0"},\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_i686.whl", hash = "sha256:7d01abc57ea0dbb51ddfed477dfe22719d376119844e33c661d873bf9c0e4a16"},\n    {file = "tornado-6.3.3-cp38-abi3-musllinux_1_1_x86_64.whl", hash = "sha256:9dc4444c0defcd3929d5c1eb5706cbe1b116e762ff3e0deca8b715d14bf6ec17"},\n    {file = "tornado-6.3.3-cp38-abi3-win32.whl", hash = "sha256:65ceca9500383fbdf33a98c0087cb975b2ef3bfb874cb35b8de8740cf7f41bd3"},\n    {file = "tornado-6.3.3-cp38-abi3-win_amd64.whl", hash = "sha256:22d3c2fa10b5793da13c807e6fc38ff49a4f6e1e3868b0a6f4164768bb8e20f5"},\n    {file = "tornado-6.3.3.tar.gz", hash = "sha256:e7d8db41c0181c80d76c982aacc442c0783a2c54d6400fe028954201a2e032fe"},\n]\n\n[[package]]\nname = "typing-extensions"\nversion = "4.8.0"\ndescription = "Backported and Experimental Type Hints for Python 3.8+"\noptional = false\npython-versions = ">=3.8"\nfiles = [\n    {file = "typing_extensions-4.8.0-py3-none-any.whl", hash = "sha256:8f92fc8806f9a6b641eaa5318da32b44d401efaac0f6678c9bc448ba3605faa0"},\n    {file = "typing_extensions-4.8.0.tar.gz", hash = "sha256:df8e4339e9cb77357558cbdbceca33c303714cf861d1eef15e1070055ae8b7ef"},\n]\n\n[[package]]\nname = "tzdata"\nversion = "2023.3"\ndescription = "Provider of IANA time zone data"\noptional = false\npython-versions = ">=2"\nfiles = [\n    {file = "tzdata-2023.3-py2.py3-none-any.whl", hash = "sha256:7e65763eef3120314099b6939b5546db7adce1e7d6f2e179e3df563c70511eda"},\n    {file = "tzdata-2023.3.tar.gz", hash = "sha256:11ef1e08e54acb0d4f95bdb1be05da659673de4acbd21bf9c69e94cc5e907a3a"},\n]\n\n[[package]]\nname = "urllib3"\nversion = "2.0.6"\ndescription = "HTTP library with thread-safe connection pooling, file post, and more."\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "urllib3-2.0.6-py3-none-any.whl", hash = "sha256:7a7c7003b000adf9e7ca2a377c9688bbc54ed41b985789ed576570342a375cd2"},\n    {file = "urllib3-2.0.6.tar.gz", hash = "sha256:b19e1a85d206b56d7df1d5e683df4a7725252a964e3993648dd0fb5a1c157564"},\n]\n\n[package.extras]\nbrotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]\nsecure = ["certifi", "cryptography (>=1.9)", "idna (>=2.0.0)", "pyopenssl (>=17.1.0)", "urllib3-secure-extra"]\nsocks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]\nzstd = ["zstandard (>=0.18.0)"]\n\n[[package]]\nname = "watchdog"\nversion = "3.0.0"\ndescription = "Filesystem events monitoring"\noptional = false\npython-versions = ">=3.7"\nfiles = [\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:336adfc6f5cc4e037d52db31194f7581ff744b67382eb6021c868322e32eef41"},\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:a70a8dcde91be523c35b2bf96196edc5730edb347e374c7de7cd20c43ed95397"},\n    {file = "watchdog-3.0.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:adfdeab2da79ea2f76f87eb42a3ab1966a5313e5a69a0213a3cc06ef692b0e96"},\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:2b57a1e730af3156d13b7fdddfc23dea6487fceca29fc75c5a868beed29177ae"},\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:7ade88d0d778b1b222adebcc0927428f883db07017618a5e684fd03b83342bd9"},\n    {file = "watchdog-3.0.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:7e447d172af52ad204d19982739aa2346245cc5ba6f579d16dac4bfec226d2e7"},\n    {file = "watchdog-3.0.0-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:9fac43a7466eb73e64a9940ac9ed6369baa39b3bf221ae23493a9ec4d0022674"},\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:8ae9cda41fa114e28faf86cb137d751a17ffd0316d1c34ccf2235e8a84365c7f"},\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:25f70b4aa53bd743729c7475d7ec41093a580528b100e9a8c5b5efe8899592fc"},\n    {file = "watchdog-3.0.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:4f94069eb16657d2c6faada4624c39464f65c05606af50bb7902e036e3219be3"},\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:7c5f84b5194c24dd573fa6472685b2a27cc5a17fe5f7b6fd40345378ca6812e3"},\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:3aa7f6a12e831ddfe78cdd4f8996af9cf334fd6346531b16cec61c3b3c0d8da0"},\n    {file = "watchdog-3.0.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:233b5817932685d39a7896b1090353fc8efc1ef99c9c054e46c8002561252fb8"},\n    {file = "watchdog-3.0.0-pp37-pypy37_pp73-macosx_10_9_x86_64.whl", hash = "sha256:13bbbb462ee42ec3c5723e1205be8ced776f05b100e4737518c67c8325cf6100"},\n    {file = "watchdog-3.0.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl", hash = "sha256:8f3ceecd20d71067c7fd4c9e832d4e22584318983cabc013dbf3f70ea95de346"},\n    {file = "watchdog-3.0.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:c9d8c8ec7efb887333cf71e328e39cffbf771d8f8f95d308ea4125bf5f90ba64"},\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_aarch64.whl", hash = "sha256:0e06ab8858a76e1219e68c7573dfeba9dd1c0219476c5a44d5333b01d7e1743a"},\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_armv7l.whl", hash = "sha256:d00e6be486affb5781468457b21a6cbe848c33ef43f9ea4a73b4882e5f188a44"},\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_i686.whl", hash = "sha256:c07253088265c363d1ddf4b3cdb808d59a0468ecd017770ed716991620b8f77a"},\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64.whl", hash = "sha256:5113334cf8cf0ac8cd45e1f8309a603291b614191c9add34d33075727a967709"},\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_ppc64le.whl", hash = "sha256:51f90f73b4697bac9c9a78394c3acbbd331ccd3655c11be1a15ae6fe289a8c83"},\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_s390x.whl", hash = "sha256:ba07e92756c97e3aca0912b5cbc4e5ad802f4557212788e72a72a47ff376950d"},\n    {file = "watchdog-3.0.0-py3-none-manylinux2014_x86_64.whl", hash = "sha256:d429c2430c93b7903914e4db9a966c7f2b068dd2ebdd2fa9b9ce094c7d459f33"},\n    {file = "watchdog-3.0.0-py3-none-win32.whl", hash = "sha256:3ed7c71a9dccfe838c2f0b6314ed0d9b22e77d268c67e015450a29036a81f60f"},\n    {file = "watchdog-3.0.0-py3-none-win_amd64.whl", hash = "sha256:4c9956d27be0bb08fc5f30d9d0179a855436e655f046d288e2bcc11adfae893c"},\n    {file = "watchdog-3.0.0-py3-none-win_ia64.whl", hash = "sha256:5d9f3a10e02d7371cd929b5d8f11e87d4bad890212ed3901f9b4d68767bee759"},\n    {file = "watchdog-3.0.0.tar.gz", hash = "sha256:4d98a320595da7a7c5a18fc48cb633c2e73cda78f93cac2ef42d42bf609a33f9"},\n]\n\n[package.extras]\nwatchmedo = ["PyYAML (>=3.10)"]\n\n[metadata]\nlock-version = "2.0"\npython-versions = ">=3.10.0,<3.11"\ncontent-hash = "19326ad4cba6cf84c5b09afbd1b8f3eb811da4d2c1161a64d6d0e0f8e45f9c04"\n\n--- End of poetry.lock ---\n\n--- Start of .replit ---\nentrypoint = "main.py"\nrun = ["streamlit", "run", "app.py", "--server.headless", "true"]\n\nmodules = ["python-3.10:v18-20230807-322e88b"]\n\nhidden = [".pythonlibs"]\n\n[nix]\nchannel = "stable-23_05"\n\n[deployment]\nrun = ["streamlit", "run", "--server.address", "0.0.0.0", "--server.headless", "true", "--server.enableCORS=false", "--server.enableWebsocketCompression=false", "--server.runOnSave=false", "app.py"]\nignorePorts = false\ndeploymentTarget = "gce"\n\n[[ports]]\nlocalPort = 8501\nexternalPort = 80\n\n[[ports]]\nlocalPort = 8502\nexternalPort = 3000\n\n--- End of .replit ---\n\n--- Start of app.py ---\n# app.py\nimport streamlit as st\n\n# --- Streamlit Page Configuration ---\nst.set_page_config(\n    page_title="Omnivia Survey Platform",\n    layout="wide",\n    initial_sidebar_state="expanded",\n    page_icon=":bar_chart:"\n)\n\nfrom modules import personas, questions, results, analytics, utils, dashboard, price_sensitivity, live_polling\nfrom PIL import Image\nfrom streamlit_option_menu import option_menu\nimport json\nimport requests\nfrom pymongo import MongoClient\nimport logging\n\n# Configure logging\nlogging.basicConfig(level=logging.DEBUG)\n\n# --- Load Brand Assets ---\ndef load_brand_assets():\n    logo_path = "logo.png"  # Replace with your logo path\n    primary_color = "#FF6F61"\n    try:\n        logo = Image.open(logo_path)\n        return logo, primary_color\n    except FileNotFoundError:\n        logging.error("Logo file not found.")\n        return None, primary_color\n\nlogo_image, primary_color = load_brand_assets()\n\n# --- Main App Logic ---\ndef main():\n    with st.container():\n        if logo_image:\n            st.image(logo_image, use_column_width=True)\n        st.title("Omnivia Survey Platform")\n\n        # --- Navigation ---\n        selected = option_menu(\n            menu_title=None,\n            options=["Demand Meter", "Price Sensitivity", "Live Polling"],\n            icons=["bar-chart", "graph-up-arrow", "chat-dots"],\n            menu_icon="cast",\n            default_index=0,\n            styles={\n                "container": {"padding": "5!important", "background-color": "#2A2A2A"},\n                "icon": {"color": "white"},\n                "nav-link": {"font-size": "16px", "text-align": "left", "margin": "0px", "--hover-color": "#D65A50"},\n                "nav-link-selected": {"background-color": "#D65A50"},\n            }\n        )\n\n        # --- App Sections ---\n        try:\n            if selected == "Demand Meter":\n                dashboard.run_dashboard()  # Call the module to run Demand Meter\n            elif selected == "Price Sensitivity":\n                price_sensitivity.run_price_sensitivity()  # Call the module to run Price Sensitivity\n            elif selected == "Live Polling":\n                live_polling.run_live_polling()  # Call the module to run Live Polling\n        except Exception as e:\n            st.error(f"Error running {selected}: {str(e)}")\n            logging.error(f"Error running {selected}: {str(e)}")\n            utils.log_error(selected, str(e))\n\nif __name__ == "__main__":\n    main()\n\n--- End of app.py ---\n\n--- Start of loading_screen.css ---\n/* loading_screen.css */\nbody {\n  background-color: #000;\n  color: #0f0;\n  font-family: \'Courier New\', Courier, monospace;\n}\n\n.loading-text {\n  font-size: 24px;\n  text-align: center;\n  padding-top: 20%;\n}\n\n.loading-text::after {\n  content: \'\';\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  background: #0f0;\n  margin-left: 10px;\n  animation: blink 1s infinite;\n}\n\n@keyframes blink {\n  0%, 50%, 100% {\n    opacity: 1;\n  }\n  25%, 75% {\n    opacity: 0;\n  }\n}\n\n--- End of loading_screen.css ---\n\n--- Start of example.py ---\nimport streamlit as st\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\n\n# Set page configuration\nst.set_page_config(\n    page_title="Executive Report",\n    layout="wide",\n    initial_sidebar_state="expanded",\n)\n\n# Navigation Tabs\ntabs = [\'Overview\', \'Price & Performance\', \'Portfolio & Management\', \'Fees & Minimums\', \'Distributions\', \'News & Reviews\']\ntab = st.sidebar.radio("Navigation", tabs)\n\n# Dummy data\ndef generate_dummy_data():\n    dates = pd.date_range(start="2023-01-01", periods=100, freq="D")\n    values = np.random.randn(100).cumsum()\n    return pd.DataFrame({"Date": dates, "Value": values})\n\n# Header\nst.title("Executive Report")\nst.markdown("""\nA comprehensive report highlighting key financial metrics, market trends, and potential risks for \n**PSS World Medical, Inc. (PSSI)**.\n""")\n\n# Main content based on selected tab\nif tab == "Overview":\n    st.header("Company Overview")\n    st.markdown("""\n    **PSS World Medical, Inc. (PSSI)**\n\n    - **Sector**: Healthcare\n    - **Industry**: Medical Distribution\n    - **Market Cap**: $2.3B\n    """)\n    st.image("https://via.placeholder.com/600x400", caption="Company Headquarters", use_column_width=True)\n    st.subheader("Key Highlights")\n    st.markdown("""\n    - Strong market position\n    - Consistent revenue growth\n    - Expanding product lines\n    """)\n\nelif tab == "Price & Performance":\n    st.header("Price & Performance")\n\n    st.subheader("Current Prices")\n    current_prices = {\n        "Price as of 02/27/2018": "$254.07",\n        "Change": "-$3.23 (-1.26%)",\n        "SEC Yield": "1.67%",\n        "52-week high 01/26/2018": "$265.42",\n        "52-week low 04/13/2017": "$215.11",\n        "Range": "$50.31 (23.39%)"\n    }\n    st.table(pd.DataFrame.from_dict(current_prices, orient=\'index\', columns=[\'Value\']).reset_index().rename(columns={"index": "Metric"}))\n\n    st.subheader("Historical Prices")\n    historical_prices = pd.DataFrame({\n        "Date": ["02/22/2018", "02/23/2018", "02/26/2018", "02/27/2018", "02/28/2018"],\n        "Price": ["$250.26", "$254.29", "$257.30", "$254.07", "$251.27"]\n    })\n    st.table(historical_prices)\n\n    st.subheader("Performance")\n    data = generate_dummy_data()\n    fig = px.line(data, x="Date", y="Value", title="Performance Over Time", labels={"Date": "Date", "Value": "Value"})\n    fig.update_layout(height=400)\n    st.plotly_chart(fig)\n\n    st.subheader("Average Annual Returns")\n    annual_returns = pd.DataFrame({\n        "Metric": ["500 Index Fund Inv", "S&P 500 Index"],\n        "1 Year": ["16.94%", "17.01%"],\n        "3 Year": ["11.00%", "11.14%"],\n        "5 Year": ["14.57%", "14.73%"],\n        "10 Year": ["9.60%", "9.73%"],\n        "Since Inception": ["11.12%", "-"]\n    })\n    st.table(annual_returns)\n\n    st.subheader("After-tax Returns")\n    after_tax_returns = pd.DataFrame({\n        "Metric": ["500 Index Fund Inv", "Returns after taxes on distributions", "Returns after taxes on distributions and sale of fund shares"],\n        "1 Year": ["21.67%", "12.64%", "20.44%"],\n        "3 Year": ["11.26%", "8.71%", "9.70%"],\n        "5 Year": ["15.62%", "12.51%", "14.24%"],\n        "10 Year": ["8.37%", "6.75%", "7.61%"],\n        "Since Inception": ["11.11%", "-", "-"]\n    })\n    st.table(after_tax_returns)\n\nelif tab == "Portfolio & Management":\n    st.header("Portfolio & Management")\n    st.markdown("Details about the portfolio and management team go here.")\n\nelif tab == "Fees & Minimums":\n    st.header("Fees & Minimums")\n    st.markdown("Details about the fees and minimums go here.")\n\nelif tab == "Distributions":\n    st.header("Distributions")\n    st.markdown("Details about the distributions go here.")\n\nelif tab == "News & Reviews":\n    st.header("News & Reviews")\n    st.markdown("Details about the latest news and reviews go here.")\n\n# Custom CSS for styling\nst.markdown("""\n    <style>\n    .report-container { max-width: 1200px; margin: 0 auto; }\n    .header { background-color: #f0f2f6; padding: 20px; border-radius: 5px; margin-bottom: 20px; text-align: center; }\n    .header h1 { font-size: 2.5em; margin-bottom: 0; }\n    .header p { font-size: 1.2em; color: #666; }\n    .main { background-color: #fff; padding: 20px; border-radius: 5px; margin-bottom: 20px; }\n    .section-title { font-size: 1.8em; margin-bottom: 20px; border-bottom: 2px solid #e0e0e0; padding-bottom: 10px; }\n    .metric-box { text-align: center; background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\n    .metric-box h2 { font-size: 1.5em; margin: 0; }\n    .metric-box p { font-size: 1.2em; color: #666; margin: 0; }\n    .visual-card { background-color: #f9fafb; padding: 10px; border-radius: 5px; margin-bottom: 20px; }\n    </style>\n""", unsafe_allow_html=True)\n\n--- End of example.py ---\n\n\n--- Directory: modules ---\n--- Start of modules/dashboard.py ---\nimport streamlit as st\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom itertools import product\nfrom modules import utils, narrative  # Ensure you have the utils and narrative modules defined\nimport logging\nfrom openai import OpenAI\nimport os\n\n# Configure logging\nlogging.basicConfig(level=logging.INFO)\n\n# Custom CSS for better visuals and modern look\nst.markdown("""\n    <style>\n        body {\n            font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\n            background-color: #1E1E1E;\n            color: #D4D4D4;\n        }\n        .report-title {\n            font-size: 2.5rem;\n            color: #FFC300;\n            margin-top: 20px;\n            margin-bottom: 20px;\n        }\n        .section-header {\n            font-size: 1.8rem;\n            color: #FFD700;\n            margin-top: 20px;\n            margin-bottom: 10px;\n        }\n        .key-insights {\n            font-size: 1.2rem;\n            color: #E0E0E0;\n            background-color: #333333;\n            padding: 20px;\n            border-radius: 10px;\n            margin-top: 20px;\n        }\n        .metric {\n            font-size: 1.5rem;\n            font-weight: bold;\n            color: #FFD700;\n            margin: 10px 0;\n        }\n        .sidebar .sidebar-content {\n            background-color: #333333;\n            padding: 20px;\n            border-radius: 10px;\n        }\n        .sidebar .sidebar-content input, .sidebar .sidebar-content select {\n            background-color: #444444;\n            color: #D4D4D4;\n            border: none;\n            border-radius: 5px;\n            padding: 10px;\n        }\n        .sidebar .sidebar-content button {\n            background-color: #FFC300;\n            color: #1E1E1E;\n            border: none;\n            border-radius: 5px;\n            padding: 10px 20px;\n            margin-top: 10px;\n        }\n    </style>\n""", unsafe_allow_html=True)\n\n# Initialize OpenAI client\nopenai_client = OpenAI()\nopenai_client.api_key = os.getenv(\'OPENAI_API_KEY\')\nif not openai_client.api_key:\n    st.error("OpenAI API key is missing. Please set the OPENAI_API_KEY environment variable.")\n\n# Function to generate narrative summary using OpenAI GPT\ndef generate_narrative_summary(df):\n    prompt = f"Generate an executive summary for the following data:\\n{df.to_string(index=False)}"\n\n    try:\n        response = openai_client.chat.completions.create(\n            model="gpt-3.5-turbo",\n            messages=[\n                {"role": "system", "content": "You are a helpful assistant."},\n                {"role": "user", "content": prompt}\n            ],\n            max_tokens=200\n        )\n\n        # Check if the response has a \'choices\' field and if it\'s not empty\n        if response.choices:\n            summary = response.choices[0].message.content.strip()\n            return summary\n        else:\n            st.warning("OpenAI response did not contain a summary. Please try again later.")\n            return ""  # Return an empty string if there\'s no summary\n\n    except Exception as e:\n        logging.error(f"Error generating narrative summary: {str(e)}")\n        st.error(f"Error generating narrative summary. Please try again later.")\n        return "" \n\n# Function to generate predictive analytics \ndef generate_predictive_analytics(df):\n    df[\'Predicted_Demand_Score\'] = df[\'Demand Score\'] * 1.05  # Mock prediction logic\n    return df[[\'Feature\', \'Tagline\', \'Price\', \'Predicted_Demand_Score\']]\n\n# Function to personalize dashboard based on user preferences\ndef personalized_insights(user_preferences):\n    insights = f"Personalized insights based on preferences: {user_preferences}"\n    return insights\n\n# Function to set up alerts and notifications\ndef setup_alerts():\n    st.sidebar.header("Alerts and Notifications")\n    st.sidebar.text_input("Enter Alert Criteria", key="alert_criteria")\n    if st.sidebar.button("Set Alert"):\n        st.sidebar.success("Alert set successfully!")\n\n# Run the main dashboard application\ndef run_dashboard():\n    try:\n        st.markdown("<h1 class=\'report-title\'>Executive Dashboard - AI-Powered Demand Insights</h1>", unsafe_allow_html=True)\n\n        st.sidebar.markdown("<div class=\'sidebar-content\'>", unsafe_allow_html=True)\n        product_name = st.sidebar.text_input("Product Name:", placeholder="Enter the product name")\n        product_features = st.sidebar.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\n        tagline_options = st.sidebar.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\n        price_options_str = st.sidebar.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\n\n        try:\n            price_options = [float(x.strip()) for x in price_options_str.split(\',\')] if price_options_str else []\n            price_error = False\n        except ValueError:\n            price_error = True\n            price_options = []\n            st.sidebar.warning("Invalid price options. Please enter comma-separated numbers.")\n\n        st.sidebar.markdown("<h3 class=\'section-header\'>Simulation Configuration</h3>", unsafe_allow_html=True)\n        num_bots = st.sidebar.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\n        male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\n        income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\n        interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\n        interests_list = [i.strip() for i in interests.split(",")] if interests else []\n\n        if interests_list:\n            st.sidebar.markdown("<h3 class=\'section-header\'>Interests:</h3>", unsafe_allow_html=True)\n            st.sidebar.markdown(" ".join([f\'<span style="background-color: #FFD700; color: #1E1E1E; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\' for interest in interests_list]), unsafe_allow_html=True)\n\n        # Initialize df outside the conditional block\n        df = pd.DataFrame() \n\n        if st.sidebar.button("Calculate Demand") and not price_error:\n            if not all([product_name, product_features, tagline_options, price_options]):\n                st.warning("Please fill in all product details.")\n            else:\n                features = [x.strip() for x in product_features.split(\',\')]\n                taglines = [x.strip() for x in tagline_options.split(\',\')]\n                st.write(f"**Product Name:** {product_name}")\n                st.write(f"**Features:** {features}")\n                st.write(f"**Taglines:** {taglines}")\n                st.write(f"**Prices:** {price_options}")\n                st.write(f"**Number of Bots:** {num_bots}")\n                combinations = list(product(features, taglines, price_options))\n                st.write(f"**Combinations:** {combinations}")\n\n                progress_placeholder = st.empty()\n                try:\n                    df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\n                except Exception as e:\n                    st.error(f"Error during simulation: {str(e)}")\n                    logging.error(f"Error during simulation: {str(e)}")\n                    utils.log_error("Demand Meter", str(e))\n\n                if not df.empty:\n                    required_columns = [\'Feature\', \'Tagline\', \'Price\', \'Demand Score\']\n                    if not all(col in df.columns for col in required_columns):\n                        st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\n                        return\n\n                    st.markdown("<h2 class=\'section-header\'>Executive Summary</h2>", unsafe_allow_html=True)\n                    summary = generate_narrative_summary(df)\n                    st.markdown(f"<div class=\'key-insights\'>{summary}</div>", unsafe_allow_html=True)\n\n                    st.markdown("<h2 class=\'section-header\'>Detailed Analysis</h2>", unsafe_allow_html=True)\n                    fig = px.scatter(df, x=\'Price\', y=\'Demand Score\', color=\'Feature\', hover_data=[\'Tagline\'])\n                    st.plotly_chart(fig, use_container_width=True)\n\n                    heatmap_data = df.pivot_table(index="Feature", columns="Tagline", values="Demand Score")\n                    fig = go.Figure(data=go.Heatmap(z=heatmap_data.values, x=heatmap_data.columns, y=heatmap_data.index))\n                    st.plotly_chart(fig, use_container_width=True)\n\n                    # User Feedback\n                    st.markdown("<h2 class=\'section-header\'>User Feedback</h2>", unsafe_allow_html=True)\n                    feedback = st.text_area("Enter your feedback here:")\n                    if st.button("Submit Feedback"):\n                        utils.log_feedback(product_name, feedback)\n                        st.success("Thank you for your feedback!")\n\n        # Predictive Analytics (Now uses df even if not calculated)\n        st.markdown("<h2 class=\'section-header\'>Predictive Analytics</h2>", unsafe_allow_html=True)\n        if not df.empty:  # Check if df is populated\n            predictions = generate_predictive_analytics(df)\n            st.write(predictions)\n        else:\n            st.info("Please run a simulation to view predictive analytics.")\n\n        # Personalized Insights (Now uses df even if not calculated)\n        st.markdown("<h2 class=\'section-header\'>Personalized Insights</h2>", unsafe_allow_html=True)\n        user_preferences = st.text_input("Enter your preferences (comma-separated):", placeholder="Preference1, Preference2")\n        if user_preferences and not df.empty:  # Check for both preferences and data\n            insights = personalized_insights(user_preferences)\n            st.write(insights)\n        else:\n            st.info("Please run a simulation to view personalized insights.")\n\n        # Set up Alerts\n        setup_alerts()\n\n    except Exception as e:\n        logging.error(f"Error in run_dashboard: {str(e)}")\n        st.error(f"Error in run_dashboard: {str(e)}")\n\nif __name__ == "__main__":\n    run_dashboard()\n--- End of modules/dashboard.py ---\n\n--- Start of modules/visualizations.py ---\nimport streamlit as st\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ndef plot_demand_distribution(df):\n    st.write("### Demand Score Distribution")\n    fig, ax = plt.subplots(figsize=(10, 6))\n    sns.histplot(df[\'Demand Score\'], bins=20, kde=True, ax=ax)\n    st.pyplot(fig)\n\ndef plot_demand_heatmap(df):\n    st.write("### Demand Score Heatmap")\n    try:\n        heatmap_data = df.pivot_table(values=\'Demand Score\', index=\'Feature\', columns=\'Tagline\', aggfunc=\'mean\')\n        fig, ax = plt.subplots(figsize=(12, 8))\n        sns.heatmap(heatmap_data, annot=True, cmap="YlGnBu", ax=ax)\n        st.pyplot(fig)\n    except Exception as e:\n        st.error(f"Error creating heatmap: {str(e)}")\n\n--- End of modules/visualizations.py ---\n\n--- Start of modules/narrative.py ---\nimport streamlit as st\n\ndef generate_summary(df):\n    st.markdown("<div class=\'key-insights\'>", unsafe_allow_html=True)\n    best_combination = df.loc[df[\'Demand Score\'].idxmax()]\n    st.markdown(f"<p class=\'metric\'>Best Combination: Feature - {best_combination[\'Feature\']}, Tagline - {best_combination[\'Tagline\']}, Price - ${best_combination[\'Price\']}</p>", unsafe_allow_html=True)\n    st.markdown(f"<p class=\'metric\'>Highest Demand Score: {best_combination[\'Demand Score\']:.1f}</p>", unsafe_allow_html=True)\n\n    if df[\'Demand Score\'].min() < 70:\n        st.markdown("<p>Suggestions for Improvement:</p>", unsafe_allow_html=True)\n        st.markdown("<ul><li>Consider revising features, taglines, or prices to boost demand.</li></ul>", unsafe_allow_html=True)\n    st.markdown("</div>", unsafe_allow_html=True)\n\n--- End of modules/narrative.py ---\n\n--- Start of modules/live_polling.py ---\nimport streamlit as st\nimport pandas as pd\nimport random\nimport concurrent.futures\nimport math\nfrom modules import utils, results, analytics\nimport time  # Ensure the time module is imported\n\ndef run_live_polling():\n    """Runs the Live Polling section of the app."""\n    st.subheader("Live Polling")\n    st.write("**Real-time Results and Interactive Visualizations**")\n\n    # --- Live Polling Input ---\n    st.sidebar.subheader("Create Survey")\n    survey_question = st.sidebar.text_input("Enter your survey question:", "")\n    options = {f"option_{chr(65+i)}": st.sidebar.text_input(f"Enter option {chr(65+i)}:", "") for i in range(4)}\n    followups = [st.sidebar.text_input(f"Enter follow-up question {i+1}:", "") for i in range(2)]\n\n    # --- Live Polling Logic and Display ---\n    votes = {key: 0 for key in options.keys()}\n    if st.button("Start Poll"):\n        if not survey_question or not any(options.values()):\n            st.warning("Please enter a question and options.")\n        else:\n            selected_option = st.selectbox("Choose your option:", options.values())\n            if st.button("Vote"):\n                votes[selected_option] += 1\n\n            st.write(f"**Poll Results:**")\n            for option, count in votes.items():\n                st.write(f"- {option}: {count} votes")\n\n            # Simple timer (You\'ll likely replace this with real-time updates)\n            start_time = time.time()\n            while time.time() - start_time < 10: # 10 seconds for example\n                st.write(f"Time remaining: {10 - int(time.time() - start_time)} seconds")\n                st.experimental_rerun()\n\n    # --- Live Polling Input (Demographics) ---\n    st.sidebar.subheader("Specify Demographics")\n    male_percentage = st.sidebar.slider("Male Percentage", 0, 100, 50)\n    female_percentage = 100 - male_percentage\n    income_range = st.sidebar.slider("Income Range (in thousands)", 0, 500, (50, 150))\n\n    # Interest badges\n    interests = st.sidebar.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\n    interests_list = interests.split(",") if interests else []\n\n    if interests_list:\n        st.sidebar.markdown("### Interests:")\n        for interest in interests_list:\n            st.sidebar.markdown(\n                f"""<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest.strip()}</span>""",\n                unsafe_allow_html=True\n            )\n\n    num_bots = st.sidebar.number_input("Enter number of bots:", min_value=1, max_value=1000, value=100)\n\n    # Start button\n    start_button = st.sidebar.button("Start Survey Simulation")\n\n    # Simulation settings\n    MAX_CONCURRENT_THREADS = 25\n    batch_size = 25\n    num_batches = math.ceil(num_bots / batch_size)\n\n    # Survey simulation logic\n    if start_button:\n        bot_data = utils.generate_survey_data(int(num_bots), male_percentage, income_range, interests_list)\n\n        # Sentiment Analysis\n        sentiment_results = analytics.analyze_sentiment([data[\'persona\'] for data in bot_data.values()])\n        st.write("### Sentiment Analysis")\n        sentiment_df = pd.DataFrame(sentiment_results)\n        st.dataframe(sentiment_df)\n\n        # Display Results\n        results.display_survey_results(bot_data)\n--- End of modules/live_polling.py ---\n\n--- Start of modules/price_sensitivity.py ---\nimport streamlit as st\nimport pandas as pd\nimport json\n\ndef run_price_sensitivity():\n    """Runs the Price Sensitivity section of the app."""\n    st.subheader("Price Sensitivity")\n    st.write("**Analyze the impact of different prices on demand**")\n\n    # --- Price Sensitivity Analysis ---\n    price_points_str = st.text_input("Enter Price Points (comma-separated):")\n\n    # Validate and parse price points\n    try:\n        price_points = [float(x.strip()) for x in price_points_str.split(\',\')] if price_points_str else []\n        price_error = False\n    except ValueError:\n        price_error = True\n        price_points = []\n\n    if price_error:\n        st.warning("Invalid price points. Please enter comma-separated numbers.")\n\n    if st.button("Run Price Sensitivity Analysis") and not price_error:\n        if not price_points:\n            st.warning("Please enter price points.")\n        else:\n            st.write(f"**Price Points:** {price_points}")\n\n            # Simulate retrieving responses from a database\n            responses = []  # Replace with actual database call\n            if responses:\n                # Placeholder for actual price sensitivity analysis\n                st.write("**Analysis Results:**")\n                for point in price_points:\n                    st.write(f"At ${point}, the demand is...")  # Placeholder for actual logic\n\n                # Example of Van Westendorp Price Sensitivity Analysis\n                st.write("**Van Westendorp Price Sensitivity Analysis:**")\n                optimal_price_range = (min(price_points), max(price_points))  # Placeholder for actual analysis\n                st.write(f"Optimal Price Range: {optimal_price_range}")\n\n                # Example of Gabor-Granger Price Sensitivity Analysis\n                st.write("**Gabor-Granger Price Sensitivity Analysis:**")\n                demand_at_price = {point: random.randint(50, 100) for point in price_points}  # Placeholder\n                st.write(f"Demand at Different Price Points: {demand_at_price}")\n\n                # Chart for Gabor-Granger Results\n                option = {\n                    "title": {"text": "Gabor-Granger Price Sensitivity", "left": "center"},\n                    "xAxis": {"type": "category", "data": price_points},\n                    "yAxis": {"type": "value"},\n                    "series": [\n                        {"data": list(demand_at_price.values()), "type": "bar", "showBackground": True, "backgroundStyle": {"color": \'rgba(180, 180, 180, 0.2)\'}}\n                    ]\n                }\n                st.echarts(options=json.dumps(option), height="400px")\n\n--- End of modules/price_sensitivity.py ---\n\n--- Start of modules/old.py ---\nimport streamlit as st\nimport pandas as pd\nfrom itertools import product\nfrom modules import utils, visualizations, narrative\nfrom autogen import AssistantAgent, UserProxyAgent\n\ndef run_dashboard():\n    st.title("Executive Dashboard - AI-Powered Demand Insights")\n\n    product_name = st.text_input("Product Name:", placeholder="Enter the product name")\n    product_features = st.text_area("Enter Product Features (comma-separated):", placeholder="Feature1, Feature2, Feature3")\n    tagline_options = st.text_area("Enter Tagline Options (comma-separated):", placeholder="Tagline1, Tagline2, Tagline3")\n    price_options_str = st.text_input("Enter Price Options (comma-separated):", placeholder="9.99, 19.99, 29.99")\n\n    try:\n        price_options = [float(x.strip()) for x in price_options_str.split(\',\')] if price_options_str else []\n        price_error = False\n    except ValueError:\n        price_error = True\n        price_options = []\n        st.warning("Invalid price options. Please enter comma-separated numbers.")\n\n    st.header("Simulation Configuration")\n    num_bots = st.number_input("Enter number of bots for simulation:", min_value=1, max_value=1000, value=100)\n    male_percentage = st.slider("Male Percentage", 0, 100, 50)\n    income_range = st.slider("Income Range (in thousands)", 0, 500, (50, 150))\n    interests = st.text_input("Enter Interests (comma-separated):", placeholder="Golf, Yoga, Basketball")\n    interests_list = [i.strip() for i in interests.split(",")] if interests else []\n\n    if interests_list:\n        st.markdown("### Interests:")\n        st.markdown(" ".join([f\'<span style="background-color: #FF6F61; color: white; padding: 5px 10px; border-radius: 5px; margin: 5px;">{interest}</span>\' for interest in interests_list]), unsafe_allow_html=True)\n\n    if st.button("Calculate Demand") and not price_error:\n        if not all([product_name, product_features, tagline_options, price_options]):\n            st.warning("Please fill in all product details.")\n        else:\n            features = [x.strip() for x in product_features.split(\',\')]\n            taglines = [x.strip() for x in tagline_options.split(\',\')]\n            st.write(f"**Product Name:** {product_name}")\n            st.write(f"**Features:** {features}")\n            st.write(f"**Taglines:** {taglines}")\n            st.write(f"**Prices:** {price_options}")\n            st.write(f"**Number of Bots:** {num_bots}")\n            combinations = list(product(features, taglines, price_options))\n            st.write(f"**Combinations:** {combinations}")\n\n            progress_placeholder = st.empty()\n            try:\n                df = utils.process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress_placeholder)\n            except Exception as e:\n                st.error(f"Error during simulation: {str(e)}")\n                utils.log_error("Demand Meter", str(e))\n                return\n\n            if df.empty:\n                st.error("No valid data was generated. Please check your inputs and try again.")\n                return\n\n            required_columns = [\'Feature\', \'Tagline\', \'Price\', \'Demand Score\']\n            if not all(col in df.columns for col in required_columns):\n                st.error(f"Required columns are missing. Expected: {required_columns}. Found: {df.columns.tolist()}")\n                return\n\n            st.header("Executive Summary")\n            narrative.generate_summary(df)\n\n            st.header("Detailed Analysis")\n            visualizations.plot_demand_distribution(df)\n            visualizations.plot_demand_heatmap(df)\n\n            st.header("User Feedback")\n            feedback = st.text_area("Enter your feedback here:")\n            if st.button("Submit Feedback"):\n                utils.log_feedback(product_name, feedback)\n                st.success("Thank you for your feedback!")\n\n            st.header("Automated Insights")\n            config_list = [{"model": "gpt-3.5-turbo"}]\n            assistant = AssistantAgent(name="Assistant", llm_config={"config_list": config_list})\n            user_proxy = UserProxyAgent(name="User_proxy", code_execution_config={"work_dir": "coding"})\n            try:\n                insights = utils.generate_insights(assistant, user_proxy, df.to_dict(orient=\'records\'))\n                st.write(insights)\n            except Exception as e:\n                st.error(f"Failed to generate insights: {e}")\n\nif __name__ == "__main__":\n    run_dashboard()\n\n--- End of modules/old.py ---\n\n--- Start of modules/analytics.py ---\nimport pandas as pd\nimport random\n\ndef van_westendorp_analysis(price_points, responses):\n    """Performs Van Westendorp price sensitivity analysis."""\n    too_expensive = []\n    too_cheap = []\n    just_right = []\n    too_expensive_data = []\n    too_cheap_data = []\n    just_right_data = []\n    for response in responses:\n        for i, price in enumerate(price_points):\n            if response == "Too expensive":\n                too_expensive_data.append(price)\n                too_expensive.append(i)\n            elif response == "Too cheap":\n                too_cheap_data.append(price)\n                too_cheap.append(i)\n            elif response == "Just right":\n                just_right_data.append(price)\n                just_right.append(i)\n\n    # Calculate Optimal Price Range\n    too_expensive_avg = sum(too_expensive_data) / len(too_expensive_data) if too_expensive_data else 0\n    too_cheap_avg = sum(too_cheap_data) / len(too_cheap_data) if too_cheap_data else 0\n    just_right_avg = sum(just_right_data) / len(just_right_data) if just_right_data else 0\n\n    optimal_price_range = (too_cheap_avg, too_expensive_avg)\n    return optimal_price_range, too_expensive, too_cheap, just_right\n\ndef gabor_granger_analysis(price_points, responses):\n    """Performs Gabor-Granger price sensitivity analysis."""\n    demand_at_price = {}\n    for i, price in enumerate(price_points):\n        demand_at_price[price] = responses.count(i)\n    return demand_at_price\n\ndef analyze_sentiment(responses):\n    """Performs sentiment analysis on survey responses."""\n    sentiments = []\n    for response in responses:\n        if isinstance(response, str):\n            prompt = f"""Analyze the sentiment of the following text:\n            "{response}"\n            Provide the sentiment as "positive", "negative", or "neutral".\n            """\n            sentiment = llm(prompt)\n            sentiments.append({"Response": response, "Sentiment": sentiment})\n    return sentiments\n--- End of modules/analytics.py ---\n\n--- Start of modules/__init__.py ---\n\n--- End of modules/__init__.py ---\n\n--- Start of modules/results.py ---\nimport streamlit as st\nimport pandas as pd\nimport random\n\ndef display_survey_results(bot_data):\n    """Displays the survey results in a structured format."""\n    df = pd.DataFrame(bot_data)\n    response_tally = df[\'response\'].value_counts()\n    st.write("### Survey Results")\n    st.bar_chart(response_tally)\n\n    # Key Insights\n    st.write("### Key Insights")\n    most_popular = response_tally.idxmax()\n    st.write(f"**Most popular option**: {most_popular} ({options[f\'option_{most_popular.lower()}\']})")\n    st.write(f"**Average score for \'{followups[0]}\'**: {df[\'followups\'].apply(lambda x: x[0]).mean():.2f}/10")\n    st.write(f"**Most common response to \'{followups[1]}\'**: {df[\'followups\'].apply(lambda x: x[1]).mode()[0]}")\n\n    # Sample Personas\n    st.write("### Sample Personas")\n    for i, (bot, data) in enumerate(random.sample(list(bot_data.items()), 5)):\n        with st.expander(f"Persona {i+1}"):\n            st.write(data[\'persona\'])\n            st.write(f"Response: {data[\'response\']}")\n--- End of modules/results.py ---\n\n--- Start of modules/personas.py ---\nimport os\nimport random\nfrom langchain_community.llms import OpenAI\n\n# --- OpenAI API ---\nllm = OpenAI(temperature=0.7)\n\ndef generate_persona(income_range, interests):\n    """Generates a persona based on income and a list of interests."""\n    prompt = f"""Create a persona with the following elements:\n    1. Identity: Name, occupation, background\n    2. Characteristics: Personality traits, communication style, beliefs, values\n    3. Knowledge and expertise: Specific areas of knowledge or expertise\n    4. Experiences: Relevant past experiences, achievements, or challenges\n    5. Motivations: Goals, desires, or driving forces\n    6. Emotional and relational aspects: Emotional state, level of empathy, approach to relationships\n    7. Context: Specific setting or situation\n\n    The persona should have an income between ${income_range[0]}k and ${income_range[1]}k. \n\n    {random.choice([\'They like \', \'They might like \', \'They dont really care for \'])} {random.sample(interests, random.randint(0, len(interests)))}\n\n    Provide the information in a structured format.\n    """\n\n    response = llm(prompt)\n    return response.strip()\n--- End of modules/personas.py ---\n\n--- Start of modules/questions.py ---\nimport os\nimport streamlit as st\nfrom pymongo import MongoClient\n\n# --- MongoDB Connection ---\nclient = MongoClient(os.environ["MONGODB_URI"])\ndb = client.get_database("Omnivia")\nresponses_collection = db.get_collection("responses")\n\ndef create_survey_question():\n    """Creates a survey question section with question type selection and conditional logic."""\n    st.subheader("Create Survey Question")\n    question_type = st.selectbox("Select Question Type", ["Multiple Choice", "Text", "Rating Scale", "Dropdown"])\n    question_text = st.text_input("Enter Question Text:")\n\n    options = []\n    if question_type in ["Multiple Choice", "Dropdown"]:\n        num_options = st.number_input("Number of Options", min_value=2, max_value=10, value=4)\n        for i in range(int(num_options)):\n            options.append(st.text_input(f"Option {i+1}:"))\n\n    # Conditional Logic (Dynamically Show/Hide Questions)\n    condition_enabled = st.checkbox("Enable Conditional Logic")\n    if condition_enabled:\n        target_question = st.selectbox("Target Question", options, index=0)\n        condition_value = st.text_input("Condition Value (e.g., Option A)")\n        st.write(f"**Conditional Logic:**  If the answer to the previous question is \'{condition_value}\', then the following question will be shown:")\n        # ... (Implement logic to show/hide questions dynamically) ...\n\n    # Store the created question in the database\n    if st.button("Add Question"):\n        question_data = {\n            "type": question_type,\n            "text": question_text,\n            "options": options if options else None,\n            "condition": {\n                "enabled": condition_enabled,\n                "target_question": target_question if condition_enabled else None,\n                "value": condition_value if condition_enabled else None\n            }\n        }\n        responses_collection.insert_one(question_data)  # Insert the question to the MongoDB collection\n        st.success("Question added successfully.")\n--- End of modules/questions.py ---\n\n--- Start of modules/utils.py ---\nimport random\nimport pandas as pd\nimport logging\nimport autogen\n\n# Setup logging\nlogging.basicConfig(level=logging.INFO, format=\'%(asctime)s %(levelname)s:%(message)s\')\nlogger = logging.getLogger(__name__)\n\nfile_handler = logging.FileHandler(\'app_debug.log\')\nfile_handler.setLevel(logging.DEBUG)\nfile_handler.setFormatter(logging.Formatter(\'%(asctime)s %(levelname)s:%(message)s\'))\n\nlogger.addHandler(file_handler)\n\ndef generate_survey_data(num_bots, male_percentage, income_range, interests_list):\n    try:\n        data = [{\'gender\': \'male\' if random.random() < male_percentage / 100 else \'female\',\n                 \'income\': random.randint(income_range[0], income_range[1]) * 1000,\n                 \'interests\': random.sample(interests_list, k=min(len(interests_list), 3))}\n                for _ in range(num_bots)]\n        logger.info(f"Generated survey data: {data[:5]}...")  # Log a sample of generated data\n        return data\n    except Exception as e:\n        logger.error(f"Error generating survey data: {str(e)}")\n        raise\n\ndef simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index):\n    try:\n        logger.info(f"Starting simulation for feature: {feature}, tagline: {tagline}, price: {price}")\n        bot_data = generate_survey_data(num_bots, male_percentage, income_range, interests_list)\n        demand_score = sum(random.randint(60, 90) for _ in bot_data) / len(bot_data)\n        response_data = {\n            "Feature": feature,\n            "Tagline": tagline,\n            "Price": float(price),\n            "Demand Score": demand_score\n        }\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation.log"})\n        autogen.runtime_logging.log_event(name="demand_simulation", event=response_data, source="demand_meter")\n        autogen.runtime_logging.stop()\n        progress.progress((current_index + 1) / total_combinations)\n        logger.info(f"Simulation successful for feature: {feature}, tagline: {tagline}, price: {price}")\n        return response_data\n    except Exception as e:\n        error_data = {"Feature": feature, "Tagline": tagline, "Price": price, "Error": str(e)}\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "demand_simulation_errors.log"})\n        autogen.runtime_logging.log_event(name="demand_simulation_error", event=error_data, source="demand_meter")\n        autogen.runtime_logging.stop()\n        logger.error(f"Error in simulate_demand for feature: {feature}, tagline: {tagline}, price: {price} - {str(e)}")\n        return None\n\ndef process_simulation(combinations, num_bots, male_percentage, income_range, interests_list, progress):\n    results = []\n    total_combinations = len(combinations)\n    for current_index, (feature, tagline, price) in enumerate(combinations):\n        result = simulate_demand(feature, tagline, price, num_bots, male_percentage, income_range, interests_list, progress, total_combinations, current_index)\n        if result:\n            results.append(result)\n        progress.progress((current_index + 1) / total_combinations)\n    if not results:\n        autogen.runtime_logging.start(logger_type="file", config={"filename": "process_simulation_errors.log"})\n        autogen.runtime_logging.log_event(name="process_simulation_error", event={"Error": "No valid results returned"}, source="demand_meter")\n        autogen.runtime_logging.stop()\n        logger.warning("No valid results returned in process_simulation.")\n    return pd.DataFrame(results)\n\ndef update_progress(progress, value):\n    blocks = int(value / 5)\n    blocks_html = "".join(["<div class=\'progress-block\'></div>" for _ in range(blocks)])\n    progress.markdown(f"""\n        <div class="progress-container">\n            <div class="progress-bar" style="width:{value}%;">\n                <div class="progress-blocks">{blocks_html}</div>\n            </div>\n        </div>\n        <div class="progress-text">{value}%</div>\n    """, unsafe_allow_html=True)\n\ndef generate_insights(assistant, user_proxy, df_dict):\n    insights_prompt = f"Analyze the demand scores for the following combinations and provide insights:\\n{df_dict}"\n    user_proxy.initiate_chat(assistant, message=insights_prompt)\n    return assistant.last_message()["content"]\n\ndef log_feedback(product_name, feedback):\n    feedback_data = {"Product Name": product_name, "Feedback": feedback}\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "user_feedback.log"})\n    autogen.runtime_logging.log_event(name="user_feedback", event=feedback_data, source="demand_meter")\n    autogen.runtime_logging.stop()\n\ndef log_error(section, error_message):\n    error_data = {"Section": section, "Error": error_message}\n    autogen.runtime_logging.start(logger_type="file", config={"filename": "app_errors.log"})\n    autogen.runtime_logging.log_event(name="app_error", event=error_data, source="omnivia_survey_platform")\n    autogen.runtime_logging.stop()\n    logger.error(f"Error in {section}: {error_message}")\n\n--- End of modules/utils.py ---\n\n'}